{"version":3,"sources":["Components/Bracket.module.css","Components/Navigation.module.css","img/8ball.jpg","img/chess.jpg","img/icons/vbg1.png","img/icons/sword.svg","Services/Query.js","Services/config.js","Pages/Admin.jsx","Components/MainStyles.js","Pages/Landing.jsx","Components/Navigation.jsx","Components/Cards.jsx","Pages/Dashboard.jsx","Components/DataTable.jsx","Pages/History.jsx","Pages/Leaderboard.jsx","Pages/Match.jsx","Pages/Profile.jsx","Pages/Tournament.jsx","Pages/Wallet.jsx","Pages/NotFound.jsx","Components/TournamentBracket.jsx","App.js","serviceWorker.js","index.js","img/default.jpg","Components/Cards.module.css"],"names":["module","exports","Prev","NavProfileCard","__webpack_require__","p","HostAddress","host","JsonQuery","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","type","url","info","settings","response","json","wrap","_context","prev","next","method","headers","Accept","Content-Type","credentials","body","JSON","stringify","fetch","concat","sent","status","console","log","abrupt","stop","this","_x","_x2","_x3","apply","arguments","PostQuery","_ref2","_callee2","_context2","_x4","_x5","JsonQueryAdmin","_ref3","_callee3","_context3","mode","cache","_x6","_x7","_x8","JsonQueryAuth","_ref4","_callee4","_context4","logautx","getCookie","logauty","logauti","_x9","_x10","_x11","PostQueryAuth","_ref5","_callee5","_context5","_x12","_x13","SetCookie","key","value","document","cookie","cname","name","ca","decodeURIComponent","split","i","length","c","charAt","substring","indexOf","Admin","_Component","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setActive","e","setState","active","state","inherits","createClass","panel","react_default","createElement","Admin_GameMenu","Admin_TournamentMenu","Fragment","index_es","container","style","minHeight","item","md","width","inset","primary","onClick","Component","PlayerCounts","text","Balances","TournamentMenu","_this2","load","res","games","map","g","_id","tournaments_ongoing","tournaments_yet_to_start","clearMsg","msg_tournament_game_id","msg_tournament_player_count","msg_tournament_balance","msg_tournament_rules","msg_tournament_entry_fee","handleChange","defineProperty","target","onDrop","picture","tournament_image","onFileUpload","files","addTournament","fd","preventDefault","isCalling","FormData","append","rules","balance","player_count","entry_fee","game","errors","err","fieldName","param","msg","alert","player_counts","balances","alignItems","justify","xs","margin","padding","onSubmit","encType","select","label","onChange","helperText","error","option","multiline","opacity","position","className","variant","height","overflowY","button","src","image","secondary","platform","PlatformSelection","GameMenu","_this3","msg_game_name","msg_game_platform","msg_game_requirement","game_image","addGame","game_name","game_platform","game_requirement","message","platform_values","game_player_count","msg_game_image","gameName","readonly","id","colors","blackLight","greenLight","green","myTheme","createMuiTheme","palette","light","main","dark","textColor","typography","useNextVariants","appBar","card","titleColor","subtitleColor","overlay","backgroundColor","paper","ColorPalate","MainStyles","nav","menuButton","marginLeft","marginRight","color","logo","sideNav","sideNavList","block","heading","fontSize","fontWeight","boxChallenger","window","innerWidth","boxGame","clipPath","expansion","header","gameBtn","zIndex","top","right","transform","gridList","minWidth","maxHeight","centerContainer","_centerContainer","display","justifyContent","textAlign","Register","msg_full_name","msg_email","msg_password","msg_confirm","event","register","_this$state","full_name","email","password","confirm","SignIn","signIn","_this2$state","connection_string","history","push","Landing","_Component3","toggleRegister","isRegister","toggleSignIn","isSignIn","redrt","open","onClose","Landing_Register","anchor","Landing_SignIn","spacing","viewBox","heigth","x1","y1","x2","y2","require","alt","Transition","Slide_default","assign","direction","ChallengeBets","Logo","Navigation","x","folder","showGameBtn","isOpen","data","toggleDrawer","bind","assertThisInitialized","aria-label","icons_index_es","Navigation_Logo","Navigation_GameBtn","Navigation_SideMenu","GameBtn","search","opponents","game_id","list","filter","stage","selectOpponent","nameHint","self","openChallange","op","opponent","challenge","_ref6","_callee6","bet","_context6","challenger","challenged","toggleChallenge","bets","dialogContent","dialogTitle","cellHeight","cols","title","subtitle","autoComplete","marginTop","TransitionComponent","keepMounted","SideMenu","_ref7","styles","Link","to","textDecoration","ChallengeCard","acceptChallenge","match_id","cancelChallenge","isChallenger","marginBottom","bCard","MatchCard","_Component2","_getPrototypeOf2","_len","args","Array","_key","redirect","_this$props","lg","cCard","TournamentCard","toggleJoin","isParticipating","tournament_id","enterTournament","joinTournament","gameCard","GameCard","_Component4","_this4","toggleGame","removeGame","toggleAddGame","isAddGame","addGameSubmit","contact_string","content","requirement","Dashboard","gamePocket","gameList","challenges","matches","feeds","ch","isTournament","is_tournament","m","tournamentMatches","isgameSelect","gameSelect","r","addGames","classList","remove","theme","Navigation_Navigation","defaultExpanded","expandIcon","ExpandMore_default","clng","Cards_ChallengeCard","Cards_MatchCard","Cards_GameCard","objectSpread","MatchTable","match_results","handleChangePage","page","handleChangeRowsPerPage","rowsPerPage","columns","column","slice","row","component","scope","rowsPerPageOptions","count","backIconButtonProps","nextIconButtonProps","onChangePage","onChangeRowsPerPage","WalletTable","transaction_log","bp","date","History","overflowX","DataTable_MatchTable","Leaderboard","champions","achieves","subheader","champ","img","rank","leader_point","socket","openSocket","LoadChats","chat_id","cb","responseUrl","on","Match","sender","time","myId","is_c","chatVisible","toggleAdmitDefeat","isAdmitDefeat","toggleClaimVictory","isClaimVectory","claimVictory","imageFile","admitDefeat","m_id","urlFragments","location","href","_React$createElement","Match_ChatBox","aria-labelledby","ChatBox","messages","chat","chatbox","current","undefined","scrollTop","scrollHeight","emit","chatId","sendMsg","col","React","createRef","ref","Profile","res1","isDataAvailable","user","match","level","toggleChangePassword","isChangePassword","msg_new_password","changePassword","new_password","Profile_ProfileCard","isJenuine","Profile_InfoCard","OtherProfile","user_id","ProfileCard","toggleChangeImage","isChangeImage","toggleChangeName","isChangeName","msg_name","changeImage","changeImageProgress","reload","changeName","changeNameProgress","newName","cahangeNameProgress","background","gutterBottom","size","InfoCard","Info","Balance","m_level","leader_points","next_level","m_next","total_winning","total_bp_win","total_wins","m_win","total_matches","m_match","Percents","m_levelExpPercent","win_persentage","m_average","entries","inf","replace","space","thickness","Tournament","isInTournament","Tournament_TournamentInSide","Tournament_TournamentOutSide","TournamentOutSide","not_participating","tournaments","participating","tour","Cards_TournamentCard","TournamentInSide","players","prize1","prize2","capacity","changeTab","tabId","handleChangeIndex","index","Tournament_TournamentPlayers","indicatorColor","react_swipeable_views_lib_default","onChangeIndex","Tournament_TournamentBracket","TournamentBracket","_this5","bracket","tree","rounds","$","brackets","titles","color_title","border_color","color_player","bg_player","color_player_hover","bg_player_hover","border_radius_player","border_radius_lines","TournamentPlayers","player","Wallet","DataTable_WalletTable","NotFound","StyleSheet","bracketContainer","overflow","flexDirection","flex","border","boxShadow","Bracket","BracketStyle","App","Switch","Route","exact","path","Path","Boolean","hostname","ReactDOM","render","BrowserRouter","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c4a41d2f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Prev\":\"Bracket_Prev__1x7b0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavProfileCard\":\"Navigation_NavProfileCard__2aSZZ\"};","module.exports = __webpack_public_path__ + \"static/media/8ball.c285721f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chess.708c03cc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/vbg1.75071ebe.png\";","module.exports = __webpack_public_path__ + \"static/media/sword.c7cab733.svg\";","// const config = require('./config.json')(process.env.REACT_APP_ENV || 'dev'); \nimport {config} from \"./config\";\nlet constant = config[process.env.REACT_APP_ENV || 'dev'];\nexport const HostAddress = constant.host; \n\nexport const JsonQuery = async (type, url, info) => {\n    const settings = {\n        method: type,\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n        credentials: 'same-origin'\n    };\n\n    if (type === 'post') settings.body = JSON.stringify(info)\n\n    const response = await fetch(`${HostAddress}api/${url}`, settings)\n    if (response.status !== 200) {\n        console.log(`unable to query:${url}`)\n        return { status: 100 }\n    }\n    const json = await response.json()\n    return json\n}\n\nexport const PostQuery = async (url, body) => {\n    const settings = {\n        method: 'POST',\n        headers: {\n        },\n        credentials: 'same-origin',\n        body: body\n    };\n    const response = await fetch(`${HostAddress}api/${url}`, settings)\n    if (response.status !== 200) {\n        console.log(`unable to query:${url}`)\n        return { status: 100 }\n    }\n    const json = await response.json()\n    return json\n}\n\n\nexport const JsonQueryAdmin = async (type, url, info) => {\n    const settings = {\n        method: type,\n        mode: \"cors\", // no-cors, cors, *same-origin\n        cache: \"no-cache\",\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n        credentials: 'same-origin',\n        body: JSON.stringify(info)\n    };\n\n    const response = await fetch(`${HostAddress}api/${url}`, settings)\n    if (response.status !== 200) {\n        console.log(`unable to query:${url}`)\n        return { status: 100 }\n    }\n    const json = await response.json()\n    return json\n}\n\n\nexport const JsonQueryAuth = async (type, url, info) => {\n    const settings = {\n        method: type,\n        mode: \"cors\", // no-cors, cors, *same-origin\n        cache: \"no-cache\",\n        headers: {\n            Accept: 'application/json',\n            'logautx' : `${getCookie('logautx')}`,\n            'logauty' : `${getCookie('logauty')}`,\n            'logauti' : `${getCookie('logauti')}`,\n            'Content-Type': 'application/json',\n        },\n        credentials: 'same-origin',\n        body: JSON.stringify(info)\n    };\n\n    const response = await fetch(`${HostAddress}api/${url}`, settings)\n    if (response.status !== 200) {\n        console.log(`unable to query:${url}`)\n        return { status: 100 }\n    }\n    const json = await response.json()\n    return json\n}\n\nexport const PostQueryAuth = async ( url, body) => {\n    const settings = {\n        method: 'POST',\n        mode: \"cors\", // no-cors, cors, *same-origin\n        cache: \"no-cache\",\n        headers: {\n            'logautx' : `${getCookie('logautx')}`,\n            'logauty' : `${getCookie('logauty')}`,\n            'logauti' : `${getCookie('logauti')}`\n        },\n        credentials: 'same-origin',\n        body: body\n    };\n\n    const response = await fetch(`${HostAddress}api/${url}`, settings)\n    if (response.status !== 200) {\n        console.log(`unable to query:${url}`)\n        return { status: 100 }\n    }\n    const json = await response.json()\n    return json\n}\n\nexport const AuthData = () => {\n    return {\n        logautx: getCookie('logautx'),\n        logauty: getCookie('logauty'),\n        logauti: getCookie('logauti')\n    }\n}\n\nexport const SetCookie = (key, value) => {\n    document.cookie = `${key}=${value};`;\n}\nexport const getCookie = (cname) => {\n    var name = cname + \"=\";\n    var decodedCookie = decodeURIComponent(document.cookie);\n    var ca = decodedCookie.split(';');\n    for (var i = 0; i < ca.length; i++) {\n        var c = ca[i];\n        while (c.charAt(0) == ' ') {\n            c = c.substring(1);\n        }\n        if (c.indexOf(name) == 0) {\n            return c.substring(name.length, c.length);\n        }\n    }\n    return \"\";\n}","export const config = {\n    \"dev\":{\n        \"host\" : \"http://localhost:3001/\"\n    },\n    \"prod\":{\n        \"host\" : \"http://159.89.163.24/\"\n    }\n}","import React, { Component } from 'react'\n\nimport { PostQuery, JsonQueryAdmin, HostAddress } from '../Services/Query'\n\nimport { Grid, Paper, } from '@material-ui/core'\nimport { Menu, MenuItem, MenuList, List, ListItem, ListItemText, Avatar } from '@material-ui/core'\nimport { TextField, Button, LinearProgress } from '@material-ui/core'\nimport ImageUploader from 'react-images-upload'\n\n\nexport class Admin extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            active : 'games'\n        }\n    }\n    setActive = name => e => {\n        this.setState({\n            active : name\n        })\n    }\n\n\n    render() {\n\n        let panel\n        switch(this.state.active) {\n            case 'games':\n            panel = <GameMenu />\n            break;\n            case 'tournaments':\n            panel = <TournamentMenu />\n            break;\n        }\n\n        return (\n            <React.Fragment>\n                <Grid container style={{ minHeight: '100vh' }}>\n                    <Grid item container md={3}>\n                        <Paper style={{ width: '100%' }}>\n                            <MenuList >\n                                <MenuItem >\n                                    <ListItemText inset primary=\"games\" onClick={this.setActive('games')}/>\n                                </MenuItem>\n                                <MenuItem >\n                                    <ListItemText inset primary=\"tournaments\" onClick={this.setActive('tournaments')}/>\n                                </MenuItem>\n                                <MenuItem >\n                                    <ListItemText inset primary=\"descitions\" />\n                                </MenuItem>\n                                <MenuItem >\n                                    <ListItemText inset primary=\"Inbox\" />\n                                </MenuItem>\n                            </MenuList>\n                        </Paper>\n                    </Grid>\n                    <Grid item container md={9}>\n                        {panel}\n                    </Grid>\n                </Grid>\n            </React.Fragment>\n        )\n    }\n}\n\nconst PlayerCounts = [\n    { text: '4', value: 4 },\n    { text: '8', value: 8 },\n    { text: '16', value: 16 },\n    { text: '32', value: 32 },\n]\nconst Balances = [10, 20, 50, 100, 200, 500]\n\nclass TournamentMenu extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isCalling: false,\n            player_counts: PlayerCounts,\n            entry_fee:'',\n            balances: Balances,\n            games: [],\n            tournaments_ongoing: [],\n            tournaments_yet_to_start: [],\n            game: '',\n            player_count: 4,\n            balance: 10,\n            rules: '',\n            msg_tournament_game_id: '',\n            msg_tournament_player_count: '',\n            msg_tournament_balance: '',\n            msg_tournament_rules: '',\n            msg_tournament_entry_fee: '',\n            tournament_image:''\n        }\n    }\n    componentDidMount() {\n        this.load()\n    }\n    load = async () => {\n        const res = await JsonQueryAdmin('post', 'admin/tournament', {})\n        console.log(res)\n        if (res.status === 'ok') {\n\n            this.setState({\n                games: res.games.map(g => {\n                    return {\n                        text: g.name,\n                        value: g._id\n                    }\n                }),\n                tournaments_ongoing: res.tournaments_ongoing,\n                tournaments_yet_to_start: res.tournaments_yet_to_start\n            })\n        }\n    }\n    clearMsg = () => {\n        this.setState({\n            msg_tournament_game_id: '',\n            msg_tournament_player_count: '',\n            msg_tournament_balance: '',\n            msg_tournament_rules: '',\n            msg_tournament_entry_fee: ''\n        });\n    }\n    handleChange = name => e => {\n        this.setState({\n            [name]: e.target.value\n        })\n    }\n    onDrop = picture => {\n        this.setState({\n            tournament_image: picture,\n        });\n        console.log(picture)\n    }\n    onFileUpload = e => {\n        this.setState({\n            tournament_image: e.target.files[0]\n        })\n    }\n    addTournament = async e => {\n        e.preventDefault();\n        this.setState({ isCalling: true })\n        // const {game, rules, balance, player_count,entry_fee,tournament_image } = this.state\n        let fd = new FormData()\n        fd.append('image', this.state.tournament_image)\n        fd.append('rules', this.state.rules)\n        fd.append('balance', this.state.balance)\n        fd.append('player_count', this.state.player_count)\n        fd.append('entry_fee', this.state.entry_fee)\n        fd.append('game_id', this.state.game)\n        const res = await PostQuery('admin/tournament/create', fd)\n\n        // const res = await JsonQueryAdmin('post','admin/tournament/create',{\n        //     game_id : game, rules, balance, player_count,entry_fee\n        // })\n        console.log('form submitted')\n        this.setState({ isCalling: false })\n        console.log(res);\n        this.clearMsg();\n        if (res.errors) {\n            res.errors.map(err => {\n                const fieldName = 'msg_tournament_' + err.param\n                this.setState({ [fieldName]: err.msg })\n            });\n        } else {\n            alert(\"Tournament created successfully\");\n            this.setState ({\n                game: '',\n                player_count: 4,\n                balance: 0,\n                rules: '',\n                entry_fee:''\n            });\n            this.load();\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Grid container alignItems='center' justify='center'>\n                    <Grid item xs={12}>\n                        <Paper style={{ margin: '20px', padding: '20px' }}>\n                            <h2>Add Tournament</h2>\n                            {this.state.isCalling ? <LinearProgress /> : ''}\n                            <form onSubmit={this.addTournament} encType=\"multipart/form-data\">\n                                <Grid container alignItems='center' justify='center'>\n                                    <Grid item xs={12} md={6} >\n                                        <TextField style={{ margin: '1vw', width: '90%' }}\n                                            select\n                                            label=\"Select Game\"\n                                            value={this.state.game}\n                                            onChange={this.handleChange('game')}\n                                            helperText={this.state.msg_tournament_game_id}\n                                            error={this.state.msg_tournament_game_id.length > 0}\n                                        >\n                                            {this.state.games.map(option => (\n                                                <MenuItem key={option.value} value={option.value}>\n                                                    {option.text}\n                                                </MenuItem>\n                                            ))}\n                                        </TextField>\n                                    </Grid>\n                                    <Grid item xs={12} md={6} >\n                                        <TextField style={{ margin: '1vw', width: '90%' }}\n                                            select\n                                            label=\"Select Prize\"\n                                            value={this.state.balance}\n                                            onChange={this.handleChange('balance')}\n                                            helperText={this.state.msg_tournament_balance}\n                                            error={this.state.msg_tournament_balance.length > 0}\n                                        >\n                                            {this.state.balances.map(option => (\n                                                <MenuItem key={option} value={option}>\n                                                    {option} bp\n                                                </MenuItem>\n                                            ))}\n                                        </TextField>\n                                    </Grid>\n                                    <Grid item xs={12} md={6} >\n                                        <TextField style={{ margin: '1vw', width: '90%' }}\n                                            select\n                                            label=\"Player Count\"\n                                            value={this.state.player_count}\n                                            onChange={this.handleChange('player_count')}\n                                            helperText={this.state.msg_tournament_player_count}\n                                            error={this.state.msg_tournament_player_count.length > 0}\n                                        >\n                                            {this.state.player_counts.map(option => (\n                                                <MenuItem key={option.value} value={option.value}>\n                                                    {option.text}\n                                                </MenuItem>\n                                            ))}\n                                        </TextField>\n                                    </Grid>\n                                    <Grid item xs={12} md={6} >\n                                        <TextField style={{ margin: '1vw', width: '90%' }}\n                                            label=\"Entry Fee\"\n                                            value={this.state.entry_fee}\n                                            onChange={this.handleChange('entry_fee')}\n                                            helperText={this.state.msg_tournament_entry_fee}\n                                            error={this.state.msg_tournament_entry_fee.length > 0}\n                                        >\n                                            \n                                        </TextField>\n                                    </Grid>\n                                    <Grid item xs={12} md={12} >\n                                        <TextField style={{ margin: '1vw', width: '90%' }}\n                                            multiline\n                                            label=\"Rules\"\n                                            margin=\"normal\"\n                                            value={this.state.rules}\n                                            onChange={this.handleChange('rules')}\n                                            helperText={this.state.msg_tournament_rules}\n                                            error={this.state.msg_tournament_rules.length > 0}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} md={6}>\n                                        <Button style={{ margin: '1vw', width: '90%' }}>\n                                            <input type='file'\n                                                style={{ width: '100%', opacity: 0, position: 'absolute' }}\n                                                onChange={this.onFileUpload} />\n                                            <span><i className=\"fas fa-upload\"></i> Upload Tournament Image</span>\n                                        </Button>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Button type='submit' variant='outlined' style={{ margin: '1vw', width: '90%' }}>\n                                            <span><i className=\"fas fa-upload\"></i> Add Tournament</span>\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </form>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Paper style={{ margin: '20px', padding: '20px' }}>\n                            <h2>Tournament List</h2>\n                            <List style={{ width: '100%', margin: '20px', height: '32vh', overflowY: 'scorll' }}>\n\n                                {\n                                    this.state.tournaments_yet_to_start.map(g => (\n                                        <ListItem button key={g._id}>\n                                            <Avatar style={{ height: '60px', width: '60px' }}>\n                                                <img src={`${HostAddress}gameimg/${g.game.image}`} style={{ height: '100%' }} />\n                                            </Avatar>\n                                            <ListItemText\n                                                primary={<span> {g.game.name} ({g.player_count} players) </span>}\n                                                secondary={<span> {g.game.platform ? 'mobile game' : 'pc game'} </span>} />\n                                        </ListItem>\n                                    ))\n                                }\n                            </List>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </React.Fragment>\n        )\n    }\n}\n\n\n\n\n\n\n\nconst PlatformSelection = [\n    { text: 'mobile', value: 0 },\n    { text: 'pc', value: 1 }\n]\n\nclass GameMenu extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isCalling: false,\n            platform_values: PlatformSelection,\n            games: [],\n            game_name: '',\n            game_platform: 0,\n            game_requirement: '',\n            game_image: '',\n            game_player_count: 1,\n            msg_game_name: '',\n            msg_game_platform: '',\n            msg_game_requirement: '',\n            msg_game_image: '',\n            \n        }\n    }\n    clearMsg = () => {\n        this.setState({\n            msg_game_name: '',\n            msg_game_platform: '',\n            msg_game_requirement: '',\n        });\n    }\n    handleChange = name => e => {\n        this.setState({\n            [name]: e.target.value\n        })\n    }\n    onDrop = picture => {\n        this.setState({\n            game_image: picture,\n        });\n        console.log(picture)\n    }\n    onFileUpload = e => {\n        this.setState({\n            game_image: e.target.files[0]\n        })\n    }\n    load = async () => {\n        const res = await JsonQueryAdmin('post', 'admin/game', {})\n        this.setState({\n            games: res.games\n        })\n        console.log(res.games)\n    }\n    componentDidMount() {\n        this.load()\n    }\n    addGame = async e => {\n        e.preventDefault();\n        this.setState({ isCalling: true })\n        let fd = new FormData()\n        fd.append('image', this.state.game_image, 'chris.jpg')\n        fd.append('name', this.state.game_name)\n        fd.append('platform', this.state.game_platform)\n        fd.append('requirement', this.state.game_requirement)\n        // fd.append('player_count', this.state.game_player_count)\n        \n        const res = await PostQuery('admin/game/add', fd)\n        console.log('form submitted')\n        this.setState({ isCalling: false })\n        console.log(res);\n        this.clearMsg();\n        if (res.errors) {\n            res.errors.map(err => {\n                const fieldName = 'msg_game_' + err.param\n                this.setState({ [fieldName]: err.msg })\n            });\n        } else {\n            if(res.error == 1) {\n                alert(res.message);\n            } else {\n                alert(\"Game added successfully\");\n                this.load();\n            }\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Grid container alignItems='center' justify='center'>\n                    <Grid item xs={12}>\n                        <Paper style={{ margin: '20px', padding: '20px' }}>\n                            <h2>Add Game</h2>\n                            {this.state.isCalling ? <LinearProgress /> : ''}\n                            <form onSubmit={this.addGame} >\n                                <Grid container alignItems='center' justify='center'>\n                                    <Grid item xs={12} md={6} >\n                                        <TextField style={{ margin: '1vw', width: '90%' }}\n                                            label=\"Game Name\"\n                                            margin=\"normal\"\n                                            value={this.state.gameName}\n                                            onChange={this.handleChange('game_name')}\n                                            helperText={this.state.msg_game_name}\n                                            error={this.state.msg_game_name.length > 0}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} md={6} >\n                                        <TextField style={{ margin: '1vw', width: '90%' }}\n                                            label=\"Game Reqirement\"\n                                            margin=\"normal\"\n                                            value=\"ID\"\n                                            readonly={true}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} md={6} >\n                                        <TextField style={{ margin: '1vw', width: '90%' }}\n                                            id=\"standard-select-bets\"\n                                            select\n                                            label=\"Select Platform\"\n                                            value={this.state.game_platform}\n                                            onChange={this.handleChange('game_platform')}\n                                        >\n                                            {this.state.platform_values.map(option => (\n                                                <MenuItem key={option.value} value={option.value}>\n                                                    {option.text}\n                                                </MenuItem>\n                                            ))}\n                                        </TextField>\n                                    </Grid>\n                                    <Grid item xs={12} md={6}>\n                                        <Button style={{ margin: '1vw', width: '90%' }}>\n                                            <input type='file'\n                                                style={{ width: '100%', opacity: 0, position: 'absolute' }}\n                                                onChange={this.onFileUpload} />\n                                            <span><i className=\"fas fa-upload\"></i> Upload Game Image</span>\n                                        </Button>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Button type='submit' variant='outlined' style={{ margin: '1vw', width: '90%' }}>\n                                            <span><i className=\"fas fa-upload\"></i> Add Game</span>\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </form>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Paper style={{ margin: '20px', padding: '20px' }}>\n                            <h2>Game List</h2>\n                            <List style={{ width: '100%', margin: '20px', height: '32vh', overflowY: 'scorll' }}>\n\n                                {\n                                    this.state.games.map(g => (\n                                        <ListItem button key={g._id}>\n                                            <Avatar style={{ height: '60px', width: '60px' }}>\n                                                <img src={`${HostAddress}gameimg/${g.image}`} style={{ height: '100%' }} />\n                                            </Avatar>\n                                            <ListItemText\n                                                primary={<span> {g.name} </span>}\n                                                secondary={<span> {g.platform ? 'mobile game' : 'pc game'} </span>} />\n                                        </ListItem>\n                                    ))\n                                }\n                            </List>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </React.Fragment>\n        )\n    }\n}","import {createMuiTheme} from '@material-ui/core'\n\nconst colors = {\n    blackLight: '#334',\n    greenLight: '#76ff03',\n    green: '#aaa',\n}\n\nexport const myTheme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: {\n            light: '#bbb',\n            main: colors.greenLight,\n            dark: '#76ff03'\n         },\n         secondary: {\n           main: colors.greenLight,\n         },\n         textColor: \"#bdbdbd\",\n      },\n    typography: { \n        useNextVariants: true\n     },\n     appBar: {\n        \"textColor\": \"#33691e\"\n    },\n    card: {\n        \"titleColor\": \"rgba(118, 255, 3, 0.87)\",\n        \"subtitleColor\": \"rgba(224, 224, 224, 0.54)\"\n    },\n    overlay: {\n        \"backgroundColor\": \"rgba(0, 0, 0, 0.87)\"\n    },\n    paper: {\n        backgroundColor: \"rgba(33, 33, 33, 0.66)\"\n    },\n})\n\nexport const ColorPalate = colors;\n\n\nexport const  MainStyles = {\n    nav: {\n        backgroundColor: colors.blackLight,\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n        color: colors.greenLight\n    },\n    logo: {\n        width: 140\n    },\n    sideNav: {\n        width: 240,\n        height: '100%',\n        color: colors.greenLight,\n        backgroundColor: colors.blackLight,\n    },\n    sideNavList: {\n        backgroundColor: colors.blackLight,\n        padding: 8,\n        color: colors.greenLight,\n    },\n    block: {\n        backgroundColor: 'rgba(0, 0, 10, 0.1)',\n        color: colors.greenLight,\n    },\n    heading: {\n        color: colors.greenLight,\n        padding: 8,\n        fontSize: '1.3rem',\n        fontWeight: 'bolder'\n    },\n    text: {\n        color: colors.green,\n        padding: 8,\n        fontSize: '1.2rem',\n    },\n    paper: {\n        backgroundColor: colors.blackLight\n    },\n    boxChallenger: {\n        height: window.innerWidth < 600 ? 70 : 100,\n        width: window.innerWidth < 600 ? 70: 100,\n    },\n    boxGame : {\n        height: '140px',\n        clipPath: 'polygon(0% 0%, 60% 0, 60% 100%, 31% 71%, 0 100%)',\n       \n    },\n    expansion: {\n        padding: 10,\n        backgroundColor: 'rgba(0, 0, 10, 0.2)',\n        color: colors.green,\n    },\n    header: {\n        fontSize: '1.3rem',\n        fontWeight: 'bolder',\n        color: colors.greenLight\n    },\n    gameBtn: {\n        position: 'absolute',\n        zIndex: 4,\n        top: window.innerWidth < 600 ?'84vh' : '90vh',\n        right: window.innerWidth < 600 ? 20 : 40,\n        transform: 'scale(1.2)'\n    },\n    gridList: {\n        minWidth: 500,\n        maxHeight: 450,\n    },\n    centerContainer: {\n        display: 'grid',\n        alignItems: 'center',\n        justifyContent: 'center',\n        textAlign: 'center',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n}\n\n","import React, { Component } from 'react';\nimport { ColorPalate, myTheme } from '../Components/MainStyles';\nimport { MuiThemeProvider } from '@material-ui/core'\n\nimport { JsonQuery, SetCookie } from '../Services/Query'\nimport { Grid, Drawer, TextField, LinearProgress } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\n\nimport './Landing.css';\n\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            full_name: '',\n            email: '',\n            password: '',\n            confirm: '',\n            isCalling: false,\n            msg_full_name: '',\n            msg_email: '',\n            msg_password: '',\n            msg_confirm: '',\n        }\n    }\n    clearMsg = () => {\n        this.setState({\n            msg_full_name: '',\n            msg_email: '',\n            msg_password: '',\n            msg_confirm: '',\n        });\n    }\n    handleChange = name => event => {\n        this.setState({ [name]: event.target.value })\n    }\n    register = async e => {\n        e.preventDefault();\n        this.setState({ isCalling: true })\n        const { full_name, email, password, confirm } = this.state;\n        if (full_name === '' || full_name === undefined) {\n\n        }\n        const res = await JsonQuery('post', 'sign/register', { full_name, email, password, confirm });\n        this.setState({ isCalling: false })\n        this.clearMsg();\n        if (res.errors) {\n            res.errors.map(err => {\n                const fieldName = 'msg_' + err.param;\n                this.setState({ [fieldName]: err.msg })\n                return err\n            });\n        } else {\n            alert(`registration successful`)\n        }\n    }\n\n    render() {\n        return (\n            <div style={{ width: '80vw', height: '100%', display: 'grid', alignItems: 'center', justifyContent: 'center' }}>\n                <div style={{ margin: '2vw' }}>\n                    <h1>Register</h1>\n                    {this.state.isCalling ? <LinearProgress /> : ''}\n                    <form onSubmit={this.register}>\n                        <Grid container >\n                            <Grid item xs={12} md={6} >\n                                <TextField style={{ margin: '1vw', width: '90%' }}\n                                    id=\"standard-name\"\n                                    label=\"Name\"\n                                    margin=\"normal\"\n                                    value={this.state.full_name}\n                                    onChange={this.handleChange('full_name')}\n                                    helperText={this.state.msg_full_name}\n                                    error={this.state.msg_full_name.length > 0}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6} >\n                                <TextField style={{ margin: '1vw', width: '90%' }}\n                                    id=\"standard-email\"\n                                    label=\"Email Id\"\n                                    margin=\"normal\"\n                                    value={this.state.email}\n                                    onChange={this.handleChange('email')}\n                                    helperText={this.state.msg_email}\n                                    error={this.state.msg_email.length > 0}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6}>\n                                <TextField style={{ margin: '1vw', width: '90%' }}\n                                    id=\"standard-password\"\n                                    label=\"Password\"\n                                    margin=\"normal\"\n                                    type='password'\n                                    value={this.state.password}\n                                    onChange={this.handleChange('password')}\n                                    helperText={this.state.msg_password}\n                                    error={this.state.msg_password.length > 0}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6} >\n                                <TextField style={{ margin: '1vw', width: '90%' }}\n                                    id=\"standard-confirm-password\"\n                                    label=\"Confirm Password\"\n                                    margin=\"normal\"\n                                    type='password'\n                                    value={this.state.confirm}\n                                    onChange={this.handleChange('confirm')}\n                                    helperText={this.state.msg_confirm}\n                                    error={this.state.msg_confirm.length > 0}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6} >\n                                <Button type='submit' style={{ padding: 14, color: '#2af', }}>\n                                    Register\n                        </Button>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\nclass SignIn extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            isCalling: false,\n            msg_email: '',\n            msg_password: '',\n        }\n    }\n    clearMsg = () => {\n        this.setState({\n            msg_email: '',\n            msg_password: ''\n        });\n    }\n    handleChange = name => event => {\n        this.setState({ [name]: event.target.value })\n    }\n    signIn = async e => {\n        e.preventDefault();\n        this.setState({ isCalling: true })\n        const { email, password } = this.state;\n        const res = await JsonQuery('post', 'sign/login', { email, password });\n        this.setState({ isCalling: false })\n        this.clearMsg();\n        if (res.errors) {\n            res.errors.map(err => {\n                const fieldName = 'msg_' + err.param;\n                this.setState({ [fieldName]: err.msg });\n                return err\n            });\n        } else {\n            SetCookie('logauti', res.id);\n            SetCookie('logautx', this.state.email);\n            SetCookie('logauty', res.connection_string);\n            this.props.history.push('/dashboard')\n        }\n    }\n    render() {\n        return (\n            <div style={{ height: '80vh', display: 'grid', alignItems: 'center', justifyContent: 'center' }}>\n                <div style={{ margin: '2vw' }}>\n                    <h1>Sign In</h1>\n                    {this.state.isCalling ? <LinearProgress /> : ''}\n                    <form onSubmit={this.signIn}>\n                        <Grid container >\n                            <Grid item xs={12} md={6} >\n                                <TextField style={{ margin: '1vw', width: '90%' }}\n                                    id=\"standard-email\"\n                                    label=\"Email Id\"\n                                    margin=\"normal\"\n                                    value={this.state.email}\n                                    onChange={this.handleChange('email')}\n                                    helperText={this.state.msg_email}\n                                    error={this.state.msg_email.length > 0}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6}>\n                                <TextField style={{ margin: '1vw', width: '90%' }}\n                                    id=\"standard-password\"\n                                    label=\"Password\"\n                                    margin=\"normal\"\n                                    type='password'\n                                    value={this.state.password}\n                                    onChange={this.handleChange('password')}\n                                    helperText={this.state.msg_password}\n                                    error={this.state.msg_password.length > 0}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6} >\n                                <Button type='submit' style={{ padding: 14, color: '#2af', }}>\n                                    Sign In\n                        </Button>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\nexport class Landing extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isRegister: false,\n            isSignIn: false\n        }\n    }\n    toggleRegister = () => {\n        this.setState({\n            isRegister: !this.state.isRegister\n        })\n    }\n    toggleSignIn = () => {\n        this.setState({\n            isSignIn: !this.state.isSignIn\n        })\n    }\n    redrt = async () => {\n       // const res = await JsonQueryAuth('POST', 'info/getUser', { });\n    }\n    componentDidMount() {\n        document.body.className=\"body-a\" \n    }\n    render() {\n        return (\n            <React.Fragment>\n                <div className='body1'>\n                    <Drawer open={this.state.isRegister} onClose={this.toggleRegister}>\n                        <Register />\n                    </Drawer>\n                    <Drawer anchor=\"top\" open={this.state.isSignIn} onClose={this.toggleSignIn}>\n                        <SignIn history={this.props.history} />\n                    </Drawer>\n                    <div className='Page'>\n                        <div id=\"title\" className=\"slide header\">\n                            <div>\n                                <Grid container alignItems='center' justify='center'>\n                                    <Grid item xs={12}>\n                                        <h1 style={{ color: ColorPalate.greenLight, fontSize: '2.4rem' }}>Virtual Battle Ground</h1>\n                                        <h1 style={{ color: '#bbb', fontSize: '1.4rem' }}>Start making money through competetive gaming</h1>\n                                    </Grid>\n                                    <br /><br />\n                                    <Grid item xs={12} spacing={16} container alignItems='center' justify='center'>\n                                        <Grid item xs={12} md={6} container alignItems='center' justify='center'>\n                                            <Button style={{ color: ColorPalate.greenLight }}\n                                                onClick={this.toggleRegister}\n                                            ><div className=\"boton\">\n\n                                                    <svg viewBox=\"0 0 290 70\" width=\"100%\" heigth=\"100%\" >\n                                                        <line className=\"L-T\" x1=\"0\" y1=\"-15\" x2=\"0\" y2=\"20\" />\n                                                        <line className=\"L-B\" x1=\"0\" y1=\"50\" x2=\"0\" y2=\"85\" />\n\n                                                        <line className=\"R-T\" x1=\"290\" y1=\"-15\" x2=\"290\" y2=\"20\" />\n                                                        <line className=\"R-B\" x1=\"290\" y1=\"50\" x2=\"290\" y2=\"85\" />\n\n                                                        <line className=\"T-L\" x1=\"-125\" y1=\"0\" x2=\"20\" y2=\"0\" />\n                                                        <line className=\"T-R\" x1=\"270\" y1=\"0\" x2=\"415\" y2=\"0\" />\n\n                                                        <line className=\"B-R\" x1=\"270\" y1=\"70\" x2=\"415\" y2=\"70\" />\n                                                        <line className=\"B-L\" x1=\"-125\" y1=\"70\" x2=\"20\" y2=\"70\" />\n                                                    </svg>\n                                                    <span>Register</span>\n                                                </div>\n                                            </Button>\n                                        </Grid>\n                                        <Grid item xs={12} md={6} container alignItems='center' justify='center'>\n                                            <Button style={{ color: ColorPalate.greenLight }}\n                                                onClick={this.toggleSignIn}\n                                            ><div className=\"boton\"\n                                            >\n\n                                                    <svg viewBox=\"0 0 290 70\" width=\"100%\" heigth=\"100%\" >\n                                                        <line className=\"L-T\" x1=\"0\" y1=\"-15\" x2=\"0\" y2=\"20\" />\n                                                        <line className=\"L-B\" x1=\"0\" y1=\"50\" x2=\"0\" y2=\"85\" />\n\n                                                        <line className=\"R-T\" x1=\"290\" y1=\"-15\" x2=\"290\" y2=\"20\" />\n                                                        <line className=\"R-B\" x1=\"290\" y1=\"50\" x2=\"290\" y2=\"85\" />\n\n                                                        <line className=\"T-L\" x1=\"-125\" y1=\"0\" x2=\"20\" y2=\"0\" />\n                                                        <line className=\"T-R\" x1=\"270\" y1=\"0\" x2=\"415\" y2=\"0\" />\n\n                                                        <line className=\"B-R\" x1=\"270\" y1=\"70\" x2=\"415\" y2=\"70\" />\n                                                        <line className=\"B-L\" x1=\"-125\" y1=\"70\" x2=\"20\" y2=\"70\" />\n                                                    </svg>\n                                                    <span>Sign In</span>\n                                                </div>\n                                            </Button>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </div>\n                        </div>\n\n                        <div id=\"slide1\" className=\"slide\">\n                            <div className=\"title-x\">\n                                <h1>How It Works</h1>\n                                <p>Compete in gaming tournaments and head-to-head challenges with gamers of every skill level on Mobile, Playstation, Xbox and PC. Participate in free-to-play or cash tournaments and Win Big at Virtual Battle Ground.</p>\n                            </div>\n                        </div>\n\n                        <div id=\"slide2\" className=\"slide\">\n                            <div className=\"title\">\n                                <h1>Participate in Live Tournaments To Earn More</h1>\n                                <p>Lorem ipsum dolor sit amet, in velit iudico mandamus sit, persius dolorum in per, postulant mnesarchum cu nam. Malis movet ornatus id vim, feugait detracto est ea, eam eruditi conceptam in. Ne sit explicari interesset. Labores perpetua cum at. Id viris docendi denique vim.</p>\n                            </div>\n\n                            <img src={require('../img/8ball.jpg')} alt='game'/>\n                            <img src={require('../img/chess.jpg')} alt='chess'/>\n                        </div>\n\n                        <div id=\"slide3\" className=\"slide\">\n                            <Grid container spacing={16}>\n                                <Grid item xs={12} md={6}>\n                                    <div className=\"title-y\">\n                                        <h1>CREATE ACCOUNT</h1>\n                                        <p>Login to Virtual Battle Ground and Add money to wallet</p>\n                                    </div>\n\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <div className=\"title-y\">\n                                        <h1>FIND YOUR GAME</h1>\n                                        <p>Search among the Listd game and add to your play list</p>\n                                    </div>\n\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <div className=\"title-y\">\n                                        <h1>CHALLENGE OTHERS</h1>\n                                        <p>Search for ohter players and challenge them for free or bet</p>\n                                    </div>\n\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <div className=\"title-y\">\n                                        <h1>WIN AND EARN</h1>\n                                        <p>beat other players in tournaments and matches to earn credits.</p>\n                                    </div>\n\n                                </Grid>\n                            </Grid>\n\n                        </div>\n\n                        <div id=\"slide4\" className=\"slide header\">\n                            <h1>The End</h1>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport { MainStyles, ColorPalate } from './MainStyles';\n\nimport { JsonQueryAuth, HostAddress, getCookie } from '../Services/Query'\n\nimport { AppBar, Toolbar } from '@material-ui/core';\nimport { Drawer, List, ListItem, ListItemIcon, ListItemText, Divider, Icon } from '@material-ui/core';\nimport { IconButton } from '@material-ui/core'\nimport { Sort, Dashboard, Person, AccountBalanceWallet, FeaturedPlayListTwoTone } from '@material-ui/icons';\nimport { Grid, Typography, Fab, Button } from '@material-ui/core';\nimport { GridList, GridListTile, GridListTileBar } from '@material-ui/core';\nimport { TextField, Avatar, MenuItem } from '@material-ui/core';\nimport { Dialog, DialogTitle, DialogContent } from '@material-ui/core';\nimport Slide from '@material-ui/core/Slide';\n\nimport styles from './Navigation.module.css';\n\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\n\nconst ChallengeBets = [\n    { text: 'Free', value: 0 },\n    { text: '10 BP', value: 10 },\n    { text: '20 BP', value: 20 },\n    { text: '50 BP', value: 50 },\n    { text: '100 BP', value: 100 },\n    { text: '500 BP', value: 500 },\n]\n\n\nconst Logo = () =>\n    (<img\n        src={require('../img/icons/vbg1.png')}\n        style={MainStyles.logo}\n        alt=\"VBG\"\n    >\n    </img>);\n\n\nexport class Navigation extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showGameBtn : false, \n            isOpen: false,\n            image: require('../img/default.jpg'),\n            name: 'palyer',\n            balance: 0,\n            data: {}\n        }\n        this.toggleDrawer = this.toggleDrawer.bind(this);\n    }\n    toggleDrawer() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        })\n    }\n    load = async () => {\n        const res = await JsonQueryAuth('POST', 'info/getUser', { x: 10 });\n        const image = `${HostAddress}user/${res.folder}/${res.image}`\n        const name = res.full_name\n        const balance = res.balance\n        this.setState({\n            name: name,\n            image: image,\n            balance: balance,\n            showGameBtn : this.props.active !== 'wallet' && this.props.active !== 'history'\n        })\n    }\n    componentDidMount() {\n        this.load();\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <AppBar position='sticky' style={MainStyles.nav}>\n                    <Toolbar>\n                        <IconButton\n                            style={MainStyles.menuButton}\n                            color=\"inherit\" aria-label=\"Menu\"\n                            onClick={this.toggleDrawer}>\n                            <Sort style={{ transform: 'scale(1.2)' }} />\n                        </IconButton>\n                        <Logo />\n                    </Toolbar>\n                    {\n                        this.state.showGameBtn? <GameBtn load={this.props.load} /> : ''\n                    }\n                </AppBar>\n                <Drawer open={this.state.isOpen} onClose={this.toggleDrawer}>\n                    <SideMenu\n                        active={this.props.active}\n                        image={this.state.image}\n                        name={this.state.name}\n                        balance={this.state.balance}\n                    />\n                </Drawer>\n            </React.Fragment>\n        );\n    }\n}\n\nclass GameBtn extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false,\n            stage: 'game',\n            bets: ChallengeBets,\n            nameHint: '',\n            bet: 0,\n            games: [],\n            game: '',\n            opponents: [],\n            opponent: {\n                _id: '',\n                name: '',\n                image: require('../img/default.jpg')\n            },\n            self: {\n                _id: '',\n                name: '',\n                image: require('../img/default.jpg')\n            }\n        }\n        this.toggleChallenge = this.toggleChallenge.bind(this);\n    }\n    toggleChallenge() {\n        this.setState({\n            isOpen: !this.state.isOpen,\n            stage: 'game'\n        })\n    }\n    handleChange = name => async event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n        if (name === 'nameHint') {\n            this.search(event.target.value)\n        }\n    } \n    async componentDidMount() {\n        const res = await JsonQueryAuth('POST', 'info/getGames', {})\n        this.setState({\n            games: res\n        });\n    }\n    search = async (name) => {\n        const res = await JsonQueryAuth('POST', 'info/getChallangerList', { name: name, game_id: this.state.game })\n        const opponents = res.list.filter(x => x._id !== getCookie('logauti'))\n        this.setState({\n            opponents: opponents,\n            stage: 'search',\n        })\n    }\n    selectOpponent = id => async  e => {\n        const res = await JsonQueryAuth('POST', 'info/getChallangerList', { name: this.state.nameHint, game_id: id })\n        const opponents = res.list.filter(x => x._id !== getCookie('logauti'))\n        this.setState({\n            opponents: opponents,\n            self: res.list.filter(x => x._id === getCookie('logauti'))[0],\n            stage: 'search',\n            game: id\n        })\n    }\n    openChallange = op => async e => {\n        this.setState({\n            opponent: op,\n            stage: 'challenge'\n        })\n    }\n    challenge = async e => {\n        const { opponent, bet, game, self } = this.state;\n        const res = await JsonQueryAuth('POST', 'dashboard/game/challange', {\n            challenger: self._id,\n            challenged: opponent._id,\n            balance: bet,\n            game_id: game\n        });\n        if (res.status === 'ok') {\n            this.toggleChallenge();\n            this.props.load()\n        } else {\n            alert(res.errors[0]);\n        }\n    }\n    render() {\n        let dialogContent, dialogTitle;\n        switch (this.state.stage) {\n            case 'game':\n                dialogTitle = 'Select Game';\n                dialogContent = (\n                    <React.Fragment>\n                        <GridList cellHeight={200} style={MainStyles.gridList}>\n                            {this.state.games.map(g => (\n                                <GridListTile key={g._id} onClick={this.selectOpponent(g._id)} cols={window.innerWidth < 600 ? 2 : 1}>\n                                    <img src={`${HostAddress}gameimg/${g.image}`} alt={'data.name'} />\n                                    <GridListTileBar\n                                        title={g.name}\n                                        subtitle={<span>Platform: {g.platform === 0 ? 'mobile' : 'PC'}</span>}\n                                    />\n                                </GridListTile>\n                            ))\n                            }\n                        </GridList>\n                    </React.Fragment>\n                )\n                break;\n            case 'search':\n                dialogTitle = 'Search Opponent';\n                dialogContent = (\n                    <React.Fragment>\n                        <div>\n                            <TextField\n                                autoComplete=\"off\"\n                                id=\"outlined-search\"\n                                label=\"Search Opponent\"\n                                type=\"search\"\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                                onChange={this.handleChange('nameHint')}\n                                style={{ width: window.innerWidth < 600 ? 'auto' : 400 }}\n                            />\n                        </div>\n                        <div>\n                            <List style={{ height: 300, overflowY: 'scroll' }}>\n                                {this.state.opponents.map(op => (\n                                    <ListItem key={op._id} onClick={this.openChallange(op)}>\n                                        <Avatar alt=\"Remy Sharp\" src={`${HostAddress}${op.image}`} />\n                                        <ListItemText primary={op.full_name} />\n                                    </ListItem>\n                                ))}\n                            </List>\n                        </div>\n                    </React.Fragment>\n                )\n                break;\n            case 'challenge':\n                dialogTitle = 'Challenge';\n                dialogContent = (\n                    <React.Fragment>\n                        <Grid container justify='center' alignItems='center' >\n                            <Grid item xs={12}>\n                                <Grid container spacing={16} justify=\"center\" alignItems=\"center\">\n                                    <Grid item xs={5} style={MainStyles.centerContainer}>\n                                        <Avatar \n                                            alt={this.state.self.full_name}\n                                            src={`${HostAddress}${this.state.self.image}`}\n                                            style={{ width: window.innerWidth < 600 ? 100 : 200, height: window.innerWidth < 600 ? 100 : 200 }} />\n                                        <span style={{ textAlign: 'center', color:'#aaa' }}>{this.state.self.full_name}</span>\n                                    </Grid>\n                                    <Grid item xs={2} style={{ textAlign: 'center', color: ColorPalate.greenLight, fontSize: '1.6rem' }} className='animated heartBeat infinite'>\n                                        <span > VS </span>\n                                    </Grid>\n                                    <Grid item xs={5} style={MainStyles.centerContainer}>\n                                        <Avatar\n                                            alt=\"Remy Sharp\"\n                                            src={`${HostAddress}${this.state.opponent.image}`}\n                                            style={{ width: window.innerWidth < 600 ? 100 : 200, height: window.innerWidth < 600 ? 100 : 200 }} />\n                                        <span style={{ textAlign: 'center', color:'#aaa' }}>{this.state.opponent.full_name}</span>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={12} md={6}>\n                                <TextField\n                                    id=\"standard-select-bets\"\n                                    select\n                                    label=\"Select Bet\"\n                                    value={this.state.bet}\n                                    style={{ width: '100%', marginTop: 20 }}\n                                    onChange={this.handleChange('bet')}\n                                >\n                                    {this.state.bets.map(option => (\n                                        <MenuItem key={option.value} value={option.value}>\n                                            {option.text}\n                                        </MenuItem>\n                                    ))}\n                                </TextField>\n                            </Grid>\n                            <Grid item xs={12} style={MainStyles.centerContainer}>\n                                <Button\n                                    style={{ marginTop: 30, width: '100%', padding: 20, fontSize: '1.3rem', color: ColorPalate.greenLight }}\n                                    onClick={this.challenge}\n                                >\n                                    <i className=\"fas fa-gamepad\"></i>{'\\u00A0'}Challenge\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </React.Fragment>\n                )\n                break;\n        }\n        return (\n            <div style={MainStyles.gameBtn}>\n                <Fab style={{ backgroundColor: '#00c853' }} onClick={this.toggleChallenge} className='animated rubberBand'>\n                    <img src={require('../img/icons/sword.svg')} alt=\"B\" style={{ width: 30 }} />\n                </Fab>\n                <Dialog\n                    open={this.state.isOpen}\n                    onClose={this.toggleChallenge}\n                    TransitionComponent={Transition}\n                    keepMounted>\n                    <DialogTitle>{dialogTitle}</DialogTitle>\n                    <DialogContent>\n                    <div>\n                    {dialogContent}\n                    </div>\n                    </DialogContent>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\n\nconst SideMenu = ({ active, image, name, balance }) => {\n    return (\n        <div style={MainStyles.sideNav}>\n            <div className={styles.NavProfileCard}>\n                <div>\n                    <img src={image} alt=\"Player\" />\n                </div>\n                <div>\n                    <h2>{name}</h2>\n                    <span>Balance : {balance} bp</span>\n                </div>\n            </div>\n            <List style={MainStyles.sideNavList}>\n                <Link to='/dashboard' style={{ textDecoration: 'none', color: ColorPalate.greenLight }}>\n                    <ListItem button >\n                        <ListItemIcon style={{ color: active === 'dashboard' ? ColorPalate.greenLight : ColorPalate.green }}>\n                            <Dashboard />\n                        </ListItemIcon>\n                        <ListItemText inset\n                            primary={<span style={{\n                                color:\n                                    active === 'dashboard' ? ColorPalate.greenLight : ColorPalate.green\n                            }}>\n                                Dashboard</span>} />\n                    </ListItem>\n                </Link>\n                <Link to='/tournament' style={{ textDecoration: 'none', color: ColorPalate.greenLight }}>\n                    <ListItem button>\n                        <ListItemIcon style={{ color: active === 'tournament' ? ColorPalate.greenLight : ColorPalate.green }}>\n                            <Icon className=\"fas fa-trophy\" style={{ marginLeft: -2, transform: 'scale(0.79)' }} />\n                        </ListItemIcon>\n                        <ListItemText inset\n                            primary={<span style={{\n                                color:\n                                    active === 'tournament' ? ColorPalate.greenLight : ColorPalate.green\n                            }}>\n                                Tournament</span>} />\n                    </ListItem>\n                </Link>\n                <Link to='/leaderboard' style={{ textDecoration: 'none', color: ColorPalate.greenLight }}>\n                    <ListItem button>\n                        <ListItemIcon style={{ color: active === 'leaderboard' ? ColorPalate.greenLight : ColorPalate.green }}>\n                            <Icon className=\"fab fa-fort-awesome\" style={{ marginLeft: 2, transform: 'scale(0.79)' }} />\n                        </ListItemIcon>\n                        <ListItemText inset\n                            primary={<span style={{\n                                color:\n                                    active === 'leaderboard' ? ColorPalate.greenLight : ColorPalate.green\n                            }}>\n                                Leaderboard</span>} />\n                    </ListItem>\n                </Link>\n                <Divider />\n                <Link to='/wallet' style={{ textDecoration: 'none', color: ColorPalate.greenLight }}>\n                    <ListItem button>\n                        <ListItemIcon style={{ color: active === 'wallet' ? ColorPalate.greenLight : ColorPalate.green }}>\n                            <AccountBalanceWallet />\n                        </ListItemIcon>\n                        <ListItemText inset\n                            primary={<span style={{\n                                color:\n                                    active === 'wallet' ? ColorPalate.greenLight : ColorPalate.green\n                            }}>\n                                Wallet</span>} />\n                    </ListItem>\n                </Link>\n                <Link to='/history' style={{ textDecoration: 'none', color: ColorPalate.greenLight }}>\n                    <ListItem button>\n                        <ListItemIcon style={{ color: active === 'history' ? ColorPalate.greenLight : ColorPalate.green }}>\n                            <Icon className=\"fas fa-scroll\" style={{ marginLeft: -2, transform: 'scale(0.79)' }} />\n                        </ListItemIcon>\n                        <ListItemText inset\n                            primary={<span style={{\n                                color:\n                                    active === 'history' ? ColorPalate.greenLight : ColorPalate.green\n                            }}>\n                                History</span>} />\n                    </ListItem>\n                </Link>\n                <Link to='/profile' style={{ textDecoration: 'none', color: ColorPalate.greenLight }}>\n                    <ListItem button>\n                        <ListItemIcon style={{ color: active === 'profile' ? ColorPalate.greenLight : ColorPalate.green }}>\n                            <Person />\n                        </ListItemIcon>\n                        <ListItemText inset\n                            primary={<span style={{\n                                color:\n                                    active === 'profile' ? ColorPalate.greenLight : ColorPalate.green\n                            }}>\n                                Profile</span>} />\n                    </ListItem>\n                </Link>\n                <Divider />\n                <Link to='/logout' style={{ textDecoration: 'none', color: ColorPalate.greenLight }}>\n                    <ListItem button>\n                        <ListItemIcon style={{ color: ColorPalate.green }}>\n                            <Icon className=\"fas fa-sign-out-alt\" style={{ marginLeft: 2, transform: 'scale(0.79)' }} />\n                        </ListItemIcon>\n                        <ListItemText inset\n                            primary={<span style={{ color: ColorPalate.green }}>\n                                Tournament</span>} />\n                    </ListItem>\n                </Link>\n            </List>\n        </div>\n    );\n}\n","import React, { Component } from 'react';\nimport { ColorPalate } from './MainStyles';\n\nimport { JsonQueryAuth, HostAddress } from '../Services/Query';\nimport { Grid, Button,TextField,Slide } from '@material-ui/core';\nimport { Dialog, DialogTitle, DialogContent, DialogActions } from '@material-ui/core';\nimport styles from './Cards.module.css';\n\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\nexport class ChallengeCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false,\n            opponent: this.props.opponent,\n            game: this.props.game,\n            bet: this.props.bet,\n            isChallenger: this.props.isChallenger\n        }\n    }\n    toggleChallenge = () => {\n        this.setState({\n            isOpen: !this.state.isOpen,\n        })\n    }\n    acceptChallenge = async () => {\n        const res = await JsonQueryAuth('POST', 'dashboard/game/challange/accept', { match_id: this.props.id })\n        console.log(res);\n        if (res.status === 'ok') {\n            this.props.load();\n            this.toggleChallenge();\n        }\n        else {\n            alert(res.errors[0]);\n        }\n    }\n    cancelChallenge = async () => {\n        const res = await JsonQueryAuth('POST', 'dashboard/game/challange/decline', { match_id: this.props.id })\n        if (res.status === 'ok') {\n            this.props.load();\n            this.toggleChallenge();\n        }\n        else {\n            alert(res.errors[0]);\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Grid item container xs={12} md={4} justify='center' alignItems='center' style={{ marginBottom: 8 }}>\n                    <div className={`${styles.bCard} animated bounceInRight`} onClick={this.toggleChallenge}>\n                        <div>\n                            <img src={`${HostAddress}gameimg/${this.state.game.image}`} alt='game'/>\n                            <h1>{this.state.game.name}</h1>\n                            <h2>Bet: {this.state.bet} BP</h2>\n                            <h2>{this.state.opponent.full_name}</h2>\n                        </div>\n                        <div>\n                            <img src={`${HostAddress}${this.state.opponent.image}`} alt='opponent' />\n                        </div>\n                    </div>\n                </Grid>\n                <Dialog open={this.state.isOpen} onClose={this.toggleChallenge}>\n                    <DialogTitle>I want to</DialogTitle>\n                    <DialogContent>\n                        Choose the type of action you want.\n                    </DialogContent>\n                    <DialogActions>\n                        {!this.state.isChallenger ? <Button onClick={this.acceptChallenge} style={{ color: 'green', fontWeight: 'bolder' }}>Accept Challenge</Button> : ''}\n                        <Button onClick={this.cancelChallenge} style={{ color: 'red', fontWeight: 'bolder' }}>Cancel Challenge</Button>\n                    </DialogActions>\n                </Dialog>\n            </React.Fragment>\n        )\n    }\n}\n\n\n\nexport class MatchCard extends Component {\n    redirect = id => async e => {\n        this.props.history.push(`/match/${id}`)\n    }\n    render() {\n        const { id, bet, game, opponent } = this.props\n        return (\n            <Grid item container xs={12} md={4} lg={3} justify='center' alignItems='center' style={{ marginBottom: 8 }} >\n                <div className={`${styles.cCard} animated bounceInLeft`} onClick={this.redirect(id)}>\n                    <div>\n                        <img src={`${HostAddress}gameimg/${game.image}`} />\n                    </div>\n                    <div>\n                        <img src={`${HostAddress}${opponent.image}`} />\n                    </div>\n                    <div>\n                        <h1> VS </h1>\n                        <h2>{opponent.full_name}</h2>\n                        <br />\n                        <h3>{game.name}</h3>\n                        <h3>{bet} BP</h3>\n                    </div>\n                </div>\n            </Grid>\n        )\n    }\n}\n\nexport class TournamentCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false,\n            game: this.props.game,\n            isParticipating: this.props.isParticipating,\n            player_count: this.props.player_count,\n            tournament_id: this.props.tournament_id\n\n        }\n    }\n    toggleJoin = () => {\n        if (!this.state.isParticipating)\n            this.setState({\n                isOpen: !this.state.isOpen,\n            })\n        else {\n            console.log(this.state.tournament_id)\n            this.props.enterTournament(this.state.tournament_id)\n        }\n    }\n    joinTournament = id => async e => {\n        console.log(id)\n        const res = await JsonQueryAuth('post', `tournament/join/`, { tournament_id: this.state.tournament_id })\n        if (res.status === 'ok') {\n            this.props.load()\n        } else {\n            this.toggleJoin();\n            alert(\"Tournament is not valid\");\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Grid item container xs={12} md={4} lg={4} justify='center' alignItems='center' style={{ marginBottom: 8 }} >\n                    <div className={styles.gameCard} onClick={this.toggleJoin}>\n                        <div>\n                            <img src={`${HostAddress}gameimg/${this.props.game.image}`} />\n                        </div>\n                        <h1>{this.props.game.name}  </h1>\n                        <h2>{this.props.game.platform ? 'mobile game' : 'pc game'} ({this.props.player_count} players)</h2>\n                    </div>\n                </Grid>\n                <Dialog open={this.state.isOpen} onClose={this.toggleJoin}>\n                    <DialogTitle>Join Tournament</DialogTitle>\n                    <DialogContent>\n                        Do you want to join this tournament?\n                    </DialogContent>\n                    <DialogActions>\n                        <Button style={{ color: ColorPalate.green, fontWeight: 'bolder' }} onClick={this.joinTournament(this.props.tournament_id)}>\n                            Join\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </React.Fragment>\n        )\n    }\n}\n\n\n\nexport class GameCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false,\n            game: this.props.game,\n            isAddGame:false,\n            contact_string:this.props.game.contact_string\n        };;\n    }\n    toggleGame = () => {\n        this.setState({\n            isOpen: !this.state.isOpen,\n        })\n    }\n    removeGame = id => async e => {\n        console.log(id)\n        const res = await JsonQueryAuth('get', `dashboard/game/remove/${id}`)\n        if (res.status === 'ok')\n            this.props.load()\n    }\n    toggleAddGame = () => {\n        this.toggleGame();\n        this.setState({\n            isAddGame: !this.state.isAddGame,\n        })\n    }\n    handleChange = name => e => {\n        this.setState({\n            [name]: e.target.value\n        })\n    }\n    addGameSubmit = async e =>{\n        e.preventDefault()\n        const {contact_string } = this.state;\n        var game_id = this.props.game._id;\n        const res = await JsonQueryAuth('post', 'dashboard/game/updateid', { game_id, contact_string})\n        if(res.errors) {\n            //console.log(res.errors)\n        }else if(res.status === 'ok') {\n            alert('gameid updated succenssfully')\n            this.setState({\n                isAddGame: !this.state.isAddGame,\n            });\n        }else if(res.status === 'fail') {\n            alert(res.msg);\n        }\n    }\n    render() {\n        let content;\n        console.log('-------------');\n        console.log(this.props.game);\n        content = (\n            <form onSubmit={this.addGameSubmit}>\n                <div>\n                    <TextField\n                        autoComplete=\"off\"\n                        id=\"outlined-search\"\n                        label={this.props.game.requirement}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        value={this.state.contact_string}\n                        onChange={this.handleChange('contact_string')}\n                        style={{ width: window.innerWidth < 600 ? 'auto' : 400 }}\n                    />\n                </div>\n                <Button style={{color: '#157'}} type='submit' onClick={this.addGameSubmit}>\n                    Update Id\n                </Button>\n            </form>\n        );\n        return (\n            <React.Fragment>\n                <Grid item container xs={12} md={4} lg={4} justify='center' alignItems='center' style={{ marginBottom: 8 }} >\n                    <div className={styles.gameCard} onClick={this.toggleGame}>\n                        <div>\n                            <img src={`${HostAddress}gameimg/${this.props.game.image}`} />\n                        </div>\n                        <h1>{this.props.game.name}</h1>\n                        <h2>{this.props.game.platform ? 'mobile game' : 'pc game'}</h2>\n                        {this.props.game.contact_string &&\n                            <h4> GameId : {this.props.game.contact_string}</h4>\n                        }\n                    </div>\n                </Grid>\n                <Dialog open={this.state.isOpen} onClose={this.toggleGame}>\n                    <DialogTitle>{this.props.game.name}</DialogTitle>\n                    <DialogContent>\n                        <h4>Game Type :  {this.props.game.platform ? 'mobile game' : 'pc game'}</h4>\n                        <h4>Game id :  {this.props.game.requirement}</h4>\n                        <h4>Player Count :  {this.props.game.player_count}</h4>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button style={{ color: 'green', fontWeight: 'bolder' }} onClick={this.toggleAddGame}>\n                            Change Id\n                        </Button>\n                        <Button style={{ color: 'red', fontWeight: 'bolder' }} onClick={this.removeGame(this.props.game._id)}>\n                            Remove Game\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.isAddGame}\n                    onClose={this.toggleAddGame}\n                    TransitionComponent={Transition}\n                    keepMounted>\n                    <DialogTitle>Games</DialogTitle>\n                    <DialogContent> \n                        <div>\n                            {content}\n                        </div>\n                    </DialogContent>\n                </Dialog>\n            </React.Fragment>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { MainStyles, myTheme } from '../Components/MainStyles';\nimport { MuiThemeProvider } from '@material-ui/core'\n\nimport { JsonQueryAuth, HostAddress, getCookie } from '../Services/Query'\nimport { Navigation } from '../Components/Navigation';\nimport { MatchCard, ChallengeCard, GameCard } from '../Components/Cards';\n\nimport { Grid, Typography, Button } from '@material-ui/core';\nimport { GridList, GridListTile, GridListTileBar } from '@material-ui/core';\nimport { TextField } from '@material-ui/core';\nimport { ExpansionPanel, ExpansionPanelDetails, ExpansionPanelSummary } from '@material-ui/core';\nimport { Dialog, DialogTitle, DialogContent} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Slide from '@material-ui/core/Slide';\nimport './Dashboard.css'\n\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\n\nexport class Dashboard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isgameSelect: false,\n            isAddGame: false,\n            addGames: [],\n            challenges: [],\n            gameList: [],\n            games: [],\n            matches: [],\n            tournamentMatches: [],\n            game_id: '',\n            game_requirement: '',\n            contact_string: ''\n        }\n    }\n    componentDidMount() {\n        document.body.classList.remove('body-a')\n        this.load()\n    }\n\n    handleChange = name => e => {\n        this.setState({\n            [name]: e.target.value\n        })\n    }\n    load = async () => {\n        const res = await JsonQueryAuth('POST', 'dashboard/', {});\n        let { gamePocket, gameList, challenges, matches, feeds } = res;\n        challenges = challenges.map(ch => {\n            return {\n                _id: ch._id,\n                opponent: ch.challenger._id === getCookie('logauti') ? ch.challenged : ch.challenger,\n                game: ch.game,\n                bet: ch.balance,\n                isChallenger: ch.challenger._id === getCookie('logauti')\n            }\n        });\n        matches = matches.map(ch => {\n            return {\n                _id: ch._id,\n                opponent: ch.challenger._id === getCookie('logauti') ? ch.challenged : ch.challenger,\n                game: ch.game,\n                bet: ch.balance,\n                isTournament: ch.is_tournament\n            }\n        });\n        this.setState({\n            challenges: challenges,\n            matches: matches.filter(m => !m.isTournament),\n            tournamentMatches: matches.filter(m => m.isTournament),\n            games: gamePocket,\n            gameList: gameList\n        });\n        console.log(this.state.games);\n    }\n    toggleAddGame = () => {\n        this.setState({\n            isAddGame: !this.state.isAddGame,\n            isgameSelect: true,\n        })\n    }\n    gameSelect = (id, r) => e => {\n        this.setState({\n            isgameSelect: false,\n            game_id: id,\n            game_requirement: r\n        })\n    }\n    addGameSubmit = async e =>{\n        e.preventDefault()\n        const { game_id, contact_string } = this.state\n        const res = await JsonQueryAuth('post', 'dashboard/game/add', { game_id, contact_string})\n        if(res.errors) {\n            //console.log(res.errors)\n        }else if(res.status === 'ok') {\n            //alert('game added succenssfully')\n            this.toggleAddGame()\n            this.load()\n        }else if(res.status === 'fail') {\n            alert(res.msg);\n        }\n    }\n    \n\n    render() {\n        let content;\n        if (this.state.isgameSelect) {\n            content = (<GridList cellHeight={200} style={MainStyles.gridList}>\n                {this.state.gameList.map(g => (\n                    <GridListTile key={g._id}\n                        cols={window.innerWidth < 600 ? 2 : 1}\n                        onClick={this.gameSelect(g._id, g.requirement)}>\n                        <img src={`${HostAddress}gameimg/${g.image}`} alt={'data.name'} />\n                        <GridListTileBar\n                            title={g.name}\n                            subtitle={<span>Platform: {g.platform === 0 ? 'mobile' : 'PC'}</span>}\n                        />\n                    </GridListTile>\n                ))\n                }\n            </GridList>)\n        } else {\n            content = (\n                <form onSubmit={this.addGameSubmit}>\n                    <div>\n                        <TextField\n                            autoComplete=\"off\"\n                            id=\"outlined-search\"\n                            label={this.state.game_requirement}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            onChange={this.handleChange('contact_string')}\n                            style={{ width: window.innerWidth < 600 ? 'auto' : 400 }}\n                        />\n                    </div>\n                    <Button style={{color: '#157'}} type='submit'>\n                        add Game\n                    </Button>\n                </form>\n            )\n        }\n\n        return (\n            <MuiThemeProvider theme={myTheme}>\n            <div className='Dashboard Page'>\n                <Navigation active='dashboard' load={this.load} />\n                <section className='ContainerCenter'>\n                    <ExpansionPanel style={MainStyles.expansion} defaultExpanded>\n                        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon style={MainStyles.header} />}>\n                            <Typography style={MainStyles.header}><i className=\"fas fa-puzzle-piece\"></i> Challenges</Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails >\n                            <Grid container spacing={16}>\n                                {this.state.challenges.map(clng => <ChallengeCard key={clng._id}\n                                    bet={clng.bet}\n                                    game={clng.game}\n                                    opponent={clng.opponent}\n                                    isChallenger={clng.isChallenger}\n                                    id={clng._id}\n                                    load={this.load}\n                                />)}\n                            </Grid>\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                    <ExpansionPanel style={MainStyles.expansion} defaultExpanded>\n                        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon style={MainStyles.header} />}>\n                            <Typography style={MainStyles.header}><i className=\"fas fa-gamepad\"></i> Challenge Matches</Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails>\n                            <Grid container spacing={16}>\n                                {this.state.matches.map(m => <MatchCard key={m._id}\n                                    bet={m.bet}\n                                    game={m.game}\n                                    opponent={m.opponent}\n                                    id={m._id}\n                                    history={this.props.history}\n                                />)}\n                            </Grid>\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                    <ExpansionPanel style={MainStyles.expansion} defaultExpanded>\n                        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon style={MainStyles.header} />}>\n                            <Typography style={MainStyles.header}><i className=\"fas fa-gamepad\"></i> Tournament Matches</Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails>\n                            <Grid container spacing={16}>\n                                {this.state.tournamentMatches.map(m => <MatchCard key={m._id}\n                                    bet={m.bet}\n                                    game={m.game}\n                                    opponent={m.opponent}\n                                    id={m._id}\n                                    history={this.props.history}\n                                />)}\n                            </Grid>\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                    <ExpansionPanel style={MainStyles.expansion} defaultExpanded>\n                        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon style={MainStyles.header} />}>\n                            <Typography style={MainStyles.header}><i className=\"fas fa-dice\"></i> Game Librery</Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails>\n                            <Grid container spacing={16}>\n                                {this.state.games.map(game => <GameCard key={game._id} game={game} load={this.load} />)}\n                                <Grid item xs={12}>\n                                    <Button style={{ ...MainStyles.header, width: '100%' }} onClick={this.toggleAddGame}>\n                                        Add game\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                    <ExpansionPanel style={MainStyles.expansion} defaultExpanded>\n                        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon style={MainStyles.header} />}>\n                            <Typography style={MainStyles.header}><i className=\"fab fa-pushed\"></i> Feeds</Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails>\n                            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\n                            sit amet blandit leo lobortis eget.\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                </section>\n                <Dialog\n                    open={this.state.isAddGame}\n                    onClose={this.toggleAddGame}\n                    TransitionComponent={Transition}\n                    keepMounted>\n                    <DialogTitle>Games</DialogTitle>\n                    <DialogContent>\n                        <div>\n                            {content}\n                        </div>\n                    </DialogContent>\n                </Dialog>\n            </div>\n            </MuiThemeProvider>\n        );\n    }\n};","import React, { Component } from 'react';\n\nimport { JsonQueryAuth } from '../Services/Query'\n\nimport { Table, TableHead, TableBody, TableCell, TableRow, TablePagination } from '@material-ui/core';\n\n\nexport class MatchTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            columns: ['OPPONENT', 'GAME', 'BET', 'STATUS'],\n            page: 0,\n            rowsPerPage: 10,\n        }\n    }\n    componentDidMount() {\n        this.load()\n    }\n\n    load = async () => {\n        const res = await JsonQueryAuth('post','log', {})\n        console.log(res)\n        if(res.status === 'ok') {\n            this.setState({\n                data : res.match_results\n            })\n        }\n\n    }\n    handleChangePage = (event, page) => {\n        this.setState({ page });\n    };\n\n    handleChangeRowsPerPage = event => {\n        this.setState({ rowsPerPage: event.target.value });\n    };\n    render() {\n        return (\n            <React.Fragment>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            {this.state.columns.map(column =>\n                                <TableCell key={column}>\n                                    {column}\n                                </TableCell>\n                            )}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {this.state.data ? this.state.data\n                        .slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage)\n                        .map(row =>\n                            <TableRow key={row.id}>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {row.opponent.full_name}\n                                </TableCell>\n                                <TableCell>{row.game_name}</TableCell>\n                                <TableCell>{row.bet}</TableCell>\n                                <TableCell>{row.status > 0 ? <span style={{ color: 'GREEN' }}>WON</span> : <span style={{ color: 'red' }}>LOST</span>}</TableCell>\n                            </TableRow>\n                        ) : {}}\n                    </TableBody>\n                </Table>\n                <TablePagination\n                    rowsPerPageOptions={[5,10,20]}\n                    component=\"div\"\n                    count={this.state.data.length}\n                    rowsPerPage={this.state.rowsPerPage}\n                    page={this.state.page}\n                    backIconButtonProps={{\n                        'aria-label': 'Previous Page',\n                    }}\n                    nextIconButtonProps={{\n                        'aria-label': 'Next Page',\n                    }}\n                    onChangePage={this.handleChangePage}\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                />\n            </React.Fragment>\n        )\n    }\n}\n\n\nexport class WalletTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            transaction_log : [],\n            columns: ['BP', 'Date', 'Status'],\n            page: 0,\n            rowsPerPage: 10,\n        }\n    }\n\n    componentDidMount() {\n        this.load()\n    }\n\n    load = async () => {\n        const res = await JsonQueryAuth('post','wallet', {})\n        console.log(res)\n        if(res.status === 'ok') {\n            this.setState({\n                transaction_log : res.transaction_log\n            })\n        }\n\n    }\n\n    handleChangePage = (event, page) => {\n        this.setState({ page });\n    };\n\n    handleChangeRowsPerPage = event => {\n        this.setState({ rowsPerPage: event.target.value });\n    };\n    render() {\n        return (\n            <React.Fragment>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            {this.state.columns.map(column =>\n                                <TableCell key={column}>\n                                    {column}\n                                </TableCell>\n                            )}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {this.state.transaction_log ? this.state.transaction_log\n                        .slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage)\n                        .map(row =>\n                            <TableRow key={row._id}>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {row.bp}\n                                </TableCell>\n                                <TableCell>{row.date}</TableCell>\n                                <TableCell>{row.mode > 0 ? <span style={{ color: 'GREEN' }}>{row.text}</span> : <span style={{ color: 'red' }}>{row.text}</span>}</TableCell>\n                            </TableRow>\n                        ) : {}}\n                    </TableBody>\n                </Table>\n                <TablePagination\n                    rowsPerPageOptions={[5,10,20]}\n                    component=\"div\"\n                    count={this.state.transaction_log ? this.state.transaction_log.length : 0}\n                    rowsPerPage={this.state.rowsPerPage}\n                    page={this.state.page}\n                    backIconButtonProps={{\n                        'aria-label': 'Previous Page',\n                    }}\n                    nextIconButtonProps={{\n                        'aria-label': 'Next Page',\n                    }}\n                    onChangePage={this.handleChangePage}\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                />\n            </React.Fragment>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { myTheme, ColorPalate } from '../Components/MainStyles';\nimport { MuiThemeProvider } from '@material-ui/core'\n\nimport { Navigation } from '../Components/Navigation';\nimport { MatchTable } from '../Components/DataTable';\n\nimport { Paper } from '@material-ui/core';\n\nexport class History extends Component {\n\n    render() {\n        return (\n            <MuiThemeProvider theme={myTheme}>\n            <div className='History Page'>\n                <Navigation active='history' />\n                <section className='ContainerCenter'>\n                    <Paper className='Block'>\n                        <h1 style={{color: ColorPalate.green}}><i className=\"fas fa-chart-bar\"></i> History Log</h1>\n                        <div style={{ width: '100%', overflowX: 'scroll' }}>\n                            <MatchTable />\n                        </div>\n\n                    </Paper>\n                </section>\n            </div>\n            </MuiThemeProvider>\n        )\n    }\n}","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom'\nimport { MainStyles, ColorPalate, myTheme } from '../Components/MainStyles';\nimport { MuiThemeProvider } from '@material-ui/core'\n\nimport { JsonQueryAuth, HostAddress } from '../Services/Query'\n\nimport { Navigation } from '../Components/Navigation';\n\nimport { Grid } from '@material-ui/core'\nimport { List, ListItem, ListItemText, Avatar, ListSubheader } from '@material-ui/core'\n\n\nexport class Leaderboard extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            champions: [],\n            achieves: {}\n        }\n    }\n    componentDidMount() {\n        this.load()\n    }\n    load = async () => {\n        const res = await JsonQueryAuth('post', 'leaderboard', {})\n        const { champions, achieves } = res\n        this.setState({\n            champions, achieves\n        })\n    }\n    render() {\n        return (\n            <MuiThemeProvider theme={myTheme}>\n            <div className='Leaderboard Page'>\n                <Navigation active='leaderboard' load={this.load}/>\n                <section className='ContainerCenter'>\n                    <Grid container>\n                        <List  style={{ ...MainStyles.paper, width: '100%', margin: '20px' }}\n                    subheader={<ListSubheader component=\"div\" style={{ color: ColorPalate.greenLight }}>Top Rankings</ListSubheader>}\n                >\n                            {\n                                this.state.champions.map(champ => (\n                                    <Link to={`/profileOther/${champ._id}`} key={champ._id} style={{ textDecoration: 'none', color: ColorPalate.greenLight }}>\n                                    <ListItem button>\n                                        <Avatar\n                                            alt=\"Remy Sharp\"\n                                            src={`${HostAddress}${champ.img}`}\n                                            style={{ width: 50, height: 50 }} />\n                                        <ListItemText\n                                            primary={<span style={{ color: ColorPalate.green, fontSize: '1.4rem' }}>RANK {champ.rank} | {champ.full_name}</span>}\n                                            secondary={<span style={{ color: ColorPalate.greenLight, fontSize: '1.2rem' }}> ({champ.leader_point} bp)</span>} />\n                                    </ListItem>\n                                    </Link>\n                                ))\n                            }\n\n                        </List>\n\n                    </Grid>\n                </section>\n            </div>\n            </MuiThemeProvider>\n        );\n    }\n};","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport { MainStyles, ColorPalate, myTheme } from '../Components/MainStyles';\n\nimport { JsonQueryAuth, PostQueryAuth, HostAddress, getCookie } from '../Services/Query'\nimport openSocket from 'socket.io-client';\n\nimport { Grid, Paper } from '@material-ui/core'\nimport { TextField, Button, Fab } from '@material-ui/core'\nimport { Card, CardActionArea, CardMedia, CardContent } from '@material-ui/core'\nimport { List, ListItem, ListItemText, Avatar } from '@material-ui/core'\nimport { Dialog, DialogTitle, DialogContent, DialogActions, DialogContentText } from '@material-ui/core';\nimport { MuiThemeProvider } from '@material-ui/core'\n\nconst socket = openSocket(HostAddress);\n\nfunction LoadChats(chat_id, cb) {\n    const responseUrl = \"msgcame\" + chat_id;\n    socket.on(responseUrl, data => {\n        cb(data)\n    })\n}\n\nexport class Match extends Component {\n    constructor(props) {\n        super(props)\n        const urlFragments = window.location.href.split('/');\n        const match_id = urlFragments[urlFragments.length - 1];\n        this.state = {\n            match_id: match_id,\n            bet: '',\n            challenger: {},\n            challenged: {},\n            game: {},\n            time: '',\n            sender: '',\n            state: '',\n            chat_id: '',\n            contact_string: '',\n            chatVisible: false,\n            is_c : 0,\n            isAdmitDefeat : false,\n            isClaimVectory : false\n        }\n    }\n    componentDidMount() {\n        this.load()\n    }\n    load = async e => {\n        \n        const res = await JsonQueryAuth('post', `match/m/${this.state.match_id}`, {})\n        if (res.status === 'ok') {\n            const { game, challenger, challenged, chat_id, sender, contact_string, time, bet } = res;\n            const myId = getCookie('logauti')\n            let is_c = 0\n            if(myId === challenger._id) is_c = 1;\n            this.setState({\n                game, challenger, challenged, chat_id, sender, contact_string, time, bet, is_c, chatVisible: true\n            });\n        }\n    }\n    toggleAdmitDefeat = () => {\n        this.setState({\n            isAdmitDefeat : !this.state.isAdmitDefeat\n        })\n    }\n    toggleClaimVictory = () => {\n        this.setState({\n            isClaimVectory : !this.state.isClaimVectory\n        })\n    }\n    claimVictory = async e => {\n        e.preventDefault()\n        const imageFile = e.target.files[0]\n        let x = imageFile.name.split('.');\n        x = x[x.length - 1]\n        let fd = new FormData()\n        fd.append('image', imageFile, `${this.state.match_id}.${x}`)\n        fd.append('m_id', this.state.match_id)\n        fd.append('is_c', this.state.is_c)\n        const res = await PostQueryAuth('match/claimVectory', fd)\n        if (res.status === 'ok') {\n            this.toggleClaimVictory();\n            alert(\"victory claimed successfully\");\n        }\n    }\n    admitDefeat = async () => {\n        const data = {\n            m_id : this.state.match_id,\n            is_c : this.state.is_c\n        }\n        const res = await JsonQueryAuth('post', 'match/admitDefeat', data)\n        if(res.status === 'ok') {\n            this.props.history.push('/dashboard')\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <MuiThemeProvider theme={myTheme}>\n                    <div className='Match Page'>\n                        <Grid container justify='center' alignItems='center' >\n                            <Grid item xs={12} md={4} container justify='center' alignItems='center' >\n                                <Card style={{ width: '100%', margin: '20px' }}>\n                                    <CardActionArea>\n                                        <CardMedia\n                                            style={{ height: 200 }}\n                                            image={`${HostAddress}gameimg/${this.state.game.image}`}\n                                            title={this.state.game.name}\n                                        />\n                                        <CardContent style={{ ...MainStyles.paper, color: ColorPalate.greenLight }}>\n                                            <h2>{this.state.game.name}</h2>\n                                        </CardContent>\n                                    </CardActionArea>\n                                </Card>\n                                <List style={{ ...MainStyles.paper, width: '100%', margin: '20px' }}>\n                                    <ListItem button >\n                                        <ListItemText\n                                            primary={<span style={{ color: ColorPalate.green, fontSize: '1.4rem' }}> Match Id </span>}\n                                            secondary={<span style={{ color: ColorPalate.greenLight, fontSize: '1.2rem' }}> {this.state.match_id}</span>} />\n                                    </ListItem>\n                                    <ListItem button >\n                                        <ListItemText\n                                            primary={<span style={{ color: ColorPalate.green, fontSize: '1.4rem' }}> Opponent's  Contact</span>}\n                                            secondary={<span style={{ color: ColorPalate.greenLight, fontSize: '1.2rem' }}> {this.state.contact_string} </span>} />\n                                    </ListItem>\n                                    <Link to={`/profileOther/${this.state.challenged._id}`} style={{ textDecoration: 'none', color: ColorPalate.greenLight }}>\n                                    <ListItem button>\n                                        <Avatar\n                                            alt=\"Remy Sharp\"\n                                            src={`${HostAddress}user/${this.state.challenger.folder}/${this.state.challenger.image}`}\n                                            style={{ width: 50, height: 50 }} />\n                                        <ListItemText\n                                            primary={<span style={{ color: ColorPalate.green, fontSize: '1.4rem' }}> Challenger </span>}\n                                            secondary={<span style={{ color: ColorPalate.greenLight, fontSize: '1.2rem' }}> {this.state.challenger.full_name} </span>} />\n                                    </ListItem>\n                                    </Link>\n                                    <Link to={`/profileOther/${this.state.challenged._id}`} style={{ textDecoration: 'none', color: ColorPalate.greenLight }}>\n                                    <ListItem button>\n                                        <Avatar\n                                            alt=\"Remy Sharp\"\n                                            src={`${HostAddress}user/${this.state.challenged.folder}/${this.state.challenged.image}`}\n                                            style={{ width: 50, height: 50 }} />\n                                        <ListItemText\n                                            primary={<span style={{ color: ColorPalate.green, fontSize: '1.4rem' }}> challenged </span>}\n                                            secondary={<span style={{ color: ColorPalate.greenLight, fontSize: '1.2rem' }}> {this.state.challenged.full_name} </span>} />\n                                    </ListItem>\n                                    </Link>\n                                    <ListItem button>\n                                        <ListItemText\n                                            primary={<span style={{ color: ColorPalate.green, fontSize: '1.4rem' }}> bet </span>}\n                                            secondary={<span style={{ color: ColorPalate.greenLight, fontSize: '1.2rem' }}>{this.state.bet}  BP</span>} />\n                                    </ListItem>\n                                </List>\n                            </Grid>\n                            <Grid item xs={12} md={8} style={{ padding: 20 }}>\n                                <Paper style={{ ...MainStyles.paper, padding: 16 }}>\n                                    <h2 style={{ color: ColorPalate.green }}>Evaluation</h2>\n                                    <Button variant='outlined'  onClick={this.toggleClaimVictory} style={{ width: '40%', margin: '2.5%', padding: 16, color: ColorPalate.greenLight }}>Clain Victory</Button>\n                                    <Button variant='outlined' onClick={this.toggleAdmitDefeat} style={{ width: '40%', margin: '2.5%', padding: 16, color: ColorPalate.greenLight }}>Admit Defeat</Button>\n                                </Paper>\n                                <Paper style={{ ...MainStyles.paper, padding: 16, height: '60vh', marginTop: 20 }}>\n                                    <h2 style={{ color: ColorPalate.green }}>Chat</h2>{\n                                        this.state.chatVisible ?\n                                            <ChatBox chat_id={this.state.chat_id} chat_id={this.state.chat_id} sender={this.state.sender} />\n                                            : ''}\n                                </Paper>\n                            </Grid>\n                        </Grid>\n                    </div>\n                    <Dialog\n                        open={this.state.isClaimVectory}\n                        onClose={this.toggleClaimVictory}\n                        keepMounted>\n                        <DialogTitle>UPLOAD SCREENSHOT</DialogTitle>\n                        <DialogContent>\n                            <div>\n                                <form encType=\"multipart/form-data\">\n                                    <Button style={{ margin: '1vw', width: '90%' }}>\n                                        <input type='file'\n                                            style={{ width: '100%', opacity: 0, position: 'absolute' }}\n                                            onChange={this.claimVictory} />\n                                        <span><i className=\"fas fa-upload\"></i> upload screenShot</span>\n                                    </Button>\n                                </form>\n                            </div>\n                        </DialogContent>\n                    </Dialog>\n                    <Dialog open={this.state.isAdmitDefeat} onClose={this.toggleAdmitDefeat} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\">ADMIT DEFEAT</DialogTitle>\n                        <DialogContent>\n                        <DialogContentText>\n                            Do you really want to admit defeat?\n                        </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                        <Button onClick={this.admitDefeat} color='primary'>\n                            Ok\n                        </Button>\n                        <Button onClick={this.toggleAdmitDefeat} color='secondary'>\n                            Cancel\n                        </Button>\n                        </DialogActions>\n                    </Dialog>\n                </MuiThemeProvider>\n            </React.Fragment>\n        )\n    }\n}\n\nclass ChatBox extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            chat_id: this.props.chat_id,\n            messages: [],\n            message: ''\n        }\n        this.chatbox = React.createRef()\n    }\n\n    componentDidMount() {\n        this.load();\n    }\n    handleChange = name => e => {\n        this.setState({\n            [name]: e.target.value\n        })\n    }\n    load = async () => {\n        LoadChats(this.state.chat_id, (data) => {\n            this.setState({\n                messages: data.chat.log\n            })\n            const chatbox = this.chatbox.current\n            if(chatbox !== null && chatbox !== undefined)\n            chatbox.scrollTop = chatbox.scrollHeight\n        })\n        socket.emit('chatResponse', {\n            chatId: this.state.chat_id\n        })\n    }\n    sendMsg = async e => {\n        e.preventDefault();\n        if (this.state.message.length > 0) {\n            socket.emit('chatRequest', {\n                chatId: this.props.chat_id,\n                col: 1,\n                sender: this.props.sender,\n                text: this.state.message\n            })\n            this.setState({\n                message: ''\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Grid container>\n                    <Grid item xs={12}>\n                        <div ref={this.chatbox} style={{width: '100%', height: '40vh',overflowY: 'scroll', overflowX:'hidden'}}>\n                        <div>\n                        {this.state.messages.map(msg => {\n\n                                return (\n                                    <div key={msg._id} style={{margin: 10, display:'flex', width:'100%'\n                                     }}>\n                                     <div style={this.props.sender === msg.name._id? {width: '10%'} : {}}></div>\n                                        <Avatar\n                                            alt=\"Remy Sharp\"\n                                            src={`${HostAddress}user/${msg.name.folder}/${msg.name.image}`}\n                                            style={{ width: 50, height: 50 }} />\n                                        <div className='msgBubble' style={{width:'80%'}}>\n                                            <h4 style={{}}>{msg.name.full_name}</h4>\n                                            <h5 style={{}}>{msg.text}</h5>\n                                        </div>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                        </div>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <form onSubmit={this.sendMsg} className='kami'>\n                            <TextField className='kal' style={{ width: window.innerWidth < 600 ? '76%' : '84%' }}\n                                label='message'\n                                margin='dense'\n                                value={this.state.message}\n                                onChange={this.handleChange('message')}\n                                helperText={'write message'}\n\n                            />\n                            <Fab type='submit' style={{ fontSize: 24, color: ColorPalate.greenLight, backgroundColor: '#444' }}>\n                                <i className=\"fas fa-paper-plane\"></i>\n                            </Fab>\n                        </form>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n\n}","import React, { Component } from 'react';\nimport { MainStyles, ColorPalate, myTheme } from '../Components/MainStyles';\nimport { MuiThemeProvider } from '@material-ui/core'\nimport {  GameCard } from '../Components/Cards';\n\nimport { JsonQueryAuth, HostAddress, PostQueryAuth } from '../Services/Query'\n\nimport { Navigation } from '../Components/Navigation';\n\nimport { Paper, Grid, LinearProgress, TextField } from '@material-ui/core';\nimport { Card, CardMedia, CardActionArea, CardContent, CardActions, Typography, Button, Divider, CircularProgress } from '@material-ui/core';\nimport { Dialog, DialogTitle, DialogContent} from '@material-ui/core';\n\nexport class Profile extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isDataAvailable: false,\n            user: '',\n            image: require('../img/default.jpg'),\n            name: '',\n            match: {},\n            level: {},\n            isChangePassword : false,\n            password : '',\n            new_password: '',\n            msg_password : '',\n            msg_new_password: '',\n            games:[]\n        }\n    }\n    handleChange = name => e => {\n        this.setState({\n            [name]: e.target.value\n        })\n    } \n\n    componentDidMount() {\n        this.load()\n    }\n    load = async e => {\n        const res = await JsonQueryAuth('post', 'profile', {});\n        if (res.status === 'ok') {\n            this.setState({\n                isDataAvailable: true,\n                user: res.user,\n                name: res.user.full_name,\n                image: `${HostAddress}user/${res.user.folder}/${res.user.image}`,\n                match: res.match,\n                level: res.level\n            });\n            const res1 = await JsonQueryAuth('POST', 'info/getGames', {})\n            this.setState({\n                games: res1\n            });\n        }\n    }\n    toggleChangePassword = () => {\n        this.setState({\n            isChangePassword : !this.state.isChangePassword\n        })\n    }\n    clearMsg = () => {\n        this.setState({\n            msg_password: '',\n            msg_new_password: ''\n        });\n    }\n    changePassword = async e => {\n        e.preventDefault()\n        this.clearMsg()\n        const { password, new_password } = this.state\n        const res = await JsonQueryAuth('post', 'profile/update/password', { password, new_password })\n        if (res.errors) {\n            res.errors.map(err => {\n                const fieldName = 'msg_' + err.param;\n                this.setState({ [fieldName]: err.msg });\n                return err\n            });\n        }\n        if(res.status === 'ok' ) {\n            this.load()\n            this.setState({\n              password : '',\n              new_password: ''  \n            })\n            this.toggleChangePassword()\n        }\n    }\n\n    render() {\n        return (\n            <MuiThemeProvider theme={myTheme}>\n            <div className='Profile Page'>\n                <Navigation active='profile' load={this.load} />\n                <section className='ContainerCenter'>\n                    <Paper className='Block' style={MainStyles.block}>\n                        <h1><i className=\"fas fa-users\"></i> Profile</h1><br />\n                        <Grid container spacing={16}>\n                            <Grid item xs={12} md={3}>\n                                <ProfileCard\n                                    load={this.load}\n                                    image={this.state.image}\n                                    name={this.state.name}\n                                    isJenuine={true} />\n                            </Grid>\n                            <Grid item xs={12} md={9}>\n                                {\n                                    this.state.isDataAvailable ? <InfoCard match={this.state.match} level={this.state.level} user={this.state.user} isJenuine={true}/> : ''\n                                }\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                    <Paper className='Block' style={MainStyles.block}>\n                        <h1><i className=\"fas fa-dice\"></i>Game Library</h1>\n                        <br />\n                        <Grid container spacing={16}>\n                                {this.state.games.map(game => <GameCard key={game._id} game={game} load={this.load} />)} \n                        </Grid>\n                    </Paper>\n                    <Paper className='Block' style={MainStyles.block}>\n                        <h1><i className=\"fas fa-cogs\"></i> Profile Settings</h1>\n                        <br />\n                        <Button style={{color: ColorPalate.green}} onClick={this.toggleChangePassword}>\n                        <i className=\"fas fa-unlock\"></i> change password\n                        </Button>\n                    </Paper>\n                </section>\n                <Dialog\n                    open={this.state.isChangePassword}\n                    onClose={this.toggleChangePassword}\n                    keepMounted>\n                    <DialogTitle>Change password</DialogTitle>\n                    <DialogContent>\n                        <div>\n                            <form onSubmit={this.changePassword}>\n                                {//this.changeImageProgress ? <LinearProgress /> : ''\n                                }\n                                <TextField style={{ margin: '1vw', width: '90%' }}\n                                    label=\"Old Password\"\n                                    margin=\"normal\"\n                                    type='password'\n                                    value={this.state.password}\n                                    onChange={this.handleChange('password')}\n                                    helperText={this.state.msg_password}\n                                    error={this.state.msg_password.length > 0}\n                                />\n                                <TextField style={{ margin: '1vw', width: '90%' }}\n                                    label=\"New Password\"\n                                    margin=\"normal\"\n                                    value={this.state.new_password}\n                                    onChange={this.handleChange('new_password')}\n                                    helperText={this.state.msg_new_password}\n                                    error={this.state.msg_new_password.length > 0}\n                                />\n                                <Button type='submit' variant='outlined' style={{ margin: '1vw', width: '90%' }}>\n                                    <span><i className=\"fas fa-upload\"></i> Change Password</span>\n                                </Button>\n                            </form>\n                        </div>\n                    </DialogContent>\n                </Dialog>\n            </div>\n            </MuiThemeProvider>\n        );\n    }\n};\n\nexport class OtherProfile extends Component {\n    constructor(props) {\n        super(props)\n        const urlFragments = window.location.href.split('/');\n        const user_id = urlFragments[urlFragments.length - 1];\n        this.state = {\n            isDataAvailable: false,\n            user_id : user_id,\n            user: '',\n            image: require('../img/default.jpg'),\n            name: '',\n            match: {},\n            level: {},\n        }\n    }\n\n    componentDidMount() {\n        this.load()\n    }\n    load = async e => {\n        const res = await JsonQueryAuth('post', `profile/${this.state.user_id}`, {});\n        if (res.status === 'ok') {\n            this.setState({\n                isDataAvailable: true,\n                user: res.user,\n                name: res.user.full_name,\n                image: `${HostAddress}user/${res.user.folder}/${res.user.image}`,\n                match: res.match,\n                level: res.level\n            })\n            \n        }\n    }\n\n    render() {\n        return (\n            <div className='Profile Page'>\n                <Navigation active='profile' load={this.load} />\n                <section className='ContainerCenter'>\n                    <Paper className='Block' style={MainStyles.block}>\n                        <h1><i className=\"fas fa-users\"></i> Profile</h1><br />\n                        <Grid container spacing={16}>\n                            <Grid item xs={12} md={3}>\n                                <ProfileCard\n                                    load={this.load}\n                                    image={this.state.image}\n                                    name={this.state.name}\n                                    isJenuine={false} />\n                            </Grid>\n                            <Grid item xs={12} md={9}>\n                                {\n                                    this.state.isDataAvailable ? <InfoCard match={this.state.match} level={this.state.level} user={this.state.user} isJenuine={false}/> : ''\n                                }\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </section>\n            </div>\n        );\n    }\n}\n\nclass ProfileCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isChangeImage: false,\n            isChangeName: false,\n            changeImageProgress: false,\n            cahangeNameProgress: false,\n            newName: '',\n            msg_name: ''\n        }\n    }\n    handleChange = name => e => {\n        this.setState({\n            [name]: e.target.value\n        })\n    }\n    toggleChangeImage = () => {\n        this.setState({\n            isChangeImage: !this.state.isChangeImage\n        })\n    }\n    toggleChangeName = () => {\n        this.setState({\n            isChangeName: !this.state.isChangeName,\n            msg_name: ''\n        })\n    }\n    changeImage = async e => {\n        this.setState({\n            changeImageProgress: true\n        })\n        const imageFile = e.target.files[0]\n        let fd = new FormData()\n        fd.append('image', imageFile, 'image.jpg')\n        const res = await PostQueryAuth('profile/update/image', fd)\n        if (res.status === 'ok') {\n            this.setState({\n                changeImageProgress: false\n            })\n            window.location.reload()\n        }\n    }\n    changeName = async e => {\n        e.preventDefault()\n        this.setState({\n            changeNameProgress: true\n        })\n        const res = await JsonQueryAuth('post','profile/update/name', {name : this.state.newName})\n        if(res.errors) {\n            this.setState({\n                msg_name : res.errors[0].msg\n            })\n        }\n        if (res.status === 'ok') {\n            this.setState({\n                changeNameProgress: false,\n                newName : '',\n                msg_name : ''\n            })\n            this.props.load()\n            this.toggleChangeName()\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Card style={{ background: '#333' }}>\n                    <CardActionArea>\n                        <CardMedia\n                            style={{ height: 200 }}\n                            image={this.props.image}\n                            title={this.props.name}\n                        />\n                        <CardContent style={{ height: 20 }}>\n                            <Typography gutterBottom variant=\"h5\" component=\"h1\" style={{ color: ColorPalate.greenLight, fontSize: '1.2rem' }}>\n                                {this.props.name}\n                            </Typography>\n                        </CardContent>\n                    </CardActionArea>\n                    {this.props.isJenuine ?\n                        <CardActions >\n\n                            <Button size=\"small\"\n                                color=\"primary\"\n                                onClick={this.toggleChangeImage}\n                                style={{ color: ColorPalate.green, fontSize: '0.6rem' }}>\n                                Edit Image\n                    </Button>\n                            <Button size=\"small\"\n                                color=\"primary\"\n                                onClick={this.toggleChangeName}\n                                style={{ color: ColorPalate.green, fontSize: '0.6rem' }}>\n                                Edit Name\n                    </Button>\n                        </CardActions>\n                        : ''\n                    }\n                </Card>\n                <Dialog\n                    open={this.state.isChangeImage}\n                    onClose={this.toggleChangeImage}\n                    keepMounted>\n                    <DialogTitle>Change Image</DialogTitle>\n                    <DialogContent>\n                        <div>\n                            <form encType=\"multipart/form-data\">\n                                {this.changeImageProgress ? <LinearProgress /> : ''}\n                                <Button style={{ margin: '1vw', width: '90%' }}>\n                                    <input type='file'\n                                        style={{ width: '100%', opacity: 0, position: 'absolute' }}\n                                        onChange={this.changeImage} />\n                                    <span><i className=\"fas fa-upload\"></i> Upload new profile Image</span>\n                                </Button>\n                            </form>\n                        </div>\n                    </DialogContent>\n                </Dialog>\n                <Dialog\n                    open={this.state.isChangeName}\n                    onClose={this.toggleChangeName}\n                    keepMounted>\n                    <DialogTitle>Change Name</DialogTitle>\n                    <DialogContent>\n                        <div>\n                            <form onSubmit={this.changeName} encType=\"multipart/form-data\">\n                                {this.cahangeNameProgress ? <LinearProgress /> : ''}\n                                <TextField style={{ margin: '1vw', width: '90%' }}\n                                    label=\"New Name\"\n                                    margin=\"normal\"\n                                    value={this.state.newName}\n                                    onChange={this.handleChange('newName')}\n                                    helperText={this.state.msg_name}\n                                    error={this.state.msg_name.length > 0}\n                                />\n                                <Button type='submit' variant='outlined' style={{ margin: '1vw', width: '90%' }}>\n                                    <span><i className=\"fas fa-upload\"></i> change Name</span>\n                                </Button>\n                            </form>\n                        </div>\n                    </DialogContent>\n                </Dialog>\n            </React.Fragment>\n        );\n    }\n}\n\nconst InfoCard = ({ match, level, user, isJenuine }) => {\n    let Info = {\n        email: user.email,\n        Balance: user.balance,\n        level: level.m_level,\n        leader_points: user.leader_point,\n        next_level: level.m_next,\n        total_winning: user.total_bp_win,\n        total_wins: match.m_win,\n        total_matches: match.m_match\n    }\n    if(!isJenuine)\n        Info = {\n            level: level.m_level,\n        leader_points: user.leader_point,\n        next_level: level.m_next,\n        total_winning: user.total_bp_win,\n        total_wins: match.m_win,\n        total_matches: match.m_match\n        }\n    let Percents = {\n        next_level: level.m_levelExpPercent,\n        win_persentage: match.m_average\n    }\n\n    Info = Object.entries(Info);\n    //Percents = Object.entries(Percents);\n\n    return (\n        <Paper style={{ backgroundColor: '#444', padding: 16, color: ColorPalate.greenLight }}>\n            <Grid container>\n                {Info.map(inf => (\n                    <Grid item container xs={12} key={inf[0]}>\n                        <Grid item xs={12} md={5} style={MainStyles.heading}>{`${inf[0].replace(/_/g, \" \")} :`}</Grid>\n                        <Grid item xs={12} md={7} style={MainStyles.text}>{inf[1]}</Grid>\n                    </Grid>\n                ))}\n                <Divider />\n                <br />\n                <Grid item container xs={12} space={12} justify='center' alignItems='center'>\n                    <Grid item xs={6}>\n                        <CircularProgress thickness={12} className='animated jackInTheBox'\n                            variant=\"static\"\n                            value={Percents.win_persentage}\n                            size='80%'\n                            style={{\n                                color:\n                                    ColorPalate.greenLight\n                            }} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <CircularProgress thickness={16} className='animated jackInTheBox'\n                            variant=\"static\"\n                            value={Percents.next_level}\n                            size='80%' style={{\n                                color:\n                                    ColorPalate.greenLight\n                            }} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <span>win: {Percents.win_persentage}%</span>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <span>next level: {Percents.next_level}%</span>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n}\n","import React, { Component } from 'react';\nimport { MainStyles, ColorPalate, myTheme } from '../Components/MainStyles';\nimport { MuiThemeProvider } from '@material-ui/core'\n\nimport { JsonQueryAuth, HostAddress } from '../Services/Query'\nimport { Navigation } from '../Components/Navigation';\nimport { TournamentCard } from '../Components/Cards';\n\nimport SwipeableViews from 'react-swipeable-views';\nimport { Grid, Typography } from '@material-ui/core';\nimport { Paper, Card, CardMedia, CardContent, CardActionArea } from '@material-ui/core';\nimport { Tab, Tabs, AppBar } from '@material-ui/core';\nimport { Avatar } from '@material-ui/core';\nimport { List, ListItem, ListSubheader, } from '@material-ui/core';\nimport { ExpansionPanel, ExpansionPanelDetails, ExpansionPanelSummary } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nexport class Tournament extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isInTournament: false,\n            tournament_id: ''\n        }\n    }\n    enterTournament = id => {\n        this.setState({\n            isInTournament: true,\n            tournament_id: id\n        })\n    }\n    load = () => {\n        //do nothing\n    }\n    render() {\n        return (\n            <MuiThemeProvider theme={myTheme}>\n            <div className='Tournament Page'>\n                <Navigation active='tournament' load={this.load} />\n                <section className='ContainerCenter'>\n                    {\n                        this.state.isInTournament ? <TournamentInSide tournament_id={this.state.tournament_id} /> :\n                            <TournamentOutSide enterTournament={this.enterTournament} />\n                    }\n                </section>\n            </div>\n            </MuiThemeProvider>\n        )\n    }\n}\n\nclass TournamentOutSide extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            not_participating: [],\n            participating: []\n        }\n    }\n    componentDidMount() {\n        this.load()\n    }\n    load = async () => {\n        const res = await JsonQueryAuth('post', 'tournament', {})\n        this.setState({\n            not_participating: res.tournaments.not_participating,\n            participating: res.tournaments.participating\n        })\n        \n    }\n    render() {\n        return (\n            <React.Fragment>\n                <ExpansionPanel style={MainStyles.expansion} defaultExpanded>\n                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon style={MainStyles.header} />}>\n                        <Typography style={MainStyles.header}><i className=\"fas fa-puzzle-piece\"></i> Participating tournaments</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails >\n                        <Grid container spacing={16}>\n                            {\n                                this.state.participating.map(tour => <TournamentCard key={tour._id}\n                                    isParticipating={true}\n                                    player_count={tour.player_count}\n                                    load={this.load}\n                                    game={tour.game}\n                                    enterTournament={this.props.enterTournament}\n                                    tournament_id={tour._id} />)\n                            }\n                        </Grid>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n                <ExpansionPanel style={MainStyles.expansion} defaultExpanded>\n                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon style={MainStyles.header} />}>\n                        <Typography style={MainStyles.header}><i className=\"fas fa-gamepad\"></i> New Tournaments</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <Grid container spacing={16}>\n                            {\n                                this.state.not_participating.map(tour => <TournamentCard key={tour._id}\n                                    isParticipating={false}\n                                    player_count={tour.player_count}\n                                    load={this.load}\n                                    game={tour.game}\n                                    enterTournament={this.props.enterTournament}\n                                    tournament_id={tour._id} />)\n                            }\n                        </Grid>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n            </React.Fragment>\n        )\n    }\n}\n\nclass TournamentInSide extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            tournament_id: this.props.tournament_id,\n            game: {},\n            players: [],\n            prize1: '',\n            prize2: '',\n            bet: '',\n            rules: [],\n            capacity: '',\n            tabId: 0\n        }\n    }\n    componentDidMount() {\n        this.load()\n    }\n    load = async () => {\n        const res = await JsonQueryAuth('post', `tournament/${this.state.tournament_id}`, {})\n        if (res.status = 'ok') {\n            const { game, players, prize1, prize2, bet, capacity,} = res\n            let rules = res.rules.split('\\n')\n            this.setState({\n                game, players, prize1, prize2, bet, capacity, rules\n            })\n        }\n    }\n    changeTab = (event, value) => {\n        this.setState({ tabId: value })\n    }\n    handleChangeIndex = (index) => {\n        if(index >= 0 && index <= 1)\n        this.setState({ tabId: index })\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <Grid container justify='center' alignItems='center' >\n                    <Grid item xs={12} md={4} container justify='center' alignItems='center' >\n                        <Card style={{ width: '100%', margin: '20px' }}>\n                            <CardActionArea>\n                                <CardMedia\n                                    style={{ height: 200 }}\n                                    image={`${HostAddress}gameimg/${this.state.game.image}`}\n                                    title={this.state.game.name}\n                                />\n                                <CardContent style={{ ...MainStyles.paper, color: ColorPalate.greenLight }}>\n                                    <h2>{this.state.game.name}</h2>\n                                </CardContent>\n                            </CardActionArea>\n                        </Card>\n                        <TournamentPlayers players={this.state.players} />\n                    </Grid>\n                    <Grid item xs={12} md={8} style={{ padding: 20 }}>\n                        <Paper style={{ ...MainStyles.paper }}>\n                            <AppBar position=\"static\" style={{ backgroundColor: '#444' }}>\n                                <Tabs value={this.state.tabId} onChange={this.changeTab} indicatorColor='primary' textColor='primary'>\n                                    <Tab value={0} label=\"INFO\" style={{ color: this.state.tabId === 0 ? ColorPalate.greenLight : ColorPalate.green }} />\n                                    <Tab value={1} label=\"RULES\" style={{ color: this.state.tabId === 1 ? ColorPalate.greenLight : ColorPalate.green }} />\n                                </Tabs>\n                            </AppBar>\n                            <SwipeableViews\n                                index={this.state.tabId}\n                                onChangeIndex={this.handleChangeIndex}\n                            >\n                            <Grid container style={{padding: 8}}>\n                                <Grid item xs={12} md={5} style={{color: ColorPalate.greenLight}}>Tournament Id</Grid>\n                                <Grid item xs={12} md={7} style={{color: ColorPalate.green}}>{this.state.tournament_id}</Grid>\n                                <Grid item xs={12} md={5} style={{color: ColorPalate.greenLight}}>Entry Fee</Grid>\n                                <Grid item xs={12} md={7} style={{color: ColorPalate.green}}>{this.state.bet} bp</Grid>\n                                <Grid item xs={12} md={5} style={{color: ColorPalate.greenLight}}>First Prize</Grid>\n                                <Grid item xs={12} md={7} style={{color: ColorPalate.green}}>{this.state.prize1} bp</Grid>\n                                <Grid item xs={12} md={5} style={{color: ColorPalate.greenLight}}>Second Prize</Grid>\n                                <Grid item xs={12} md={7} style={{color: ColorPalate.green}}>{this.state.prize2} bp</Grid>\n                                <Grid item xs={12} md={5} style={{color: ColorPalate.greenLight}}>Tournament Capacity</Grid>\n                                <Grid item xs={12} md={7} style={{color: ColorPalate.green}}>{this.state.capacity}</Grid>\n                                <Grid item xs={12} md={5} style={{color: ColorPalate.greenLight}}>Joined players</Grid>\n                                <Grid item xs={12} md={7} style={{color: ColorPalate.green}}>{this.state.players.length}</Grid>\n                            </Grid>\n                            <div style={{color: ColorPalate.green, padding: 8}}>\n                            {this.state.rules.map( (r, i) => (<div key={i}>{r}</div>))}\n                            </div>\n                            </SwipeableViews>\n                        </Paper>\n                        <Paper style={{\n                            ...MainStyles.paper, padding: 16, height: '60vh',\n                            marginTop: 20, overflowX: 'auto',\n                            display: 'flex', justifyContent: 'center', alignItems: 'center'\n                        }}>\n                            <TournamentBracket tournament_id={this.props.tournament_id} />\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </React.Fragment>\n        )\n    }\n}\n\n\nclass TournamentBracket extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            bracket: [],\n            rounds: []\n        }\n    }\n    componentDidMount() {\n        this.load()\n    }\n    load = async () => {\n        const res = await JsonQueryAuth('post', `tournament/bracket/${this.props.tournament_id}`, {})\n        this.setState({\n            bracket: res.bracket.tree,\n            rounds: res.bracket.rounds\n        })\n        window.$(\"#tournamentBracket\").brackets({\n            titles: this.state.rounds,\n            rounds: this.state.bracket,\n            color_title: 'white',\n            border_color: '#666',\n            color_player: 'red',\n            bg_player: '#666',\n            color_player_hover: 'white',\n            bg_player_hover: ColorPalate.green,\n            border_radius_player: '2px',\n            border_radius_lines: '4px',\n        });\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <div id='tournamentBracket'></div>\n            </React.Fragment>\n        );\n    }\n}\n\nclass TournamentPlayers extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <List style={{ ...MainStyles.paper, width: '100%', margin: '20px' }}\n                    subheader={<ListSubheader component=\"div\" style={{ color: ColorPalate.greenLight }}>Perticipating players</ListSubheader>}\n                >\n                    {this.props.players.map(player => (\n                        <ListItem button key={player._id}>\n                            <div style={{ display: 'flex', alignItems: 'center' }}>\n                                <Avatar\n                                    alt={player.full_name}\n                                    src={`${HostAddress}user/${player.folder}/${player.image}`}\n                                />\n                                <span style={{ textAlign: 'center', color: ColorPalate.green, marginLeft: 10 }}>{player.full_name}</span>\n                            </div>\n                        </ListItem>\n                    ))}\n                </List>\n            </React.Fragment>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { myTheme, ColorPalate } from '../Components/MainStyles';\nimport { MuiThemeProvider } from '@material-ui/core'\n\nimport { Paper } from '@material-ui/core';\n\nimport { WalletTable } from '../Components/DataTable'\nimport { Navigation } from '../Components/Navigation';\n\nexport class Wallet extends Component {\n    render() {\n        return(\n            <MuiThemeProvider theme={myTheme}>\n            <div className='Wallet Page'>\n                <Navigation active='wallet'/>\n                <section className='ContainerCenter'>\n                    <Paper className='Block' >\n                        <h1 style={{color: ColorPalate.green}}><i className=\"fas fa-chart-bar\"></i> Wallet Log</h1>\n                        <div style={{ width: '100%', overflowX: 'scroll'}}>\n                        <WalletTable />\n                        </div>\n                    </Paper>\n                </section>\n            </div>\n            </MuiThemeProvider>\n        )\n    }\n}","import React, { Component } from 'react'\n\nexport class NotFound extends Component {\n    render() {\n        return(\n            <div className='page'>\n                404 NotFound\n            </div>\n        )\n    }\n} ","import React,{ Component } from 'react'\nimport BracketStyle from './Bracket.module.css'\n\nconst StyleSheet = {\n    bracketContainer : {\n        width : '90%',\n        height : '40vh',\n        overflow : 'scroll',\n        display: 'flex',\n        alignItems : 'center'\n    },\n    column : {\n        width: '300px',\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent : 'space-between',\n        alignItems : 'center'\n    },\n    bracket : {\n        flex: 1,\n        width: '100%',\n        border: '1px solid black',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems : 'center',\n    },\n    match : {\n        backgroundColor : '#555',\n        color: '#bbb',\n        width: 100,\n        height: 50,\n        boxShadow: '0px 0px 10px 1px #222',\n    }\n}\n\nexport class TournamentBracket extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            data : [\n                [{x: 1, y :2}, {x:3 , y :2}, {x:3 , y :2}, {x:3 , y :2}],\n                [{x:2 , y :3}, {x:3 , y :2}],\n                [{x:2 , y :2}]\n            ]\n        }\n    }\n    render() {\n        return(\n        <div style={StyleSheet.bracketContainer}>\n           {/*  <div style={{position: \"relative\", zIndex: 1}}>\n            <div > \n            </div>\n            \n\n            </div>*/}\n            {\n                this.state.data.map( (round, j) => {\n                    return(\n                        <div style={StyleSheet.column} key={Math.random() * 10000 }>\n                            {\n                                round.map( (match, i) => {\n                                    return(\n                                        <div style={StyleSheet.bracket}>\n                                            <div style={StyleSheet.match} className={BracketStyle.Prev}>\n                                            {match.x} : {match.y}\n                                            </div>\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n                    )\n                })\n            }\n            <Bracket />\n        </div>\n        )\n    }\n}\n\nclass Bracket extends Component {\n    render() {\n        return(\n            <div className={BracketStyle.bracket}>\n\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport './App.css';\n\nimport { Admin } from './Pages/Admin';\nimport { Landing } from './Pages/Landing';\nimport { Dashboard } from './Pages/Dashboard';\nimport { History } from './Pages/History';\nimport { Leaderboard } from './Pages/Leaderboard';\nimport { Match } from './Pages/Match';\nimport { Profile, OtherProfile } from './Pages/Profile';\nimport { Tournament } from './Pages/Tournament';\nimport { Wallet } from './Pages/Wallet';\nimport { NotFound } from './Pages/NotFound'\nimport { TournamentBracket } from './Components/TournamentBracket'\n\nclass App extends Component {\n  render() {\n    return (\n      <Switch>\n        <Route exact path='/' component={Landing} />\n        <Route exact path='/admin' component={Admin} />\n        <Route path='/dashboard' component={Dashboard} />\n        <Route path='/history' component={History} />\n        <Route path='/leaderboard' component={Leaderboard} />\n        <Route path='/profile' component={Profile} />\n        <Route path='/profileOther/:id' component={OtherProfile} />\n        <Route path='/tournament' component={Tournament} />\n        <Route path='/wallet' component={Wallet} />\n        <Route Path='/match/:id' component={Match} />\n        <Route component={NotFound} />\n      </Switch>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render((\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  ), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/default.fd55f441.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cCard\":\"Cards_cCard__19KLI\",\"bCard\":\"Cards_bCard__1dVfm\",\"gameCard\":\"Cards_gameCard__aT-j6\"};"],"sourceRoot":""}