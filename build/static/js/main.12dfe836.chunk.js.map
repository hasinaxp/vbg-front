{"version":3,"sources":["Components/Bracket.module.css","Components/Navigation.module.css","img/8ball.jpg","img/chess.jpg","img/icons/vbg1.png","img/icons/sword.svg","Services/Query.js","Services/config.js","Pages/Admin.jsx","Components/MainStyles.js","Pages/Landing.jsx","Components/Navigation.jsx","Components/Cards.jsx","Pages/Dashboard.jsx","Components/DataTable.jsx","Pages/History.jsx","Pages/Leaderboard.jsx","Pages/Match.jsx","Pages/Profile.jsx","Pages/Tournament.jsx","Pages/Wallet.jsx","Pages/NotFound.jsx","Components/TournamentBracket.jsx","App.js","serviceWorker.js","index.js","img/default.jpg","Components/Cards.module.css"],"names":["module","exports","Prev","NavProfileCard","__webpack_require__","p","HostAddress","host","JsonQuery","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","type","url","info","settings","response","json","wrap","_context","prev","next","method","headers","Accept","Content-Type","credentials","body","JSON","stringify","fetch","concat","sent","status","console","log","abrupt","stop","this","_x","_x2","_x3","apply","arguments","PostQuery","_ref2","_callee2","_context2","_x4","_x5","JsonQueryAdmin","_ref3","_callee3","_context3","mode","cache","_x6","_x7","_x8","JsonQueryAuth","_ref4","_callee4","_context4","logautx","getCookie","logauty","logauti","_x9","_x10","_x11","PostQueryAuth","_ref5","_callee5","_context5","_x12","_x13","SetCookie","key","value","document","cookie","cname","name","ca","decodeURIComponent","split","i","length","c","charAt","substring","indexOf","Admin","_Component","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setActive","e","setState","active","state","inherits","createClass","panel","react_default","createElement","Admin_GameMenu","Admin_TournamentMenu","Fragment","index_es","container","style","minHeight","item","md","width","inset","primary","onClick","Component","PlayerCounts","text","Balances","TournamentMenu","_this2","load","res","games","map","g","_id","tournaments_ongoing","tournaments_yet_to_start","clearMsg","msg_tournament_game_id","msg_tournament_player_count","msg_tournament_balance","msg_tournament_rules","msg_tournament_entry_fee","handleChange","defineProperty","target","handleChangeCustomFields","field_id","custom_fields","onDrop","picture","tournament_image","onFileUpload","files","addTournament","fd","preventDefault","isCalling","FormData","append","rules","balance","player_count","entry_fee","game","errors","err","fieldName","param","msg","alert","addFields","push","Date","now","player_counts","balances","_this3","alignItems","justify","xs","margin","padding","onSubmit","encType","select","label","onChange","helperText","error","option","multiline","field","label_name","variant","className","opacity","position","height","overflowY","button","src","image","secondary","platform","PlatformSelection","GameMenu","_this4","msg_game_name","msg_game_platform","msg_game_requirement","game_image","addGame","game_name","game_platform","game_requirement","message","platform_values","game_player_count","msg_game_image","gameName","readonly","id","colors","blackLight","greenLight","green","myTheme","createMuiTheme","palette","light","main","dark","textColor","typography","useNextVariants","appBar","card","titleColor","subtitleColor","overlay","backgroundColor","paper","ColorPalate","MainStyles","nav","menuButton","marginLeft","marginRight","color","logo","sideNav","sideNavList","block","heading","fontSize","fontWeight","boxChallenger","window","innerWidth","boxGame","clipPath","expansion","header","gameBtn","zIndex","top","right","transform","gridList","minWidth","maxHeight","centerContainer","_centerContainer","display","justifyContent","textAlign","Register","msg_full_name","msg_email","msg_password","msg_confirm","event","register","_this$state","full_name","email","password","confirm","SignIn","signIn","_this2$state","connection_string","history","Landing","_Component3","toggleRegister","isRegister","toggleSignIn","isSignIn","redrt","open","onClose","Landing_Register","anchor","Landing_SignIn","spacing","viewBox","heigth","x1","y1","x2","y2","require","alt","Transition","Slide_default","assign","direction","ChallengeBets","Logo","Navigation","x","folder","showGameBtn","isOpen","data","toggleDrawer","bind","assertThisInitialized","aria-label","icons_index_es","Navigation_Logo","Navigation_GameBtn","Navigation_SideMenu","GameBtn","search","opponents","game_id","list","filter","stage","selectOpponent","nameHint","self","openChallange","op","opponent","challenge","_ref6","_callee6","bet","_context6","challenger","challenged","toggleChallenge","bets","dialogContent","dialogTitle","cellHeight","cols","title","subtitle","autoComplete","marginTop","TransitionComponent","keepMounted","SideMenu","_ref7","styles","Link","to","textDecoration","ChallengeCard","acceptChallenge","match_id","cancelChallenge","isChallenger","marginBottom","bCard","MatchCard","_Component2","_getPrototypeOf2","_len","args","Array","_key","redirect","_this$props","lg","cCard","TournamentCard","toggleJoin","isParticipating","tournament_id","enterTournament","joinTournament","current_available","prize","gameCard","GameCard","_Component4","toggleGame","removeGame","toggleAddGame","isAddGame","addGameSubmit","contact_string","content","requirement","Dashboard","gamePocket","gameList","challenges","matches","feeds","ch","isTournament","is_tournament","m","tournamentMatches","isgameSelect","gameSelect","r","addGames","classList","remove","theme","Navigation_Navigation","defaultExpanded","expandIcon","ExpandMore_default","clng","Cards_ChallengeCard","Cards_MatchCard","_React$createElement","Cards_GameCard","objectSpread","MatchTable","match_results","handleChangePage","page","handleChangeRowsPerPage","rowsPerPage","columns","column","slice","row","component","scope","rowsPerPageOptions","count","backIconButtonProps","nextIconButtonProps","onChangePage","onChangeRowsPerPage","WalletTable","transaction_log","bp","date","History","overflowX","DataTable_MatchTable","Leaderboard","champions","achieves","subheader","champ","img","rank","leader_point","socket","openSocket","LoadChats","chat_id","cb","responseUrl","on","Match","sender","time","myId","is_c","chatVisible","toggleAdmitDefeat","isAdmitDefeat","toggleClaimVictory","isClaimVectory","claimVictory","imageFile","admitDefeat","m_id","urlFragments","location","href","Match_ChatBox","aria-labelledby","ChatBox","messages","chat","chatbox","current","undefined","scrollTop","scrollHeight","emit","chatId","sendMsg","col","React","createRef","ref","Profile","res1","isDataAvailable","user","match","level","toggleChangePassword","isChangePassword","msg_new_password","changePassword","new_password","Profile_ProfileCard","isJenuine","Profile_InfoCard","OtherProfile","user_id","ProfileCard","toggleChangeImage","isChangeImage","toggleChangeName","isChangeName","msg_name","changeImage","changeImageProgress","reload","changeName","changeNameProgress","newName","cahangeNameProgress","background","gutterBottom","size","InfoCard","Info","Balance","m_level","leader_points","next_level","m_next","total_winning","total_bp_win","total_wins","m_win","total_matches","m_match","Percents","m_levelExpPercent","win_persentage","m_average","entries","inf","replace","space","thickness","Tournament","isInTournament","Tournament_TournamentInSide","Tournament_TournamentOutSide","TournamentOutSide","not_participating","tournaments","participating","tour","Cards_TournamentCard","players","TournamentInSide","prize1","prize2","capacity","parse","changeTab","tabId","handleChangeIndex","index","_this5","Tournament_TournamentPlayers","indicatorColor","custom","react_swipeable_views_lib_default","onChangeIndex","field_value","Tournament_TournamentBracket","TournamentBracket","_this6","bracket","tree","rounds","$","brackets","titles","color_title","border_color","color_player","bg_player","color_player_hover","bg_player_hover","border_radius_player","border_radius_lines","TournamentPlayers","player","Wallet","DataTable_WalletTable","NotFound","StyleSheet","bracketContainer","overflow","flexDirection","flex","border","boxShadow","Bracket","BracketStyle","App","Switch","Route","exact","path","Path","Boolean","hostname","ReactDOM","render","BrowserRouter","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,KAAA,4CCAlBF,EAAAC,QAAA,CAAkBE,eAAA,uKCDlBH,EAAAC,QAAiBG,EAAAC,EAAuB,wDCAxCL,EAAAC,QAAiBG,EAAAC,EAAuB,wDCAxCL,EAAAC,QAAiBG,EAAAC,EAAuB,uDCAxCL,EAAAC,QAAiBG,EAAAC,EAAuB,8QCG3BC,ECCF,CACHC,KAAS,yBDFmBA,KAEvBC,EAAS,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,EAAOC,EAAMC,EAAKC,GAAlB,IAAAC,EAAAC,EAAAC,EAAA,OAAAT,EAAAC,EAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACfN,EAAW,CACbO,OAAQV,EACRW,QAAS,CACLC,OAAQ,mBACRC,eAAgB,oBAEpBC,YAAa,eAGJ,SAATd,IAAiBG,EAASY,KAAOC,KAAKC,UAAUf,IAV/BK,EAAAE,KAAA,EAYES,MAAK,GAAAC,OAAI7B,EAAJ,QAAA6B,OAAsBlB,GAAOE,GAZpC,UAaG,OADlBC,EAZeG,EAAAa,MAaRC,OAbQ,CAAAd,EAAAE,KAAA,eAcjBa,QAAQC,IAAR,mBAAAJ,OAA+BlB,IAddM,EAAAiB,OAAA,SAeV,CAAEH,OAAQ,MAfA,cAAAd,EAAAE,KAAA,GAiBFL,EAASC,OAjBP,eAiBfA,EAjBeE,EAAAa,KAAAb,EAAAiB,OAAA,SAkBdnB,GAlBc,yBAAAE,EAAAkB,SAAA1B,EAAA2B,SAAH,gBAAAC,EAAAC,EAAAC,GAAA,OAAApC,EAAAqC,MAAAJ,KAAAK,YAAA,GAqBTC,EAAS,eAAAC,EAAAvC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAoC,EAAOjC,EAAKc,GAAZ,IAAAZ,EAAAC,EAAAC,EAAA,OAAAT,EAAAC,EAAAS,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cACfN,EAAW,CACbO,OAAQ,OACRC,QAAS,GAETG,YAAa,cACbC,KAAMA,GANWoB,EAAA1B,KAAA,EAQES,MAAK,GAAAC,OAAI7B,EAAJ,QAAA6B,OAAsBlB,GAAOE,GARpC,UASG,OADlBC,EARe+B,EAAAf,MASRC,OATQ,CAAAc,EAAA1B,KAAA,eAUjBa,QAAQC,IAAR,mBAAAJ,OAA+BlB,IAVdkC,EAAAX,OAAA,SAWV,CAAEH,OAAQ,MAXA,cAAAc,EAAA1B,KAAA,EAaFL,EAASC,OAbP,cAafA,EAbe8B,EAAAf,KAAAe,EAAAX,OAAA,SAcdnB,GAdc,yBAAA8B,EAAAV,SAAAS,EAAAR,SAAH,gBAAAU,EAAAC,GAAA,OAAAJ,EAAAH,MAAAJ,KAAAK,YAAA,GAkBTO,EAAc,eAAAC,EAAA7C,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAA0C,EAAOxC,EAAMC,EAAKC,GAAlB,IAAAC,EAAAC,EAAAC,EAAA,OAAAT,EAAAC,EAAAS,KAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,cACpBN,EAAW,CACbO,OAAQV,EACR0C,KAAM,OACNC,MAAO,WACPhC,QAAS,CACLC,OAAQ,mBACRC,eAAgB,oBAEpBC,YAAa,cACbC,KAAMC,KAAKC,UAAUf,IAVCuC,EAAAhC,KAAA,EAaHS,MAAK,GAAAC,OAAI7B,EAAJ,QAAA6B,OAAsBlB,GAAOE,GAb/B,UAcF,OADlBC,EAboBqC,EAAArB,MAcbC,OAda,CAAAoB,EAAAhC,KAAA,eAetBa,QAAQC,IAAR,mBAAAJ,OAA+BlB,IAfTwC,EAAAjB,OAAA,SAgBf,CAAEH,OAAQ,MAhBK,cAAAoB,EAAAhC,KAAA,EAkBPL,EAASC,OAlBF,cAkBpBA,EAlBoBoC,EAAArB,KAAAqB,EAAAjB,OAAA,SAmBnBnB,GAnBmB,yBAAAoC,EAAAhB,SAAAe,EAAAd,SAAH,gBAAAkB,EAAAC,EAAAC,GAAA,OAAAP,EAAAT,MAAAJ,KAAAK,YAAA,GAuBdgB,EAAa,eAAAC,EAAAtD,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAmD,EAAOjD,EAAMC,EAAKC,GAAlB,IAAAC,EAAAC,EAAAC,EAAA,OAAAT,EAAAC,EAAAS,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,cACnBN,EAAW,CACbO,OAAQV,EACR0C,KAAM,OACNC,MAAO,WACPhC,QAAS,CACLC,OAAQ,mBACRuC,QAAA,GAAAhC,OAAeiC,EAAU,YACzBC,QAAA,GAAAlC,OAAeiC,EAAU,YACzBE,QAAA,GAAAnC,OAAeiC,EAAU,YACzBvC,eAAgB,oBAEpBC,YAAa,cACbC,KAAMC,KAAKC,UAAUf,IAbAgD,EAAAzC,KAAA,EAgBFS,MAAK,GAAAC,OAAI7B,EAAJ,QAAA6B,OAAsBlB,GAAOE,GAhBhC,UAiBD,OADlBC,EAhBmB8C,EAAA9B,MAiBZC,OAjBY,CAAA6B,EAAAzC,KAAA,eAkBrBa,QAAQC,IAAR,mBAAAJ,OAA+BlB,IAlBViD,EAAA1B,OAAA,SAmBd,CAAEH,OAAQ,MAnBI,cAAA6B,EAAAzC,KAAA,EAqBNL,EAASC,OArBH,cAqBnBA,EArBmB6C,EAAA9B,KAAA8B,EAAA1B,OAAA,SAsBlBnB,GAtBkB,yBAAA6C,EAAAzB,SAAAwB,EAAAvB,SAAH,gBAAA6B,EAAAC,EAAAC,GAAA,OAAAT,EAAAlB,MAAAJ,KAAAK,YAAA,GAyBb2B,EAAa,eAAAC,EAAAjE,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAA8D,EAAQ3D,EAAKc,GAAb,IAAAZ,EAAAC,EAAAC,EAAA,OAAAT,EAAAC,EAAAS,KAAA,SAAAuD,GAAA,cAAAA,EAAArD,KAAAqD,EAAApD,MAAA,cACnBN,EAAW,CACbO,OAAQ,OACRgC,KAAM,OACNC,MAAO,WACPhC,QAAS,CACLwC,QAAA,GAAAhC,OAAeiC,EAAU,YACzBC,QAAA,GAAAlC,OAAeiC,EAAU,YACzBE,QAAA,GAAAnC,OAAeiC,EAAU,aAE7BtC,YAAa,cACbC,KAAMA,GAXe8C,EAAApD,KAAA,EAcFS,MAAK,GAAAC,OAAI7B,EAAJ,QAAA6B,OAAsBlB,GAAOE,GAdhC,UAeD,OADlBC,EAdmByD,EAAAzC,MAeZC,OAfY,CAAAwC,EAAApD,KAAA,eAgBrBa,QAAQC,IAAR,mBAAAJ,OAA+BlB,IAhBV4D,EAAArC,OAAA,SAiBd,CAAEH,OAAQ,MAjBI,cAAAwC,EAAApD,KAAA,EAmBNL,EAASC,OAnBH,cAmBnBA,EAnBmBwD,EAAAzC,KAAAyC,EAAArC,OAAA,SAoBlBnB,GApBkB,yBAAAwD,EAAApC,SAAAmC,EAAAlC,SAAH,gBAAAoC,EAAAC,GAAA,OAAAJ,EAAA7B,MAAAJ,KAAAK,YAAA,GA+BbiC,EAAY,SAACC,EAAKC,GAC3BC,SAASC,OAAT,GAAAjD,OAAqB8C,EAArB,KAAA9C,OAA4B+C,EAA5B,MAESd,EAAY,SAACiB,GAItB,IAHA,IAAIC,EAAOD,EAAQ,IAEfE,EADgBC,mBAAmBL,SAASC,QACzBK,MAAM,KACpBC,EAAI,EAAGA,EAAIH,EAAGI,OAAQD,IAAK,CAEhC,IADA,IAAIE,EAAIL,EAAGG,GACW,KAAfE,EAAEC,OAAO,IACZD,EAAIA,EAAEE,UAAU,GAEpB,GAAuB,GAAnBF,EAAEG,QAAQT,GACV,OAAOM,EAAEE,UAAUR,EAAKK,OAAQC,EAAED,QAG1C,MAAO,WEjIEK,WAAb,SAAAC,GACI,SAAAD,EAAYE,GAAO,IAAAC,EAAA,OAAAzF,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAAsD,IACfG,EAAAzF,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAAsF,GAAAO,KAAA7D,KAAMwD,KAKVM,UAAY,SAAAlB,GAAI,OAAI,SAAAmB,GAChBN,EAAKO,SAAS,CACVC,OAASrB,MANba,EAAKS,MAAQ,CACTD,OAAS,SAHER,EADvB,OAAAzF,OAAAmG,EAAA,EAAAnG,CAAAsF,EAAAC,GAAAvF,OAAAoG,EAAA,EAAApG,CAAAsF,EAAA,EAAAf,IAAA,SAAAC,MAAA,WAgBQ,IAAI6B,EACJ,OAAOrE,KAAKkE,MAAMD,QACd,IAAK,QACLI,EAAQC,EAAAnG,EAAAoG,cAACC,EAAD,MACR,MACA,IAAK,cACLH,EAAQC,EAAAnG,EAAAoG,cAACE,EAAD,MAIZ,OACIH,EAAAnG,EAAAoG,cAACD,EAAAnG,EAAMuG,SAAP,KACIJ,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAO,CAAEC,UAAW,UAChCR,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACI,GAAI,GACrBV,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAOE,MAAO,CAAEI,MAAO,SACnBX,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,KACIL,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,KACIL,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAcO,OAAK,EAACC,QAAQ,QAAQC,QAASpF,KAAK8D,UAAU,YAEhEQ,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,KACIL,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAcO,OAAK,EAACC,QAAQ,cAAcC,QAASpF,KAAK8D,UAAU,kBAEtEQ,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,KACIL,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAcO,OAAK,EAACC,QAAQ,gBAEhCb,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,KACIL,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAcO,OAAK,EAACC,QAAQ,cAK5Cb,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACI,GAAI,GACpBX,SAhDzBf,EAAA,CAA2B+B,cAwDrBC,EAAe,CACjB,CAAEC,KAAM,IAAK/C,MAAO,GACpB,CAAE+C,KAAM,IAAK/C,MAAO,GACpB,CAAE+C,KAAM,KAAM/C,MAAO,IACrB,CAAE+C,KAAM,KAAM/C,MAAO,KAEnBgD,EAAW,CAAC,GAAI,GAAI,GAAI,IAAK,IAAK,KAElCC,cACF,SAAAA,EAAYjC,GAAO,IAAAkC,EAAA,OAAA1H,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAAyF,IACfC,EAAA1H,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAAyH,GAAA5B,KAAA7D,KAAMwD,KAyBVmC,KA1BmB3H,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KA0BZ,SAAAC,IAAA,IAAAuH,EAAA,OAAA1H,EAAAC,EAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACe6B,EAAe,OAAQ,mBAAoB,IAD1D,OACGgF,EADH/G,EAAAa,KAEHE,QAAQC,IAAI+F,GACO,OAAfA,EAAIjG,QAEJ+F,EAAK1B,SAAS,CACV6B,MAAOD,EAAIC,MAAMC,IAAI,SAAAC,GACjB,MAAO,CACHR,KAAMQ,EAAEnD,KACRJ,MAAOuD,EAAEC,OAGjBC,oBAAqBL,EAAIK,oBACzBC,yBAA0BN,EAAIM,2BAbnC,wBAAArH,EAAAkB,SAAA1B,EAAA2B,SA1BY0F,EA2CnBS,SAAW,WACPT,EAAK1B,SAAS,CACVoC,uBAAwB,GACxBC,4BAA6B,GAC7BC,uBAAwB,GACxBC,qBAAsB,GACtBC,yBAA0B,MAjDfd,EAoDnBe,aAAe,SAAA7D,GAAI,OAAI,SAAAmB,GACnB2B,EAAK1B,SAALhG,OAAA0I,EAAA,EAAA1I,CAAA,GACK4E,EAAOmB,EAAE4C,OAAOnE,UAtDNkD,EAyDnBkB,yBAA2B,SAAC7C,EAAEnB,EAAKiE,GAC/B,IAAI,IAAI7D,EAAE,EAAEA,EAAE0C,EAAKxB,MAAM4C,cAAc7D,OAAOD,IACvC0C,EAAKxB,MAAM4C,cAAc9D,GAAG6D,UAAYA,IACvCnB,EAAKxB,MAAM4C,cAAc9D,GAAGJ,GAAQmB,EAAE4C,OAAOnE,OAGrDkD,EAAK1B,SAAS,CACV8C,cAAepB,EAAKxB,MAAM4C,iBAhEfpB,EAmEnBqB,OAAS,SAAAC,GACLtB,EAAK1B,SAAS,CACViD,iBAAkBD,IAEtBpH,QAAQC,IAAImH,IAvEGtB,EAyEnBwB,aAAe,SAAAnD,GACX2B,EAAK1B,SAAS,CACViD,iBAAkBlD,EAAE4C,OAAOQ,MAAM,MA3EtBzB,EA8EnB0B,cA9EmB,eAAA7G,EAAAvC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KA8EH,SAAAoC,EAAMuD,GAAN,IAAAsD,EAAAzB,EAAA,OAAA1H,EAAAC,EAAAS,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cACZgF,EAAEuD,iBACF5B,EAAK1B,SAAS,CAAEuD,WAAW,KAEvBF,EAAK,IAAIG,UACVC,OAAO,QAAS/B,EAAKxB,MAAM+C,kBAC9BI,EAAGI,OAAO,QAAS/B,EAAKxB,MAAMwD,OAC9BL,EAAGI,OAAO,UAAW/B,EAAKxB,MAAMyD,SAChCN,EAAGI,OAAO,eAAgB/B,EAAKxB,MAAM0D,cACrCP,EAAGI,OAAO,YAAa/B,EAAKxB,MAAM2D,WAClCR,EAAGI,OAAO,UAAW/B,EAAKxB,MAAM4D,MAChCT,EAAGI,OAAO,gBAAgBnI,KAAKC,UAAUmG,EAAKxB,MAAM4C,gBAXxCrG,EAAA1B,KAAA,GAYMuB,EAAU,0BAA2B+G,GAZ3C,QAYNzB,EAZMnF,EAAAf,KAiBZE,QAAQC,IAAI,kBACZ6F,EAAK1B,SAAS,CAAEuD,WAAW,IAC3B3H,QAAQC,IAAI+F,GACZF,EAAKS,WACDP,EAAImC,OACJnC,EAAImC,OAAOjC,IAAI,SAAAkC,GACX,IAAMC,EAAY,kBAAoBD,EAAIE,MAC1CxC,EAAK1B,SAALhG,OAAA0I,EAAA,EAAA1I,CAAA,GAAiBiK,EAAYD,EAAIG,SAGrCC,MAAM,mCACN1C,EAAK1B,SAAU,CACX8D,KAAM,GACNF,aAAc,EACdD,QAAS,EACTD,MAAO,GACPG,UAAU,KAEdnC,EAAKC,QAnCG,yBAAAlF,EAAAV,SAAAS,EAAAR,SA9EG,gBAAAC,GAAA,OAAAM,EAAAH,MAAAJ,KAAAK,YAAA,GAAAqF,EAoHnB2C,UAAY,SAAAtE,GACR2B,EAAKxB,MAAM4C,cAAcwB,KAAK,CAACzB,SAAU0B,KAAKC,QAC9C9C,EAAK1B,SAAU,CACX8C,cAAcpB,EAAKxB,MAAM4C,iBArH7BpB,EAAKxB,MAAQ,CACTqD,WAAW,EACXkB,cAAenD,EACfuC,UAAU,GACVa,SAAUlD,EACVK,MAAO,GACPI,oBAAqB,GACrBC,yBAA0B,GAC1B4B,KAAM,GACNF,aAAc,EACdD,QAAS,GACTD,MAAO,GACPtB,uBAAwB,GACxBC,4BAA6B,GAC7BC,uBAAwB,GACxBC,qBAAsB,GACtBC,yBAA0B,GAC1BS,iBAAiB,GACjBH,cAAc,IApBHpB,mFAwBf1F,KAAK2F,wCAmGA,IAAAgD,EAAA3I,KACL,OACIsE,EAAAnG,EAAAoG,cAACD,EAAAnG,EAAMuG,SAAP,KACIJ,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMC,WAAS,EAACgE,WAAW,SAASC,QAAQ,UACxCvE,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,IACXxE,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAOE,MAAO,CAAEkE,OAAQ,OAAQC,QAAS,SACrC1E,EAAAnG,EAAAoG,cAAA,4BACCvE,KAAKkE,MAAMqD,UAAYjD,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,MAAqB,GAC7CL,EAAAnG,EAAAoG,cAAA,QAAM0E,SAAUjJ,KAAKoH,cAAe8B,QAAQ,uBACxC5E,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMC,WAAS,EAACgE,WAAW,SAASC,QAAQ,UACxCvE,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,GACnBV,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAWE,MAAO,CAAEkE,OAAQ,MAAO9D,MAAO,OACtCkE,QAAM,EACNC,MAAM,cACN5G,MAAOxC,KAAKkE,MAAM4D,KAClBuB,SAAUrJ,KAAKyG,aAAa,QAC5B6C,WAAYtJ,KAAKkE,MAAMkC,uBACvBmD,MAAOvJ,KAAKkE,MAAMkC,uBAAuBnD,OAAS,GAEjDjD,KAAKkE,MAAM2B,MAAMC,IAAI,SAAA0D,GAAM,OACxBlF,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAUpC,IAAKiH,EAAOhH,MAAOA,MAAOgH,EAAOhH,OACtCgH,EAAOjE,UAKxBjB,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,GACnBV,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAWE,MAAO,CAAEkE,OAAQ,MAAO9D,MAAO,OACtCkE,QAAM,EACNC,MAAM,eACN5G,MAAOxC,KAAKkE,MAAMyD,QAClB0B,SAAUrJ,KAAKyG,aAAa,WAC5B6C,WAAYtJ,KAAKkE,MAAMoC,uBACvBiD,MAAOvJ,KAAKkE,MAAMoC,uBAAuBrD,OAAS,GAEjDjD,KAAKkE,MAAMwE,SAAS5C,IAAI,SAAA0D,GAAM,OAC3BlF,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAUpC,IAAKiH,EAAQhH,MAAOgH,GACzBA,EADL,WAMZlF,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,GACnBV,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAWE,MAAO,CAAEkE,OAAQ,MAAO9D,MAAO,OACtCkE,QAAM,EACNC,MAAM,eACN5G,MAAOxC,KAAKkE,MAAM0D,aAClByB,SAAUrJ,KAAKyG,aAAa,gBAC5B6C,WAAYtJ,KAAKkE,MAAMmC,4BACvBkD,MAAOvJ,KAAKkE,MAAMmC,4BAA4BpD,OAAS,GAEtDjD,KAAKkE,MAAMuE,cAAc3C,IAAI,SAAA0D,GAAM,OAChClF,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAUpC,IAAKiH,EAAOhH,MAAOA,MAAOgH,EAAOhH,OACtCgH,EAAOjE,UAKxBjB,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,GACnBV,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAWE,MAAO,CAAEkE,OAAQ,MAAO9D,MAAO,OACtCmE,MAAM,YACN5G,MAAOxC,KAAKkE,MAAM2D,UAClBwB,SAAUrJ,KAAKyG,aAAa,aAC5B6C,WAAYtJ,KAAKkE,MAAMsC,yBACvB+C,MAAOvJ,KAAKkE,MAAMsC,yBAAyBvD,OAAS,KAK5DqB,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,IACnBV,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAWE,MAAO,CAAEkE,OAAQ,MAAO9D,MAAO,OACtCwE,WAAS,EACTL,MAAM,QACNL,OAAO,SACPvG,MAAOxC,KAAKkE,MAAMwD,MAClB2B,SAAUrJ,KAAKyG,aAAa,SAC5B6C,WAAYtJ,KAAKkE,MAAMqC,qBACvBgD,MAAOvJ,KAAKkE,MAAMqC,qBAAqBtD,OAAS,KAGvDjD,KAAKkE,MAAM4C,cAAchB,IAAI,SAAA4D,GAAK,OAC/BpF,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,GAAIzC,IAAKmH,EAAM7C,UAClCvC,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAWE,MAAO,CAAEkE,OAAQ,MAAO9D,MAAO,OACtCmE,MAAM,cACN5G,MAAOkH,EAAMC,WACbN,SAAU,SAACtF,GAAD,OAAO4E,EAAK/B,yBAAyB7C,EAAE,aAAa2F,EAAM7C,aAGxEvC,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAWE,MAAO,CAAEkE,OAAQ,MAAO9D,MAAO,OACtCmE,MAAM,cACN5G,MAAOkH,EAAMlH,MACb6G,SAAU,SAACtF,GAAD,OAAM4E,EAAK/B,yBAAyB7C,EAAE,cAAc2F,EAAM7C,gBAKhFvC,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,IACXxE,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAQS,QAAS,SAACrB,GAAD,OAAO4E,EAAKN,UAAUtE,IAAI6F,QAAQ,WAAW/E,MAAO,CAAEkE,OAAQ,MAAO9D,MAAO,QACzFX,EAAAnG,EAAAoG,cAAA,gBAAOD,EAAAnG,EAAAoG,cAAA,KAAGsF,UAAU,gBAApB,uBAGRvF,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,GACnBV,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAQE,MAAO,CAAEkE,OAAQ,MAAO9D,MAAO,QACnCX,EAAAnG,EAAAoG,cAAA,SAAOjG,KAAK,OACRuG,MAAO,CAAEI,MAAO,OAAQ6E,QAAS,EAAGC,SAAU,YAC9CV,SAAUrJ,KAAKkH,eACnB5C,EAAAnG,EAAAoG,cAAA,YAAMD,EAAAnG,EAAAoG,cAAA,KAAGsF,UAAU,kBAAnB,8BAIRvF,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,IACXxE,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAQrG,KAAK,SAASsL,QAAQ,WAAW/E,MAAO,CAAEkE,OAAQ,MAAO9D,MAAO,QACpEX,EAAAnG,EAAAoG,cAAA,YAAMD,EAAAnG,EAAAoG,cAAA,KAAGsF,UAAU,kBAAnB,yBAOxBvF,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,IACXxE,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAOE,MAAO,CAAEkE,OAAQ,OAAQC,QAAS,SACrC1E,EAAAnG,EAAAoG,cAAA,6BACAD,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAME,MAAO,CAAEI,MAAO,OAAQ8D,OAAQ,OAAQiB,OAAQ,OAAQC,UAAW,WAGjEjK,KAAKkE,MAAMgC,yBAAyBJ,IAAI,SAAAC,GAAC,OACrCzB,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAUuF,QAAM,EAAC3H,IAAKwD,EAAEC,KACpB1B,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAQE,MAAO,CAAEmF,OAAQ,OAAQ/E,MAAO,SACpCX,EAAAnG,EAAAoG,cAAA,OAAK4F,IAAG,GAAA1K,OAAK7B,EAAL,YAAA6B,OAA2BsG,EAAE+B,KAAKsC,OAASvF,MAAO,CAAEmF,OAAQ,WAExE1F,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CACIQ,QAASb,EAAAnG,EAAAoG,cAAA,gBAAQwB,EAAE+B,KAAKlF,KAAf,KAAuBmD,EAAE6B,aAAzB,cACTyC,UAAW/F,EAAAnG,EAAAoG,cAAA,gBAAQwB,EAAE+B,KAAKwC,SAAW,cAAgB,UAA1C,sBAhQ9BjF,aAmRvBkF,EAAoB,CACtB,CAAEhF,KAAM,SAAU/C,MAAO,GACzB,CAAE+C,KAAM,KAAM/C,MAAO,IAGnBgI,cACF,SAAAA,EAAYhH,GAAO,IAAAiH,EAAA,OAAAzM,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAAwK,IACfC,EAAAzM,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAAwM,GAAA3G,KAAA7D,KAAMwD,KAiBV2C,SAAW,WACPsE,EAAKzG,SAAS,CACV0G,cAAe,GACfC,kBAAmB,GACnBC,qBAAsB,MAtBXH,EAyBnBhE,aAAe,SAAA7D,GAAI,OAAI,SAAAmB,GACnB0G,EAAKzG,SAALhG,OAAA0I,EAAA,EAAA1I,CAAA,GACK4E,EAAOmB,EAAE4C,OAAOnE,UA3BNiI,EA8BnB1D,OAAS,SAAAC,GACLyD,EAAKzG,SAAS,CACV6G,WAAY7D,IAEhBpH,QAAQC,IAAImH,IAlCGyD,EAoCnBvD,aAAe,SAAAnD,GACX0G,EAAKzG,SAAS,CACV6G,WAAY9G,EAAE4C,OAAOQ,MAAM,MAtChBsD,EAyCnB9E,KAzCmB3H,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAyCZ,SAAA0C,IAAA,IAAA8E,EAAA,OAAA1H,EAAAC,EAAAS,KAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,cAAAgC,EAAAhC,KAAA,EACe6B,EAAe,OAAQ,aAAc,IADpD,OACGgF,EADH7E,EAAArB,KAEH+K,EAAKzG,SAAS,CACV6B,MAAOD,EAAIC,QAEfjG,QAAQC,IAAI+F,EAAIC,OALb,wBAAA9E,EAAAhB,SAAAe,EAAAd,SAzCYyK,EAmDnBK,QAnDmB,eAAAxJ,EAAAtD,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAmDT,SAAAmD,EAAMwC,GAAN,IAAAsD,EAAAzB,EAAA,OAAA1H,EAAAC,EAAAS,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,cACNgF,EAAEuD,iBACFmD,EAAKzG,SAAS,CAAEuD,WAAW,KACvBF,EAAK,IAAIG,UACVC,OAAO,QAASgD,EAAKvG,MAAM2G,WAAY,aAC1CxD,EAAGI,OAAO,OAAQgD,EAAKvG,MAAM6G,WAC7B1D,EAAGI,OAAO,WAAYgD,EAAKvG,MAAM8G,eACjC3D,EAAGI,OAAO,cAAegD,EAAKvG,MAAM+G,kBAP9BzJ,EAAAzC,KAAA,EAUYuB,EAAU,iBAAkB+G,GAVxC,OAUAzB,EAVApE,EAAA9B,KAWNE,QAAQC,IAAI,kBACZ4K,EAAKzG,SAAS,CAAEuD,WAAW,IAC3B3H,QAAQC,IAAI+F,GACZ6E,EAAKtE,WACDP,EAAImC,OACJnC,EAAImC,OAAOjC,IAAI,SAAAkC,GACX,IAAMC,EAAY,YAAcD,EAAIE,MACpCuC,EAAKzG,SAALhG,OAAA0I,EAAA,EAAA1I,CAAA,GAAiBiK,EAAYD,EAAIG,QAGrB,GAAbvC,EAAI2D,MACHnB,MAAMxC,EAAIsF,UAEV9C,MAAM,2BACNqC,EAAK9E,QAzBP,yBAAAnE,EAAAzB,SAAAwB,EAAAvB,SAnDS,gBAAAE,GAAA,OAAAoB,EAAAlB,MAAAJ,KAAAK,YAAA,GAEfoK,EAAKvG,MAAQ,CACTqD,WAAW,EACX4D,gBAAiBZ,EACjB1E,MAAO,GACPkF,UAAW,GACXC,cAAe,EACfC,iBAAkB,GAClBJ,WAAY,GACZO,kBAAmB,EACnBV,cAAe,GACfC,kBAAmB,GACnBC,qBAAsB,GACtBS,eAAgB,IAdLZ,mFAiDfzK,KAAK2F,wCAiCL,OACIrB,EAAAnG,EAAAoG,cAACD,EAAAnG,EAAMuG,SAAP,KACIJ,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMC,WAAS,EAACgE,WAAW,SAASC,QAAQ,UACxCvE,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,IACXxE,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAOE,MAAO,CAAEkE,OAAQ,OAAQC,QAAS,SACrC1E,EAAAnG,EAAAoG,cAAA,sBACCvE,KAAKkE,MAAMqD,UAAYjD,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,MAAqB,GAC7CL,EAAAnG,EAAAoG,cAAA,QAAM0E,SAAUjJ,KAAK8K,SACjBxG,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMC,WAAS,EAACgE,WAAW,SAASC,QAAQ,UACxCvE,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,GACnBV,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAWE,MAAO,CAAEkE,OAAQ,MAAO9D,MAAO,OACtCmE,MAAM,YACNL,OAAO,SACPvG,MAAOxC,KAAKkE,MAAMoH,SAClBjC,SAAUrJ,KAAKyG,aAAa,aAC5B6C,WAAYtJ,KAAKkE,MAAMwG,cACvBnB,MAAOvJ,KAAKkE,MAAMwG,cAAczH,OAAS,KAGjDqB,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,GACnBV,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAWE,MAAO,CAAEkE,OAAQ,MAAO9D,MAAO,OACtCmE,MAAM,kBACNL,OAAO,SACPvG,MAAM,KACN+I,UAAU,KAGlBjH,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,GACnBV,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAWE,MAAO,CAAEkE,OAAQ,MAAO9D,MAAO,OACtCuG,GAAG,uBACHrC,QAAM,EACNC,MAAM,kBACN5G,MAAOxC,KAAKkE,MAAM8G,cAClB3B,SAAUrJ,KAAKyG,aAAa,kBAE3BzG,KAAKkE,MAAMiH,gBAAgBrF,IAAI,SAAA0D,GAAM,OAClClF,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAUpC,IAAKiH,EAAOhH,MAAOA,MAAOgH,EAAOhH,OACtCgH,EAAOjE,UAKxBjB,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,GACnBV,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAQE,MAAO,CAAEkE,OAAQ,MAAO9D,MAAO,QACnCX,EAAAnG,EAAAoG,cAAA,SAAOjG,KAAK,OACRuG,MAAO,CAAEI,MAAO,OAAQ6E,QAAS,EAAGC,SAAU,YAC9CV,SAAUrJ,KAAKkH,eACnB5C,EAAAnG,EAAAoG,cAAA,YAAMD,EAAAnG,EAAAoG,cAAA,KAAGsF,UAAU,kBAAnB,wBAGRvF,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,IACXxE,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAQrG,KAAK,SAASsL,QAAQ,WAAW/E,MAAO,CAAEkE,OAAQ,MAAO9D,MAAO,QACpEX,EAAAnG,EAAAoG,cAAA,YAAMD,EAAAnG,EAAAoG,cAAA,KAAGsF,UAAU,kBAAnB,mBAOxBvF,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,IACXxE,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAOE,MAAO,CAAEkE,OAAQ,OAAQC,QAAS,SACrC1E,EAAAnG,EAAAoG,cAAA,uBACAD,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAME,MAAO,CAAEI,MAAO,OAAQ8D,OAAQ,OAAQiB,OAAQ,OAAQC,UAAW,WAGjEjK,KAAKkE,MAAM2B,MAAMC,IAAI,SAAAC,GAAC,OAClBzB,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAUuF,QAAM,EAAC3H,IAAKwD,EAAEC,KACpB1B,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAQE,MAAO,CAAEmF,OAAQ,OAAQ/E,MAAO,SACpCX,EAAAnG,EAAAoG,cAAA,OAAK4F,IAAG,GAAA1K,OAAK7B,EAAL,YAAA6B,OAA2BsG,EAAEqE,OAASvF,MAAO,CAAEmF,OAAQ,WAEnE1F,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CACIQ,QAASb,EAAAnG,EAAAoG,cAAA,gBAAQwB,EAAEnD,KAAV,KACTyH,UAAW/F,EAAAnG,EAAAoG,cAAA,gBAAQwB,EAAEuE,SAAW,cAAgB,UAArC,sBA3JpCjF,qBChWjBoG,EAAS,CACXC,WAAY,OACZC,WAAY,UACZC,MAAO,QAGEC,EAAUC,yBAAe,CAClCC,QAAS,CACLzN,KAAM,OACN6G,QAAS,CACL6G,MAAO,OACPC,KAAMR,EAAOE,WACbO,KAAM,WAET7B,UAAW,CACT4B,KAAMR,EAAOE,YAEfQ,UAAW,WAEhBC,WAAY,CACRC,iBAAiB,GAEpBC,OAAQ,CACLH,UAAa,WAEjBI,KAAM,CACFC,WAAc,0BACdC,cAAiB,6BAErBC,QAAS,CACLC,gBAAmB,uBAEvBC,MAAO,CACHD,gBAAiB,4BAIZE,EAAcpB,EAGbqB,EAAa,CACvBC,IAAK,CACDJ,gBAAiBlB,EAAOC,YAE5BsB,WAAY,CACRC,YAAa,GACbC,YAAa,GACbC,MAAO1B,EAAOE,YAElByB,KAAM,CACFnI,MAAO,KAEXoI,QAAS,CACLpI,MAAO,IACP+E,OAAQ,OACRmD,MAAO1B,EAAOE,WACdgB,gBAAiBlB,EAAOC,YAE5B4B,YAAa,CACTX,gBAAiBlB,EAAOC,WACxB1C,QAAS,EACTmE,MAAO1B,EAAOE,YAElB4B,MAAO,CACHZ,gBAAiB,sBACjBQ,MAAO1B,EAAOE,YAElB6B,QAAS,CACLL,MAAO1B,EAAOE,WACd3C,QAAS,EACTyE,SAAU,SACVC,WAAY,UAEhBnI,KAAM,CACF4H,MAAO1B,EAAOG,MACd5C,QAAS,EACTyE,SAAU,UAEdb,MAAO,CACHD,gBAAiBlB,EAAOC,YAE5BiC,cAAe,CACX3D,OAAQ4D,OAAOC,WAAa,IAAM,GAAK,IACvC5I,MAAO2I,OAAOC,WAAa,IAAM,GAAI,KAEzCC,QAAU,CACN9D,OAAQ,QACR+D,SAAU,oDAGdC,UAAW,CACPhF,QAAS,GACT2D,gBAAiB,sBACjBQ,MAAO1B,EAAOG,OAElBqC,OAAQ,CACJR,SAAU,SACVC,WAAY,SACZP,MAAO1B,EAAOE,YAElBuC,QAAS,CACLnE,SAAU,WACVoE,OAAQ,EACRC,IAAKR,OAAOC,WAAa,IAAK,OAAS,OACvCQ,MAAOT,OAAOC,WAAa,IAAM,GAAK,GACtCS,UAAW,cAEfC,SAAU,CACNC,SAAU,IACVC,UAAW,KAEfC,iBAAeC,EAAA,CACXC,QAAS,OACThG,WAAY,SACZiG,eAAgB,SAChBC,UAAW,UAJA9Q,OAAA0I,EAAA,EAAA1I,CAAA2Q,EAAA,UAKF,QALE3Q,OAAA0I,EAAA,EAAA1I,CAAA2Q,EAAA,gBAMI,UANJA,ICtGbI,uBACF,SAAAA,EAAYvL,GAAO,IAAAC,EAAA,OAAAzF,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAA+O,IACftL,EAAAzF,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAA+Q,GAAAlL,KAAA7D,KAAMwD,KAaV2C,SAAW,WACP1C,EAAKO,SAAS,CACVgL,cAAe,GACfC,UAAW,GACXC,aAAc,GACdC,YAAa,MAnBF1L,EAsBnBgD,aAAe,SAAA7D,GAAI,OAAI,SAAAwM,GACnB3L,EAAKO,SAALhG,OAAA0I,EAAA,EAAA1I,CAAA,GAAiB4E,EAAOwM,EAAMzI,OAAOnE,UAvBtBiB,EAyBnB4L,SAzBmB,eAAAtR,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAyBR,SAAAC,EAAM0F,GAAN,IAAAuL,EAAAC,EAAAC,EAAAC,EAAAC,EAAA9J,EAAA,OAAA1H,EAAAC,EAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACPgF,EAAEuD,iBACF7D,EAAKO,SAAS,CAAEuD,WAAW,IAFpB+H,EAGyC7L,EAAKS,MAA7CqL,EAHDD,EAGCC,UAAWC,EAHZF,EAGYE,MAAOC,EAHnBH,EAGmBG,SAAUC,EAH7BJ,EAG6BI,QAH7B7Q,EAAAE,KAAA,EAOWjB,EAAU,OAAQ,gBAAiB,CAAEyR,YAAWC,QAAOC,WAAUC,YAP5E,OAOD9J,EAPC/G,EAAAa,KAQP+D,EAAKO,SAAS,CAAEuD,WAAW,IAC3B9D,EAAK0C,WACDP,EAAImC,OACJnC,EAAImC,OAAOjC,IAAI,SAAAkC,GACX,IAAMC,EAAY,OAASD,EAAIE,MAE/B,OADAzE,EAAKO,SAALhG,OAAA0I,EAAA,EAAA1I,CAAA,GAAiBiK,EAAYD,EAAIG,MAC1BH,IAGXI,MAAK,2BAjBF,yBAAAvJ,EAAAkB,SAAA1B,EAAA2B,SAzBQ,gBAAAC,GAAA,OAAAlC,EAAAqC,MAAAJ,KAAAK,YAAA,GAEfoD,EAAKS,MAAQ,CACTqL,UAAW,GACXC,MAAO,GACPC,SAAU,GACVC,QAAS,GACTnI,WAAW,EACXyH,cAAe,GACfC,UAAW,GACXC,aAAc,GACdC,YAAa,IAXF1L,wEA+Cf,OACIa,EAAAnG,EAAAoG,cAAA,OAAKM,MAAO,CAAEI,MAAO,OAAQ+E,OAAQ,OAAQ4E,QAAS,OAAQhG,WAAY,SAAUiG,eAAgB,WAChGvK,EAAAnG,EAAAoG,cAAA,OAAKM,MAAO,CAAEkE,OAAQ,QAClBzE,EAAAnG,EAAAoG,cAAA,sBACCvE,KAAKkE,MAAMqD,UAAYjD,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,MAAqB,GAC7CL,EAAAnG,EAAAoG,cAAA,QAAM0E,SAAUjJ,KAAKqP,UACjB/K,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMC,WAAS,GACXN,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,GACnBV,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAWE,MAAO,CAAEkE,OAAQ,MAAO9D,MAAO,OACtCuG,GAAG,gBACHpC,MAAM,OACNL,OAAO,SACPvG,MAAOxC,KAAKkE,MAAMqL,UAClBlG,SAAUrJ,KAAKyG,aAAa,aAC5B6C,WAAYtJ,KAAKkE,MAAM8K,cACvBzF,MAAOvJ,KAAKkE,MAAM8K,cAAc/L,OAAS,KAGjDqB,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,GACnBV,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAWE,MAAO,CAAEkE,OAAQ,MAAO9D,MAAO,OACtCuG,GAAG,iBACHpC,MAAM,WACNL,OAAO,SACPvG,MAAOxC,KAAKkE,MAAMsL,MAClBnG,SAAUrJ,KAAKyG,aAAa,SAC5B6C,WAAYtJ,KAAKkE,MAAM+K,UACvB1F,MAAOvJ,KAAKkE,MAAM+K,UAAUhM,OAAS,KAG7CqB,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,GACnBV,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAWE,MAAO,CAAEkE,OAAQ,MAAO9D,MAAO,OACtCuG,GAAG,oBACHpC,MAAM,WACNL,OAAO,SACPzK,KAAK,WACLkE,MAAOxC,KAAKkE,MAAMuL,SAClBpG,SAAUrJ,KAAKyG,aAAa,YAC5B6C,WAAYtJ,KAAKkE,MAAMgL,aACvB3F,MAAOvJ,KAAKkE,MAAMgL,aAAajM,OAAS,KAGhDqB,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,GACnBV,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAWE,MAAO,CAAEkE,OAAQ,MAAO9D,MAAO,OACtCuG,GAAG,4BACHpC,MAAM,mBACNL,OAAO,SACPzK,KAAK,WACLkE,MAAOxC,KAAKkE,MAAMwL,QAClBrG,SAAUrJ,KAAKyG,aAAa,WAC5B6C,WAAYtJ,KAAKkE,MAAMiL,YACvB5F,MAAOvJ,KAAKkE,MAAMiL,YAAYlM,OAAS,KAG/CqB,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,GACnBV,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAQrG,KAAK,SAASuG,MAAO,CAAEmE,QAAS,GAAImE,MAAO,SAAnD,wBAtGT9H,cAiHjBsK,cACF,SAAAA,EAAYnM,GAAO,IAAAkC,EAAA,OAAA1H,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAA2P,IACfjK,EAAA1H,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAA2R,GAAA9L,KAAA7D,KAAMwD,KASV2C,SAAW,WACPT,EAAK1B,SAAS,CACViL,UAAW,GACXC,aAAc,MAbHxJ,EAgBnBe,aAAe,SAAA7D,GAAI,OAAI,SAAAwM,GACnB1J,EAAK1B,SAALhG,OAAA0I,EAAA,EAAA1I,CAAA,GAAiB4E,EAAOwM,EAAMzI,OAAOnE,UAjBtBkD,EAmBnBkK,OAnBmB,eAAArP,EAAAvC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAmBV,SAAAoC,EAAMuD,GAAN,IAAA8L,EAAAL,EAAAC,EAAA7J,EAAA,OAAA1H,EAAAC,EAAAS,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cACLgF,EAAEuD,iBACF5B,EAAK1B,SAAS,CAAEuD,WAAW,IAFtBsI,EAGuBnK,EAAKxB,MAAzBsL,EAHHK,EAGGL,MAAOC,EAHVI,EAGUJ,SAHVhP,EAAA1B,KAAA,EAIajB,EAAU,OAAQ,aAAc,CAAE0R,QAAOC,aAJtD,OAIC7J,EAJDnF,EAAAf,KAKLgG,EAAK1B,SAAS,CAAEuD,WAAW,IAC3B7B,EAAKS,WACDP,EAAImC,OACJnC,EAAImC,OAAOjC,IAAI,SAAAkC,GACX,IAAMC,EAAY,OAASD,EAAIE,MAE/B,OADAxC,EAAK1B,SAALhG,OAAA0I,EAAA,EAAA1I,CAAA,GAAiBiK,EAAYD,EAAIG,MAC1BH,KAGX1F,EAAU,UAAWsD,EAAI4F,IACzBlJ,EAAU,UAAWoD,EAAKxB,MAAMsL,OAChClN,EAAU,UAAWsD,EAAIkK,mBACzBpK,EAAKlC,MAAMuM,QAAQzH,KAAK,eAjBvB,wBAAA7H,EAAAV,SAAAS,EAAAR,SAnBU,gBAAAE,GAAA,OAAAK,EAAAH,MAAAJ,KAAAK,YAAA,GAEfqF,EAAKxB,MAAQ,CACTsL,MAAO,GACPC,SAAU,GACVlI,WAAW,EACX0H,UAAW,GACXC,aAAc,IAPHxJ,wEAwCf,OACIpB,EAAAnG,EAAAoG,cAAA,OAAKM,MAAO,CAAEmF,OAAQ,OAAQ4E,QAAS,OAAQhG,WAAY,SAAUiG,eAAgB,WACjFvK,EAAAnG,EAAAoG,cAAA,OAAKM,MAAO,CAAEkE,OAAQ,QAClBzE,EAAAnG,EAAAoG,cAAA,qBACCvE,KAAKkE,MAAMqD,UAAYjD,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,MAAqB,GAC7CL,EAAAnG,EAAAoG,cAAA,QAAM0E,SAAUjJ,KAAK4P,QACjBtL,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMC,WAAS,GACXN,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,GACnBV,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAWE,MAAO,CAAEkE,OAAQ,MAAO9D,MAAO,OACtCuG,GAAG,iBACHpC,MAAM,WACNL,OAAO,SACPvG,MAAOxC,KAAKkE,MAAMsL,MAClBnG,SAAUrJ,KAAKyG,aAAa,SAC5B6C,WAAYtJ,KAAKkE,MAAM+K,UACvB1F,MAAOvJ,KAAKkE,MAAM+K,UAAUhM,OAAS,KAG7CqB,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,GACnBV,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAWE,MAAO,CAAEkE,OAAQ,MAAO9D,MAAO,OACtCuG,GAAG,oBACHpC,MAAM,WACNL,OAAO,SACPzK,KAAK,WACLkE,MAAOxC,KAAKkE,MAAMuL,SAClBpG,SAAUrJ,KAAKyG,aAAa,YAC5B6C,WAAYtJ,KAAKkE,MAAMgL,aACvB3F,MAAOvJ,KAAKkE,MAAMgL,aAAajM,OAAS,KAGhDqB,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,GACnBV,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAQrG,KAAK,SAASuG,MAAO,CAAEmE,QAAS,GAAImE,MAAO,SAAnD,uBAxEX9H,aAmFR2K,EAAb,SAAAC,GACI,SAAAD,EAAYxM,GAAO,IAAAmF,EAAA,OAAA3K,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAAgQ,IACfrH,EAAA3K,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAAgS,GAAAnM,KAAA7D,KAAMwD,KAMV0M,eAAiB,WACbvH,EAAK3E,SAAS,CACVmM,YAAaxH,EAAKzE,MAAMiM,cATbxH,EAYnByH,aAAe,WACXzH,EAAK3E,SAAS,CACVqM,UAAW1H,EAAKzE,MAAMmM,YAdX1H,EAiBnB2H,MAjBmBtS,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAiBX,SAAA0C,IAAA,OAAA5C,EAAAC,EAAAS,KAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,wBAAAgC,EAAAhB,SAAAe,EAAAd,SAfJ2I,EAAKzE,MAAQ,CACTiM,YAAY,EACZE,UAAU,GAJC1H,EADvB,OAAA3K,OAAAmG,EAAA,EAAAnG,CAAAgS,EAAAC,GAAAjS,OAAAoG,EAAA,EAAApG,CAAAgS,EAAA,EAAAzN,IAAA,oBAAAC,MAAA,WAsBQC,SAASpD,KAAKwK,UAAU,WAtBhC,CAAAtH,IAAA,SAAAC,MAAA,WAyBQ,OACI8B,EAAAnG,EAAAoG,cAACD,EAAAnG,EAAMuG,SAAP,KACIJ,EAAAnG,EAAAoG,cAAA,OAAKsF,UAAU,SACXvF,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAQ4L,KAAMvQ,KAAKkE,MAAMiM,WAAYK,QAASxQ,KAAKkQ,gBAC/C5L,EAAAnG,EAAAoG,cAACkM,EAAD,OAEJnM,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAQ+L,OAAO,MAAMH,KAAMvQ,KAAKkE,MAAMmM,SAAUG,QAASxQ,KAAKoQ,cAC1D9L,EAAAnG,EAAAoG,cAACoM,EAAD,CAAQZ,QAAS/P,KAAKwD,MAAMuM,WAEhCzL,EAAAnG,EAAAoG,cAAA,OAAKsF,UAAU,QACXvF,EAAAnG,EAAAoG,cAAA,OAAKiH,GAAG,QAAQ3B,UAAU,gBACtBvF,EAAAnG,EAAAoG,cAAA,WACID,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMC,WAAS,EAACgE,WAAW,SAASC,QAAQ,UACxCvE,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,IACXxE,EAAAnG,EAAAoG,cAAA,MAAIM,MAAO,CAAEsI,MAAON,EAAYlB,WAAY8B,SAAU,WAAtD,yBACAnJ,EAAAnG,EAAAoG,cAAA,MAAIM,MAAO,CAAEsI,MAAO,OAAQM,SAAU,WAAtC,kDAEJnJ,EAAAnG,EAAAoG,cAAA,WAAMD,EAAAnG,EAAAoG,cAAA,WACND,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI8H,QAAS,GAAIhM,WAAS,EAACgE,WAAW,SAASC,QAAQ,UAClEvE,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,EAAGJ,WAAS,EAACgE,WAAW,SAASC,QAAQ,UAC5DvE,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAQE,MAAO,CAAEsI,MAAON,EAAYlB,YAChCvG,QAASpF,KAAKkQ,gBACjB5L,EAAAnG,EAAAoG,cAAA,OAAKsF,UAAU,SAERvF,EAAAnG,EAAAoG,cAAA,OAAKsM,QAAQ,aAAa5L,MAAM,OAAO6L,OAAO,QAC1CxM,EAAAnG,EAAAoG,cAAA,QAAMsF,UAAU,MAAMkH,GAAG,IAAIC,GAAG,MAAMC,GAAG,IAAIC,GAAG,OAChD5M,EAAAnG,EAAAoG,cAAA,QAAMsF,UAAU,MAAMkH,GAAG,IAAIC,GAAG,KAAKC,GAAG,IAAIC,GAAG,OAE/C5M,EAAAnG,EAAAoG,cAAA,QAAMsF,UAAU,MAAMkH,GAAG,MAAMC,GAAG,MAAMC,GAAG,MAAMC,GAAG,OACpD5M,EAAAnG,EAAAoG,cAAA,QAAMsF,UAAU,MAAMkH,GAAG,MAAMC,GAAG,KAAKC,GAAG,MAAMC,GAAG,OAEnD5M,EAAAnG,EAAAoG,cAAA,QAAMsF,UAAU,MAAMkH,GAAG,OAAOC,GAAG,IAAIC,GAAG,KAAKC,GAAG,MAClD5M,EAAAnG,EAAAoG,cAAA,QAAMsF,UAAU,MAAMkH,GAAG,MAAMC,GAAG,IAAIC,GAAG,MAAMC,GAAG,MAElD5M,EAAAnG,EAAAoG,cAAA,QAAMsF,UAAU,MAAMkH,GAAG,MAAMC,GAAG,KAAKC,GAAG,MAAMC,GAAG,OACnD5M,EAAAnG,EAAAoG,cAAA,QAAMsF,UAAU,MAAMkH,GAAG,OAAOC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QAEvD5M,EAAAnG,EAAAoG,cAAA,2BAIZD,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,EAAGJ,WAAS,EAACgE,WAAW,SAASC,QAAQ,UAC5DvE,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAQE,MAAO,CAAEsI,MAAON,EAAYlB,YAChCvG,QAASpF,KAAKoQ,cACjB9L,EAAAnG,EAAAoG,cAAA,OAAKsF,UAAU,SAGRvF,EAAAnG,EAAAoG,cAAA,OAAKsM,QAAQ,aAAa5L,MAAM,OAAO6L,OAAO,QAC1CxM,EAAAnG,EAAAoG,cAAA,QAAMsF,UAAU,MAAMkH,GAAG,IAAIC,GAAG,MAAMC,GAAG,IAAIC,GAAG,OAChD5M,EAAAnG,EAAAoG,cAAA,QAAMsF,UAAU,MAAMkH,GAAG,IAAIC,GAAG,KAAKC,GAAG,IAAIC,GAAG,OAE/C5M,EAAAnG,EAAAoG,cAAA,QAAMsF,UAAU,MAAMkH,GAAG,MAAMC,GAAG,MAAMC,GAAG,MAAMC,GAAG,OACpD5M,EAAAnG,EAAAoG,cAAA,QAAMsF,UAAU,MAAMkH,GAAG,MAAMC,GAAG,KAAKC,GAAG,MAAMC,GAAG,OAEnD5M,EAAAnG,EAAAoG,cAAA,QAAMsF,UAAU,MAAMkH,GAAG,OAAOC,GAAG,IAAIC,GAAG,KAAKC,GAAG,MAClD5M,EAAAnG,EAAAoG,cAAA,QAAMsF,UAAU,MAAMkH,GAAG,MAAMC,GAAG,IAAIC,GAAG,MAAMC,GAAG,MAElD5M,EAAAnG,EAAAoG,cAAA,QAAMsF,UAAU,MAAMkH,GAAG,MAAMC,GAAG,KAAKC,GAAG,MAAMC,GAAG,OACnD5M,EAAAnG,EAAAoG,cAAA,QAAMsF,UAAU,MAAMkH,GAAG,OAAOC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QAEvD5M,EAAAnG,EAAAoG,cAAA,8BAS5BD,EAAAnG,EAAAoG,cAAA,OAAKiH,GAAG,SAAS3B,UAAU,SACvBvF,EAAAnG,EAAAoG,cAAA,OAAKsF,UAAU,WACXvF,EAAAnG,EAAAoG,cAAA,0BACAD,EAAAnG,EAAAoG,cAAA,oOAIRD,EAAAnG,EAAAoG,cAAA,OAAKiH,GAAG,SAAS3B,UAAU,SACvBvF,EAAAnG,EAAAoG,cAAA,OAAKsF,UAAU,SACXvF,EAAAnG,EAAAoG,cAAA,0DACAD,EAAAnG,EAAAoG,cAAA,+RAGJD,EAAAnG,EAAAoG,cAAA,OAAK4F,IAAKgH,EAAQ,MAAqBC,IAAI,SAC3C9M,EAAAnG,EAAAoG,cAAA,OAAK4F,IAAKgH,EAAQ,MAAqBC,IAAI,WAG/C9M,EAAAnG,EAAAoG,cAAA,OAAKiH,GAAG,SAAS3B,UAAU,SACvBvF,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMC,WAAS,EAACgM,QAAS,IACrBtM,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,GACnBV,EAAAnG,EAAAoG,cAAA,OAAKsF,UAAU,WACXvF,EAAAnG,EAAAoG,cAAA,4BACAD,EAAAnG,EAAAoG,cAAA,qEAIRD,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,GACnBV,EAAAnG,EAAAoG,cAAA,OAAKsF,UAAU,WACXvF,EAAAnG,EAAAoG,cAAA,4BACAD,EAAAnG,EAAAoG,cAAA,oEAIRD,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,GACnBV,EAAAnG,EAAAoG,cAAA,OAAKsF,UAAU,WACXvF,EAAAnG,EAAAoG,cAAA,8BACAD,EAAAnG,EAAAoG,cAAA,0EAIRD,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,GACnBV,EAAAnG,EAAAoG,cAAA,OAAKsF,UAAU,WACXvF,EAAAnG,EAAAoG,cAAA,0BACAD,EAAAnG,EAAAoG,cAAA,+EAQhBD,EAAAnG,EAAAoG,cAAA,OAAKiH,GAAG,SAAS3B,UAAU,gBACvBvF,EAAAnG,EAAAoG,cAAA,6BAlJ5ByL,EAAA,CAA6B3K,kFC7L7B,SAASgM,EAAW7N,GAChB,OAAOc,EAAAnG,EAAAoG,cAAC+M,EAAAnT,EAADH,OAAAuT,OAAA,CAAOC,UAAU,MAAShO,IAGrC,IAAMiO,EAAgB,CAClB,CAAElM,KAAM,OAAQ/C,MAAO,GACvB,CAAE+C,KAAM,QAAS/C,MAAO,IACxB,CAAE+C,KAAM,QAAS/C,MAAO,IACxB,CAAE+C,KAAM,QAAS/C,MAAO,IACxB,CAAE+C,KAAM,SAAU/C,MAAO,KACzB,CAAE+C,KAAM,SAAU/C,MAAO,MAIvBkP,EAAO,kBACRpN,EAAAnG,EAAAoG,cAAA,OACG4F,IAAKgH,EAAQ,MACbtM,MAAOiI,EAAWM,KAClBgE,IAAI,SAKCO,EAAb,SAAApO,GACI,SAAAoO,EAAYnO,GAAO,IAAAC,EAAA,OAAAzF,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAA2R,IACflO,EAAAzF,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAA2T,GAAA9N,KAAA7D,KAAMwD,KAgBVmC,KAjBmB3H,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAiBZ,SAAAC,IAAA,IAAAuH,EAAAwE,EAAAxH,EAAA+E,EAAA,OAAAzJ,EAAAC,EAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACesC,EAAc,OAAQ,eAAgB,CAAEuQ,EAAG,KAD1D,OACGhM,EADH/G,EAAAa,KAEG0K,EAFH,GAAA3K,OAEc7B,EAFd,SAAA6B,OAEiCmG,EAAIiM,OAFrC,KAAApS,OAE+CmG,EAAIwE,OAChDxH,EAAOgD,EAAI2J,UACX5H,EAAU/B,EAAI+B,QACpBlE,EAAKO,SAAS,CACVpB,KAAMA,EACNwH,MAAOA,EACPzC,QAASA,EACTmK,YAAoC,WAAtBrO,EAAKD,MAAMS,QAA6C,YAAtBR,EAAKD,MAAMS,SAT5D,wBAAApF,EAAAkB,SAAA1B,EAAA2B,SAfHyD,EAAKS,MAAQ,CACT4N,aAAc,EACdC,QAAQ,EACR3H,MAAO+G,EAAQ,IACfvO,KAAM,SACN+E,QAAS,EACTqK,KAAM,IAEVvO,EAAKwO,aAAexO,EAAKwO,aAAaC,KAAlBlU,OAAAmU,EAAA,EAAAnU,QAAAmU,EAAA,EAAAnU,CAAAyF,KAVLA,EADvB,OAAAzF,OAAAmG,EAAA,EAAAnG,CAAA2T,EAAApO,GAAAvF,OAAAoG,EAAA,EAAApG,CAAA2T,EAAA,EAAApP,IAAA,eAAAC,MAAA,WAcQxC,KAAKgE,SAAS,CACV+N,QAAS/R,KAAKkE,MAAM6N,WAfhC,CAAAxP,IAAA,oBAAAC,MAAA,WA+BQxC,KAAK2F,SA/Bb,CAAApD,IAAA,SAAAC,MAAA,WAkCQ,OACI8B,EAAAnG,EAAAoG,cAACD,EAAAnG,EAAMuG,SAAP,KACIJ,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAQoF,SAAS,SAASlF,MAAOiI,EAAWC,KACxCzI,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,KACIL,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CACIE,MAAOiI,EAAWE,WAClBG,MAAM,UAAUiF,aAAW,OAC3BhN,QAASpF,KAAKiS,cACd3N,EAAAnG,EAAAoG,cAAC8N,EAAA,EAAD,CAAMxN,MAAO,CAAEyJ,UAAW,iBAE9BhK,EAAAnG,EAAAoG,cAAC+N,EAAD,OAGAtS,KAAKkE,MAAM4N,YAAaxN,EAAAnG,EAAAoG,cAACgO,GAAD,CAAS5M,KAAM3F,KAAKwD,MAAMmC,OAAW,IAGrErB,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAQ4L,KAAMvQ,KAAKkE,MAAM6N,OAAQvB,QAASxQ,KAAKiS,cAC3C3N,EAAAnG,EAAAoG,cAACiO,GAAD,CACIvO,OAAQjE,KAAKwD,MAAMS,OACnBmG,MAAOpK,KAAKkE,MAAMkG,MAClBxH,KAAM5C,KAAKkE,MAAMtB,KACjB+E,QAAS3H,KAAKkE,MAAMyD,gBAvD5CgK,EAAA,CAAgCtM,aA+D1BoN,eACF,SAAAA,EAAYjP,GAAO,IAAAkC,EAAA,OAAA1H,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAAyS,IACf/M,EAAA1H,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAAyU,GAAA5O,KAAA7D,KAAMwD,KA6BViD,aAAe,SAAA7D,GAAI,sBAAArC,EAAAvC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAI,SAAAoC,EAAM4O,GAAN,OAAAlR,EAAAC,EAAAS,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,OACnB2G,EAAK1B,SAALhG,OAAA0I,EAAA,EAAA1I,CAAA,GACK4E,EAAOwM,EAAMzI,OAAOnE,QAEZ,aAATI,GACA8C,EAAKgN,OAAOtD,EAAMzI,OAAOnE,OALV,wBAAA/B,EAAAV,SAAAS,EAAAR,SAAJ,gBAAAC,GAAA,OAAAM,EAAAH,MAAAJ,KAAAK,YAAA,IA9BAqF,EA4CnBgN,OA5CmB,eAAA7R,EAAA7C,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KA4CV,SAAA0C,EAAO8B,GAAP,IAAAgD,EAAA+M,EAAA,OAAAzU,EAAAC,EAAAS,KAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,cAAAgC,EAAAhC,KAAA,EACasC,EAAc,OAAQ,yBAA0B,CAAEuB,KAAMA,EAAMgQ,QAASlN,EAAKxB,MAAM4D,OAD/F,OACClC,EADD7E,EAAArB,KAECiT,EAAY/M,EAAIiN,KAAKC,OAAO,SAAAlB,GAAC,OAAIA,EAAE5L,MAAQtE,EAAU,aAC3DgE,EAAK1B,SAAS,CACV2O,UAAWA,EACXI,MAAO,WALN,wBAAAhS,EAAAhB,SAAAe,EAAAd,SA5CU,gBAAAE,GAAA,OAAAW,EAAAT,MAAAJ,KAAAK,YAAA,GAAAqF,EAoDnBsN,eAAiB,SAAAxH,GAAE,sBAAAlK,EAAAtD,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAI,SAAAmD,EAAOwC,GAAP,IAAA6B,EAAA+M,EAAA,OAAAzU,EAAAC,EAAAS,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,cAAAyC,EAAAzC,KAAA,EACDsC,EAAc,OAAQ,yBAA0B,CAAEuB,KAAM8C,EAAKxB,MAAM+O,SAAUL,QAASpH,IADrF,OACb5F,EADapE,EAAA9B,KAEbiT,EAAY/M,EAAIiN,KAAKC,OAAO,SAAAlB,GAAC,OAAIA,EAAE5L,MAAQtE,EAAU,aAC3DgE,EAAK1B,SAAS,CACV2O,UAAWA,EACXO,KAAMtN,EAAIiN,KAAKC,OAAO,SAAAlB,GAAC,OAAIA,EAAE5L,MAAQtE,EAAU,aAAY,GAC3DqR,MAAO,SACPjL,KAAM0D,IAPS,wBAAAhK,EAAAzB,SAAAwB,EAAAvB,SAAJ,gBAAAG,GAAA,OAAAmB,EAAAlB,MAAAJ,KAAAK,YAAA,IApDAqF,EA8DnByN,cAAgB,SAAAC,GAAE,sBAAAnR,EAAAjE,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAI,SAAA8D,EAAM6B,GAAN,OAAA7F,EAAAC,EAAAS,KAAA,SAAAuD,GAAA,cAAAA,EAAArD,KAAAqD,EAAApD,MAAA,OAClB2G,EAAK1B,SAAS,CACVqP,SAAUD,EACVL,MAAO,cAHO,wBAAA5Q,EAAApC,SAAAmC,EAAAlC,SAAJ,gBAAAU,GAAA,OAAAuB,EAAA7B,MAAAJ,KAAAK,YAAA,IA9DCqF,EAoEnB4N,UApEmB,eAAAC,EAAAvV,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAoEP,SAAAoV,EAAMzP,GAAN,IAAA8L,EAAAwD,EAAAI,EAAA3L,EAAAoL,EAAAtN,EAAA,OAAA1H,EAAAC,EAAAS,KAAA,SAAA8U,GAAA,cAAAA,EAAA5U,KAAA4U,EAAA3U,MAAA,cAAA8Q,EAC8BnK,EAAKxB,MAAnCmP,EADAxD,EACAwD,SAAUI,EADV5D,EACU4D,IAAK3L,EADf+H,EACe/H,KAAMoL,EADrBrD,EACqBqD,KADrBQ,EAAA3U,KAAA,EAEUsC,EAAc,OAAQ,2BAA4B,CAChEsS,WAAYT,EAAKlN,IACjB4N,WAAYP,EAASrN,IACrB2B,QAAS8L,EACTb,QAAS9K,IANL,OAQW,QANblC,EAFE8N,EAAAhU,MAQAC,QACJ+F,EAAKmO,kBACLnO,EAAKlC,MAAMmC,QAEXyC,MAAMxC,EAAImC,OAAO,IAZb,wBAAA2L,EAAA3T,SAAAyT,EAAAxT,SApEO,gBAAAW,GAAA,OAAA4S,EAAAnT,MAAAJ,KAAAK,YAAA,GAEfqF,EAAKxB,MAAQ,CACT6N,QAAQ,EACRgB,MAAO,OACPe,KAAMrC,EACNwB,SAAU,GACVQ,IAAK,EACL5N,MAAO,GACPiC,KAAM,GACN6K,UAAW,GACXU,SAAU,CACNrN,IAAK,GACLpD,KAAM,GACNwH,MAAO+G,EAAQ,KAEnB+B,KAAM,CACFlN,IAAK,GACLpD,KAAM,GACNwH,MAAO+G,EAAQ,MAGvBzL,EAAKmO,gBAAkBnO,EAAKmO,gBAAgB3B,KAArBlU,OAAAmU,EAAA,EAAAnU,QAAAmU,EAAA,EAAAnU,CAAA0H,KAtBRA,iFAyBf1F,KAAKgE,SAAS,CACV+N,QAAS/R,KAAKkE,MAAM6N,OACpBgB,MAAO,mLAYO1R,EAAc,OAAQ,gBAAiB,WAAnDuE,SACN5F,KAAKgE,SAAS,CACV6B,MAAOD,uIA0CN,IACDmO,EAAeC,EADdrL,EAAA3I,KAEL,OAAQA,KAAKkE,MAAM6O,OACf,IAAK,OACDiB,EAAc,cACdD,EACIzP,EAAAnG,EAAAoG,cAACD,EAAAnG,EAAMuG,SAAP,KACIJ,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAUsP,WAAY,IAAKpP,MAAOiI,EAAWyB,UACxCvO,KAAKkE,MAAM2B,MAAMC,IAAI,SAAAC,GAAC,OACnBzB,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAcpC,IAAKwD,EAAEC,IAAKZ,QAASuD,EAAKqK,eAAejN,EAAEC,KAAMkO,KAAMtG,OAAOC,WAAa,IAAM,EAAI,GAC/FvJ,EAAAnG,EAAAoG,cAAA,OAAK4F,IAAG,GAAA1K,OAAK7B,EAAL,YAAA6B,OAA2BsG,EAAEqE,OAASgH,IAAK,cACnD9M,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CACIwP,MAAOpO,EAAEnD,KACTwR,SAAU9P,EAAAnG,EAAAoG,cAAA,yBAAgC,IAAfwB,EAAEuE,SAAiB,SAAW,aAQjF,MACJ,IAAK,SACD0J,EAAc,kBACdD,EACIzP,EAAAnG,EAAAoG,cAACD,EAAAnG,EAAMuG,SAAP,KACIJ,EAAAnG,EAAAoG,cAAA,WACID,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CACI0P,aAAa,MACb7I,GAAG,kBACHpC,MAAM,kBACN9K,KAAK,SACLyK,OAAO,SACPa,QAAQ,WACRP,SAAUrJ,KAAKyG,aAAa,YAC5B5B,MAAO,CAAEI,MAAO2I,OAAOC,WAAa,IAAM,OAAS,QAG3DvJ,EAAAnG,EAAAoG,cAAA,WACID,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAME,MAAO,CAAEmF,OAAQ,IAAKC,UAAW,WAClCjK,KAAKkE,MAAMyO,UAAU7M,IAAI,SAAAsN,GAAE,OACxB9O,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAUpC,IAAK6Q,EAAGpN,IAAKZ,QAASuD,EAAKwK,cAAcC,IAC/C9O,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAQyM,IAAI,aAAajH,IAAG,GAAA1K,OAAK7B,GAAL6B,OAAmB2T,EAAGhJ,SAClD9F,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAcQ,QAASiO,EAAG7D,kBAOlD,MACJ,IAAK,YACDyE,EAAc,YACdD,EACIzP,EAAAnG,EAAAoG,cAACD,EAAAnG,EAAMuG,SAAP,KACIJ,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMC,WAAS,EAACiE,QAAQ,SAASD,WAAW,UACxCtE,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,IACXxE,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMC,WAAS,EAACgM,QAAS,GAAI/H,QAAQ,SAASD,WAAW,UACrDtE,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,EAAGjE,MAAOiI,EAAW4B,iBAChCpK,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CACIyM,IAAKpR,KAAKkE,MAAMgP,KAAK3D,UACrBpF,IAAG,GAAA1K,OAAK7B,GAAL6B,OAAmBO,KAAKkE,MAAMgP,KAAK9I,OACtCvF,MAAO,CAAEI,MAAO2I,OAAOC,WAAa,IAAM,IAAM,IAAK7D,OAAQ4D,OAAOC,WAAa,IAAM,IAAM,OACjGvJ,EAAAnG,EAAAoG,cAAA,QAAMM,MAAO,CAAEiK,UAAW,SAAU3B,MAAM,SAAWnN,KAAKkE,MAAMgP,KAAK3D,YAEzEjL,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,EAAGjE,MAAO,CAAEiK,UAAW,SAAU3B,MAAON,EAAYlB,WAAY8B,SAAU,UAAY5D,UAAU,+BAC3GvF,EAAAnG,EAAAoG,cAAA,qBAEJD,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,EAAGjE,MAAOiI,EAAW4B,iBAChCpK,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CACIyM,IAAI,aACJjH,IAAG,GAAA1K,OAAK7B,GAAL6B,OAAmBO,KAAKkE,MAAMmP,SAASjJ,OAC1CvF,MAAO,CAAEI,MAAO2I,OAAOC,WAAa,IAAM,IAAM,IAAK7D,OAAQ4D,OAAOC,WAAa,IAAM,IAAM,OACjGvJ,EAAAnG,EAAAoG,cAAA,QAAMM,MAAO,CAAEiK,UAAW,SAAU3B,MAAM,SAAWnN,KAAKkE,MAAMmP,SAAS9D,cAIrFjL,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,GACnBV,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CACI6G,GAAG,uBACHrC,QAAM,EACNC,MAAM,aACN5G,MAAOxC,KAAKkE,MAAMuP,IAClB5O,MAAO,CAAEI,MAAO,OAAQqP,UAAW,IACnCjL,SAAUrJ,KAAKyG,aAAa,QAE3BzG,KAAKkE,MAAM4P,KAAKhO,IAAI,SAAA0D,GAAM,OACvBlF,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAUpC,IAAKiH,EAAOhH,MAAOA,MAAOgH,EAAOhH,OACtCgH,EAAOjE,UAKxBjB,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAIjE,MAAOiI,EAAW4B,iBACjCpK,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CACIE,MAAO,CAAEyP,UAAW,GAAIrP,MAAO,OAAQ+D,QAAS,GAAIyE,SAAU,SAAUN,MAAON,EAAYlB,YAC3FvG,QAASpF,KAAKsT,WAEdhP,EAAAnG,EAAAoG,cAAA,KAAGsF,UAAU,mBAAsB,OAJvC,gBAYxB,OACIvF,EAAAnG,EAAAoG,cAAA,OAAKM,MAAOiI,EAAWoB,SACnB5J,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAKE,MAAO,CAAE8H,gBAAiB,WAAavH,QAASpF,KAAK6T,gBAAiBhK,UAAU,uBACjFvF,EAAAnG,EAAAoG,cAAA,OAAK4F,IAAKgH,EAAQ,MAA2BC,IAAI,IAAIvM,MAAO,CAAEI,MAAO,OAEzEX,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CACI4L,KAAMvQ,KAAKkE,MAAM6N,OACjBvB,QAASxQ,KAAK6T,gBACdU,oBAAqBlD,EACrBmD,aAAW,GACXlQ,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,KAAcqP,GACd1P,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,KACAL,EAAAnG,EAAAoG,cAAA,WACCwP,aA3MC1O,aAqNhBoP,GAAW,SAAAC,GAAsC,IAAnCzQ,EAAmCyQ,EAAnCzQ,OAAQmG,EAA2BsK,EAA3BtK,MAAOxH,EAAoB8R,EAApB9R,KAAM+E,EAAc+M,EAAd/M,QACrC,OACIrD,EAAAnG,EAAAoG,cAAA,OAAKM,MAAOiI,EAAWO,SACnB/I,EAAAnG,EAAAoG,cAAA,OAAKsF,UAAW8K,IAAOlX,gBACnB6G,EAAAnG,EAAAoG,cAAA,WACID,EAAAnG,EAAAoG,cAAA,OAAK4F,IAAKC,EAAOgH,IAAI,YAEzB9M,EAAAnG,EAAAoG,cAAA,WACID,EAAAnG,EAAAoG,cAAA,UAAK3B,GACL0B,EAAAnG,EAAAoG,cAAA,yBAAiBoD,EAAjB,SAGRrD,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAME,MAAOiI,EAAWQ,aACpBhJ,EAAAnG,EAAAoG,cAACqQ,EAAA,EAAD,CAAMC,GAAG,aAAahQ,MAAO,CAAEiQ,eAAgB,OAAQ3H,MAAON,EAAYlB,aACtErH,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAUuF,QAAM,GACZ5F,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAcE,MAAO,CAAEsI,MAAkB,cAAXlJ,EAAyB4I,EAAYlB,WAAakB,EAAYjB,QACxFtH,EAAAnG,EAAAoG,cAAC8N,EAAA,EAAD,OAEJ/N,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAcO,OAAK,EACfC,QAASb,EAAAnG,EAAAoG,cAAA,QAAMM,MAAO,CAClBsI,MACe,cAAXlJ,EAAyB4I,EAAYlB,WAAakB,EAAYjB,QAF7D,iBAOrBtH,EAAAnG,EAAAoG,cAACqQ,EAAA,EAAD,CAAMC,GAAG,cAAchQ,MAAO,CAAEiQ,eAAgB,OAAQ3H,MAAON,EAAYlB,aACvErH,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAUuF,QAAM,GACZ5F,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAcE,MAAO,CAAEsI,MAAkB,eAAXlJ,EAA0B4I,EAAYlB,WAAakB,EAAYjB,QACzFtH,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMkF,UAAU,gBAAgBhF,MAAO,CAAEoI,YAAa,EAAGqB,UAAW,kBAExEhK,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAcO,OAAK,EACfC,QAASb,EAAAnG,EAAAoG,cAAA,QAAMM,MAAO,CAClBsI,MACe,eAAXlJ,EAA0B4I,EAAYlB,WAAakB,EAAYjB,QAF9D,kBAOrBtH,EAAAnG,EAAAoG,cAACqQ,EAAA,EAAD,CAAMC,GAAG,eAAehQ,MAAO,CAAEiQ,eAAgB,OAAQ3H,MAAON,EAAYlB,aACxErH,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAUuF,QAAM,GACZ5F,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAcE,MAAO,CAAEsI,MAAkB,gBAAXlJ,EAA2B4I,EAAYlB,WAAakB,EAAYjB,QAC1FtH,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMkF,UAAU,sBAAsBhF,MAAO,CAAEoI,WAAY,EAAGqB,UAAW,kBAE7EhK,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAcO,OAAK,EACfC,QAASb,EAAAnG,EAAAoG,cAAA,QAAMM,MAAO,CAClBsI,MACe,gBAAXlJ,EAA2B4I,EAAYlB,WAAakB,EAAYjB,QAF/D,mBAOrBtH,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,MACAL,EAAAnG,EAAAoG,cAACqQ,EAAA,EAAD,CAAMC,GAAG,UAAUhQ,MAAO,CAAEiQ,eAAgB,OAAQ3H,MAAON,EAAYlB,aACnErH,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAUuF,QAAM,GACZ5F,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAcE,MAAO,CAAEsI,MAAkB,WAAXlJ,EAAsB4I,EAAYlB,WAAakB,EAAYjB,QACrFtH,EAAAnG,EAAAoG,cAAC8N,EAAA,EAAD,OAEJ/N,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAcO,OAAK,EACfC,QAASb,EAAAnG,EAAAoG,cAAA,QAAMM,MAAO,CAClBsI,MACe,WAAXlJ,EAAsB4I,EAAYlB,WAAakB,EAAYjB,QAF1D,cAOrBtH,EAAAnG,EAAAoG,cAACqQ,EAAA,EAAD,CAAMC,GAAG,WAAWhQ,MAAO,CAAEiQ,eAAgB,OAAQ3H,MAAON,EAAYlB,aACpErH,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAUuF,QAAM,GACZ5F,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAcE,MAAO,CAAEsI,MAAkB,YAAXlJ,EAAuB4I,EAAYlB,WAAakB,EAAYjB,QACtFtH,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMkF,UAAU,gBAAgBhF,MAAO,CAAEoI,YAAa,EAAGqB,UAAW,kBAExEhK,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAcO,OAAK,EACfC,QAASb,EAAAnG,EAAAoG,cAAA,QAAMM,MAAO,CAClBsI,MACe,YAAXlJ,EAAuB4I,EAAYlB,WAAakB,EAAYjB,QAF3D,eAOrBtH,EAAAnG,EAAAoG,cAACqQ,EAAA,EAAD,CAAMC,GAAG,WAAWhQ,MAAO,CAAEiQ,eAAgB,OAAQ3H,MAAON,EAAYlB,aACpErH,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAUuF,QAAM,GACZ5F,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAcE,MAAO,CAAEsI,MAAkB,YAAXlJ,EAAuB4I,EAAYlB,WAAakB,EAAYjB,QACtFtH,EAAAnG,EAAAoG,cAAC8N,EAAA,EAAD,OAEJ/N,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAcO,OAAK,EACfC,QAASb,EAAAnG,EAAAoG,cAAA,QAAMM,MAAO,CAClBsI,MACe,YAAXlJ,EAAuB4I,EAAYlB,WAAakB,EAAYjB,QAF3D,eAOrBtH,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,MACAL,EAAAnG,EAAAoG,cAACqQ,EAAA,EAAD,CAAMC,GAAG,UAAUhQ,MAAO,CAAEiQ,eAAgB,OAAQ3H,MAAON,EAAYlB,aACnErH,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAUuF,QAAM,GACZ5F,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAcE,MAAO,CAAEsI,MAAON,EAAYjB,QACtCtH,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMkF,UAAU,sBAAsBhF,MAAO,CAAEoI,WAAY,EAAGqB,UAAW,kBAE7EhK,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAcO,OAAK,EACfC,QAASb,EAAAnG,EAAAoG,cAAA,QAAMM,MAAO,CAAEsI,MAAON,EAAYjB,QAAlC,yCCxZrC,SAASyF,GAAW7N,GAChB,OAAOc,EAAAnG,EAAAoG,cAACI,EAAA,EAAD3G,OAAAuT,OAAA,CAAOC,UAAU,MAAShO,IAE9B,IAAMuR,GAAb,SAAAxR,GACI,SAAAwR,EAAYvR,GAAO,IAAAC,EAAA,OAAAzF,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAA+U,IACftR,EAAAzF,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAA+W,GAAAlR,KAAA7D,KAAMwD,KASVqQ,gBAAkB,WACdpQ,EAAKO,SAAS,CACV+N,QAAStO,EAAKS,MAAM6N,UAZTtO,EAenBuR,gBAfmBhX,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAeD,SAAAC,IAAA,IAAAuH,EAAA,OAAA1H,EAAAC,EAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACIsC,EAAc,OAAQ,kCAAmC,CAAE4T,SAAUxR,EAAKD,MAAMgI,KADpF,OACR5F,EADQ/G,EAAAa,KAEdE,QAAQC,IAAI+F,GACO,OAAfA,EAAIjG,QACJ8D,EAAKD,MAAMmC,OACXlC,EAAKoQ,mBAGLzL,MAAMxC,EAAImC,OAAO,IARP,wBAAAlJ,EAAAkB,SAAA1B,EAAA2B,SAfCyD,EA0BnByR,gBA1BmBlX,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KA0BD,SAAAoC,IAAA,IAAAoF,EAAA,OAAA1H,EAAAC,EAAAS,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cAAA0B,EAAA1B,KAAA,EACIsC,EAAc,OAAQ,mCAAoC,CAAE4T,SAAUxR,EAAKD,MAAMgI,KADrF,OAEK,QADb5F,EADQnF,EAAAf,MAENC,QACJ8D,EAAKD,MAAMmC,OACXlC,EAAKoQ,mBAGLzL,MAAMxC,EAAImC,OAAO,IAPP,wBAAAtH,EAAAV,SAAAS,EAAAR,SAxBdyD,EAAKS,MAAQ,CACT6N,QAAQ,EACRsB,SAAU5P,EAAKD,MAAM6P,SACrBvL,KAAMrE,EAAKD,MAAMsE,KACjB2L,IAAKhQ,EAAKD,MAAMiQ,IAChB0B,aAAc1R,EAAKD,MAAM2R,cAPd1R,EADvB,OAAAzF,OAAAmG,EAAA,EAAAnG,CAAA+W,EAAAxR,GAAAvF,OAAAoG,EAAA,EAAApG,CAAA+W,EAAA,EAAAxS,IAAA,SAAAC,MAAA,WAuCQ,OACI8B,EAAAnG,EAAAoG,cAACD,EAAAnG,EAAMuG,SAAP,KACIJ,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACkE,GAAI,GAAI9D,GAAI,EAAG6D,QAAQ,SAASD,WAAW,SAAS/D,MAAO,CAAEuQ,aAAc,IAC5F9Q,EAAAnG,EAAAoG,cAAA,OAAKsF,UAAS,GAAApK,OAAKkV,KAAOU,MAAZ,2BAA4CjQ,QAASpF,KAAK6T,iBACpEvP,EAAAnG,EAAAoG,cAAA,WACID,EAAAnG,EAAAoG,cAAA,OAAK4F,IAAG,GAAA1K,OAAK7B,EAAL,YAAA6B,OAA2BO,KAAKkE,MAAM4D,KAAKsC,OAASgH,IAAI,SAChE9M,EAAAnG,EAAAoG,cAAA,UAAKvE,KAAKkE,MAAM4D,KAAKlF,MACrB0B,EAAAnG,EAAAoG,cAAA,kBAAUvE,KAAKkE,MAAMuP,IAArB,OACAnP,EAAAnG,EAAAoG,cAAA,UAAKvE,KAAKkE,MAAMmP,SAAS9D,YAE7BjL,EAAAnG,EAAAoG,cAAA,WACID,EAAAnG,EAAAoG,cAAA,OAAK4F,IAAG,GAAA1K,OAAK7B,GAAL6B,OAAmBO,KAAKkE,MAAMmP,SAASjJ,OAASgH,IAAI,gBAIxE9M,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAQ4L,KAAMvQ,KAAKkE,MAAM6N,OAAQvB,QAASxQ,KAAK6T,iBAC3CvP,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,kBACAL,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,4CAGAL,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,KACM3E,KAAKkE,MAAMiR,aAAmI,GAApH7Q,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAQS,QAASpF,KAAKgV,gBAAiBnQ,MAAO,CAAEsI,MAAO,QAASO,WAAY,WAA5E,oBAC5BpJ,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAQS,QAASpF,KAAKkV,gBAAiBrQ,MAAO,CAAEsI,MAAO,MAAOO,WAAY,WAA1E,2BA7DxBqH,EAAA,CAAmC1P,aAuEtBiQ,GAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAA9P,EAAA1H,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAAsV,GAAA,QAAAG,EAAApV,UAAA4C,OAAAyS,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAAvV,UAAAuV,GAAA,OAAAlQ,EAAA1H,OAAA2F,EAAA,EAAA3F,CAAAgC,MAAAwV,EAAAxX,OAAA4F,EAAA,EAAA5F,CAAAsX,IAAAzR,KAAAzD,MAAAoV,EAAA,CAAAxV,MAAAP,OAAAiW,MACIG,SAAW,SAAArK,GAAE,sBAAA3K,EAAA7C,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAI,SAAA0C,EAAMiD,GAAN,OAAA7F,EAAAC,EAAAS,KAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,OACb2G,EAAKlC,MAAMuM,QAAQzH,KAAnB,UAAA7I,OAAkC+L,IADrB,wBAAAzK,EAAAhB,SAAAe,EAAAd,SAAJ,gBAAAC,GAAA,OAAAY,EAAAT,MAAAJ,KAAAK,YAAA,IADjBqF,EAAA,OAAA1H,OAAAmG,EAAA,EAAAnG,CAAAsX,EAAAC,GAAAvX,OAAAoG,EAAA,EAAApG,CAAAsX,EAAA,EAAA/S,IAAA,SAAAC,MAAA,WAIa,IAAAsT,EAC+B9V,KAAKwD,MAAjCgI,EADHsK,EACGtK,GAAIiI,EADPqC,EACOrC,IAAK3L,EADZgO,EACYhO,KAAMuL,EADlByC,EACkBzC,SACvB,OACI/O,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACkE,GAAI,GAAI9D,GAAI,EAAG+Q,GAAI,EAAGlN,QAAQ,SAASD,WAAW,SAAS/D,MAAO,CAAEuQ,aAAc,IACnG9Q,EAAAnG,EAAAoG,cAAA,OAAKsF,UAAS,GAAApK,OAAKkV,KAAOqB,MAAZ,0BAA2C5Q,QAASpF,KAAK6V,SAASrK,IAC5ElH,EAAAnG,EAAAoG,cAAA,WACID,EAAAnG,EAAAoG,cAAA,OAAK4F,IAAG,GAAA1K,OAAK7B,EAAL,YAAA6B,OAA2BqI,EAAKsC,UAE5C9F,EAAAnG,EAAAoG,cAAA,WACID,EAAAnG,EAAAoG,cAAA,OAAK4F,IAAG,GAAA1K,OAAK7B,GAAL6B,OAAmB4T,EAASjJ,UAExC9F,EAAAnG,EAAAoG,cAAA,WACID,EAAAnG,EAAAoG,cAAA,kBACAD,EAAAnG,EAAAoG,cAAA,UAAK8O,EAAS9D,WACdjL,EAAAnG,EAAAoG,cAAA,WACAD,EAAAnG,EAAAoG,cAAA,UAAKuD,EAAKlF,MACV0B,EAAAnG,EAAAoG,cAAA,UAAKkP,EAAL,cApBxB6B,EAAA,CAA+BjQ,aA4BlB4Q,GAAb,SAAAhG,GACI,SAAAgG,EAAYzS,GAAO,IAAAmF,EAAA,OAAA3K,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAAiW,IACftN,EAAA3K,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAAiY,GAAApS,KAAA7D,KAAMwD,KAcV0S,WAAa,WACJvN,EAAKzE,MAAMiS,iBAKZvW,QAAQC,IAAI8I,EAAKzE,MAAMkS,eACvBzN,EAAKnF,MAAM6S,gBAAgB1N,EAAKzE,MAAMkS,gBALtCzN,EAAK3E,SAAS,CACV+N,QAASpJ,EAAKzE,MAAM6N,UAlBbpJ,EAyBnB2N,eAAiB,SAAA9K,GAAE,sBAAAlK,EAAAtD,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAI,SAAAmD,EAAMwC,GAAN,OAAA7F,EAAAC,EAAAS,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,cACnBa,QAAQC,IAAI2L,GADOhK,EAAAzC,KAAA,EAEDsC,EAAc,OAAD,mBAA6B,CAAE+U,cAAezN,EAAKzE,MAAMkS,gBAFrE,OAGA,OAHA5U,EAAA9B,KAGXC,OACJgJ,EAAKnF,MAAMmC,QAEXgD,EAAKuN,aACL9N,MAAM,4BAPS,wBAAA5G,EAAAzB,SAAAwB,EAAAvB,SAAJ,gBAAAE,GAAA,OAAAoB,EAAAlB,MAAAJ,KAAAK,YAAA,IAvBfsI,EAAKzE,MAAQ,CACT6N,QAAQ,EACRjK,KAAMa,EAAKnF,MAAMsE,KACjBqO,gBAAiBxN,EAAKnF,MAAM2S,gBAC5BvO,aAAce,EAAKnF,MAAMoE,aACzBwO,cAAezN,EAAKnF,MAAM4S,cAC1BhM,MAAMzB,EAAKnF,MAAM4G,MACjBmM,kBAAkB5N,EAAKnF,MAAM+S,kBAC7B1O,UAAUc,EAAKnF,MAAMqE,UACrB2O,MAAM7N,EAAKnF,MAAMgT,OAXN7N,EADvB,OAAA3K,OAAAmG,EAAA,EAAAnG,CAAAiY,EAAAhG,GAAAjS,OAAAoG,EAAA,EAAApG,CAAAiY,EAAA,EAAA1T,IAAA,SAAAC,MAAA,WAgDQ,OACI8B,EAAAnG,EAAAoG,cAACD,EAAAnG,EAAMuG,SAAP,KACIJ,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACkE,GAAI,GAAI9D,GAAI,EAAG+Q,GAAI,EAAGlN,QAAQ,SAASD,WAAW,SAAS/D,MAAO,CAAEuQ,aAAc,IACnG9Q,EAAAnG,EAAAoG,cAAA,OAAKsF,UAAW8K,KAAO8B,SAAUrR,QAASpF,KAAKkW,YAC3C5R,EAAAnG,EAAAoG,cAAA,WACID,EAAAnG,EAAAoG,cAAA,OAAK4F,IAAMnK,KAAKwD,MAAM4G,OAA2B,IAAlBpK,KAAKwD,MAAM4G,MAAhC,GAAA3K,OAAgD7B,EAAhD,kBAAA6B,OAA4EO,KAAKwD,MAAM4G,OAAvF,GAAA3K,OAAkG7B,EAAlG,YAAA6B,OAAwHO,KAAKwD,MAAMsE,KAAKsC,UAEtJ9F,EAAAnG,EAAAoG,cAAA,UAAKvE,KAAKwD,MAAMsE,KAAKlF,KAArB,MACA0B,EAAAnG,EAAAoG,cAAA,UAAKvE,KAAKwD,MAAMsE,KAAKwC,SAAW,cAAgB,WAChDhG,EAAAnG,EAAAoG,cAAA,oBAAYvE,KAAKwD,MAAM+S,kBAAoB,IAAKvW,KAAKwD,MAAMoE,cAC3DtD,EAAAnG,EAAAoG,cAAA,4BAAoBvE,KAAKwD,MAAMgT,OAC/BlS,EAAAnG,EAAAoG,cAAA,0BAAkBvE,KAAKwD,MAAMqE,aAMrCvD,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAQ4L,KAAMvQ,KAAKkE,MAAM6N,OAAQvB,QAASxQ,KAAKkW,YAC3C5R,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,wBACAL,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,6CAGAL,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,KACIL,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAQE,MAAO,CAAEsI,MAAON,EAAYjB,MAAO8B,WAAY,UAAYtI,QAASpF,KAAKsW,eAAetW,KAAKwD,MAAM4S,gBAA3G,eAvExBH,EAAA,CAAoC5Q,aAmFvBqR,GAAb,SAAAC,GACI,SAAAD,EAAYlT,GAAO,IAAAiH,EAAA,OAAAzM,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAA0W,IACfjM,EAAAzM,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAA0Y,GAAA7S,KAAA7D,KAAMwD,KAQVoT,WAAa,WACTnM,EAAKzG,SAAS,CACV+N,QAAStH,EAAKvG,MAAM6N,UAXTtH,EAcnBoM,WAAa,SAAArL,GAAE,sBAAAvJ,EAAAjE,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAI,SAAA8D,EAAM6B,GAAN,OAAA7F,EAAAC,EAAAS,KAAA,SAAAuD,GAAA,cAAAA,EAAArD,KAAAqD,EAAApD,MAAA,cACfa,QAAQC,IAAI2L,GADGrJ,EAAApD,KAAA,EAEGsC,EAAc,MAAD,yBAAA5B,OAAiC+L,IAFjD,OAGI,OAHJrJ,EAAAzC,KAGPC,QACJ8K,EAAKjH,MAAMmC,OAJA,wBAAAxD,EAAApC,SAAAmC,EAAAlC,SAAJ,gBAAAG,GAAA,OAAA8B,EAAA7B,MAAAJ,KAAAK,YAAA,IAdIoK,EAoBnBqM,cAAgB,WACZrM,EAAKmM,aACLnM,EAAKzG,SAAS,CACV+S,WAAYtM,EAAKvG,MAAM6S,aAvBZtM,EA0BnBhE,aAAe,SAAA7D,GAAI,OAAI,SAAAmB,GACnB0G,EAAKzG,SAALhG,OAAA0I,EAAA,EAAA1I,CAAA,GACK4E,EAAOmB,EAAE4C,OAAOnE,UA5BNiI,EA+BnBuM,cA/BmB,eAAAzD,EAAAvV,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KA+BH,SAAAoV,EAAMzP,GAAN,IAAAkT,EAAArE,EAAAhN,EAAA,OAAA1H,EAAAC,EAAAS,KAAA,SAAA8U,GAAA,cAAAA,EAAA5U,KAAA4U,EAAA3U,MAAA,cACZgF,EAAEuD,iBACK2P,EAAmBxM,EAAKvG,MAAxB+S,eACHrE,EAAUnI,EAAKjH,MAAMsE,KAAK9B,IAHlB0N,EAAA3U,KAAA,EAIMsC,EAAc,OAAQ,0BAA2B,CAAEuR,UAASqE,mBAJlE,QAINrR,EAJM8N,EAAAhU,MAKLqI,SAEiB,OAAfnC,EAAIjG,QACTyI,MAAM,gCACNqC,EAAKzG,SAAS,CACV+S,WAAYtM,EAAKvG,MAAM6S,aAEP,SAAfnR,EAAIjG,QACTyI,MAAMxC,EAAIuC,MAbF,wBAAAuL,EAAA3T,SAAAyT,EAAAxT,SA/BG,gBAAAU,GAAA,OAAA6S,EAAAnT,MAAAJ,KAAAK,YAAA,GAEfoK,EAAKvG,MAAQ,CACT6N,QAAQ,EACRjK,KAAM2C,EAAKjH,MAAMsE,KACjBiP,WAAU,EACVE,eAAexM,EAAKjH,MAAMsE,KAAKmP,gBANpBxM,EADvB,OAAAzM,OAAAmG,EAAA,EAAAnG,CAAA0Y,EAAAC,GAAA3Y,OAAAoG,EAAA,EAAApG,CAAA0Y,EAAA,EAAAnU,IAAA,SAAAC,MAAA,WAiDQ,IAAI0U,EAsBJ,OArBAtX,QAAQC,IAAI,iBACZD,QAAQC,IAAIG,KAAKwD,MAAMsE,MACvBoP,EACI5S,EAAAnG,EAAAoG,cAAA,QAAM0E,SAAUjJ,KAAKgX,eACjB1S,EAAAnG,EAAAoG,cAAA,WACID,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CACI0P,aAAa,MACb7I,GAAG,kBACHpC,MAAOpJ,KAAKwD,MAAMsE,KAAKqP,YACvBpO,OAAO,SACPa,QAAQ,WACRpH,MAAOxC,KAAKkE,MAAM+S,eAClB5N,SAAUrJ,KAAKyG,aAAa,kBAC5B5B,MAAO,CAAEI,MAAO2I,OAAOC,WAAa,IAAM,OAAS,QAG3DvJ,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAQE,MAAO,CAACsI,MAAO,QAAS7O,KAAK,SAAS8G,QAASpF,KAAKgX,eAA5D,cAMJ1S,EAAAnG,EAAAoG,cAACD,EAAAnG,EAAMuG,SAAP,KACIJ,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACkE,GAAI,GAAI9D,GAAI,EAAG+Q,GAAI,EAAGlN,QAAQ,SAASD,WAAW,SAAS/D,MAAO,CAAEuQ,aAAc,IACnG9Q,EAAAnG,EAAAoG,cAAA,OAAKsF,UAAW8K,KAAO8B,SAAUrR,QAASpF,KAAK4W,YAC3CtS,EAAAnG,EAAAoG,cAAA,WACID,EAAAnG,EAAAoG,cAAA,OAAK4F,IAAG,GAAA1K,OAAK7B,EAAL,YAAA6B,OAA2BO,KAAKwD,MAAMsE,KAAKsC,UAEvD9F,EAAAnG,EAAAoG,cAAA,UAAKvE,KAAKwD,MAAMsE,KAAKlF,MACrB0B,EAAAnG,EAAAoG,cAAA,UAAKvE,KAAKwD,MAAMsE,KAAKwC,SAAW,cAAgB,WAC/CtK,KAAKwD,MAAMsE,KAAKmP,gBACb3S,EAAAnG,EAAAoG,cAAA,uBAAevE,KAAKwD,MAAMsE,KAAKmP,kBAI3C3S,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAQ4L,KAAMvQ,KAAKkE,MAAM6N,OAAQvB,QAASxQ,KAAK4W,YAC3CtS,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,KAAc3E,KAAKwD,MAAMsE,KAAKlF,MAC9B0B,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,KACIL,EAAAnG,EAAAoG,cAAA,0BAAkBvE,KAAKwD,MAAMsE,KAAKwC,SAAW,cAAgB,WAC7DhG,EAAAnG,EAAAoG,cAAA,wBAAgBvE,KAAKwD,MAAMsE,KAAKqP,aAChC7S,EAAAnG,EAAAoG,cAAA,6BAAqBvE,KAAKwD,MAAMsE,KAAKF,eAEzCtD,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,KACIL,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAQE,MAAO,CAAEsI,MAAO,QAASO,WAAY,UAAYtI,QAASpF,KAAK8W,eAAvE,aAGAxS,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAQE,MAAO,CAAEsI,MAAO,MAAOO,WAAY,UAAYtI,QAASpF,KAAK6W,WAAW7W,KAAKwD,MAAMsE,KAAK9B,MAAhG,iBAKR1B,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CACI4L,KAAMvQ,KAAKkE,MAAM6S,UACjBvG,QAASxQ,KAAK8W,cACdvC,oBAAqBlD,GACrBmD,aAAW,GACXlQ,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,cACAL,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,KACIL,EAAAnG,EAAAoG,cAAA,WACK2S,UA7G7BR,EAAA,CAA8BrR,yCChL9B,SAASgM,GAAW7N,GAChB,OAAOc,EAAAnG,EAAAoG,cAAC+M,EAAAnT,EAADH,OAAAuT,OAAA,CAAOC,UAAU,MAAShO,IAG9B,IAAM4T,GAAb,SAAA7T,GACI,SAAA6T,EAAY5T,GAAO,IAAAC,EAAA,OAAAzF,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAAoX,IACf3T,EAAAzF,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAAoZ,GAAAvT,KAAA7D,KAAMwD,KAoBViD,aAAe,SAAA7D,GAAI,OAAI,SAAAmB,GACnBN,EAAKO,SAALhG,OAAA0I,EAAA,EAAA1I,CAAA,GACK4E,EAAOmB,EAAE4C,OAAOnE,UAvBNiB,EA0BnBkC,KA1BmB3H,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KA0BZ,SAAAC,IAAA,IAAAuH,EAAAyR,EAAAC,EAAAC,EAAAC,EAAA,OAAAtZ,EAAAC,EAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACesC,EAAc,OAAQ,aAAc,IADnD,OACGuE,EADH/G,EAAAa,KAEG2X,EAAqDzR,EAArDyR,WAAYC,EAAyC1R,EAAzC0R,SAAUC,EAA+B3R,EAA/B2R,WAAYC,EAAmB5R,EAAnB4R,QAAmB5R,EAAV6R,MACjDF,EAAaA,EAAWzR,IAAI,SAAA4R,GACxB,MAAO,CACH1R,IAAK0R,EAAG1R,IACRqN,SAAUqE,EAAG/D,WAAW3N,MAAQtE,EAAU,WAAagW,EAAG9D,WAAa8D,EAAG/D,WAC1E7L,KAAM4P,EAAG5P,KACT2L,IAAKiE,EAAG/P,QACRwN,aAAcuC,EAAG/D,WAAW3N,MAAQtE,EAAU,cAGtD8V,EAAUA,EAAQ1R,IAAI,SAAA4R,GAClB,MAAO,CACH1R,IAAK0R,EAAG1R,IACRqN,SAAUqE,EAAG/D,WAAW3N,MAAQtE,EAAU,WAAagW,EAAG9D,WAAa8D,EAAG/D,WAC1E7L,KAAM4P,EAAG5P,KACT2L,IAAKiE,EAAG/P,QACRgQ,aAAcD,EAAGE,iBAGzBnU,EAAKO,SAAS,CACVuT,WAAYA,EACZC,QAASA,EAAQ1E,OAAO,SAAA+E,GAAC,OAAKA,EAAEF,eAChCG,kBAAmBN,EAAQ1E,OAAO,SAAA+E,GAAC,OAAIA,EAAEF,eACzC9R,MAAOwR,EACPC,SAAUA,IAEd1X,QAAQC,IAAI4D,EAAKS,MAAM2B,OA5BpB,wBAAAhH,EAAAkB,SAAA1B,EAAA2B,SA1BYyD,EAwDnBqT,cAAgB,WACZrT,EAAKO,SAAS,CACV+S,WAAYtT,EAAKS,MAAM6S,UACvBgB,cAAc,KA3DHtU,EA8DnBuU,WAAa,SAACxM,EAAIyM,GAAL,OAAW,SAAAlU,GACpBN,EAAKO,SAAS,CACV+T,cAAc,EACdnF,QAASpH,EACTP,iBAAkBgN,MAlEPxU,EAqEnBuT,cArEmB,eAAAzW,EAAAvC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAqEH,SAAAoC,EAAMuD,GAAN,IAAAuL,EAAAsD,EAAAqE,EAAArR,EAAA,OAAA1H,EAAAC,EAAAS,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cACZgF,EAAEuD,iBADUgI,EAEwB7L,EAAKS,MAAjC0O,EAFItD,EAEJsD,QAASqE,EAFL3H,EAEK2H,eAFLxW,EAAA1B,KAAA,EAGMsC,EAAc,OAAQ,qBAAsB,CAAEuR,UAASqE,mBAH7D,QAGNrR,EAHMnF,EAAAf,MAILqI,SAEiB,OAAfnC,EAAIjG,QAET8D,EAAKqT,gBACLrT,EAAKkC,QACe,SAAfC,EAAIjG,QACTyI,MAAMxC,EAAIuC,MAXF,wBAAA1H,EAAAV,SAAAS,EAAAR,SArEG,gBAAAC,GAAA,OAAAM,EAAAH,MAAAJ,KAAAK,YAAA,GAEfoD,EAAKS,MAAQ,CACT6T,cAAc,EACdhB,WAAW,EACXmB,SAAU,GACVX,WAAY,GACZD,SAAU,GACVzR,MAAO,GACP2R,QAAS,GACTM,kBAAmB,GACnBlF,QAAS,GACT3H,iBAAkB,GAClBgM,eAAgB,IAbLxT,EADvB,OAAAzF,OAAAmG,EAAA,EAAAnG,CAAAoZ,EAAA7T,GAAAvF,OAAAoG,EAAA,EAAApG,CAAAoZ,EAAA,EAAA7U,IAAA,oBAAAC,MAAA,WAkBQC,SAASpD,KAAK8Y,UAAUC,OAAO,UAC/BpY,KAAK2F,SAnBb,CAAApD,IAAA,SAAAC,MAAA,WAsFa,IACD0U,EADCxR,EAAA1F,KAsCL,OAnCIkX,EADAlX,KAAKkE,MAAM6T,aACAzT,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAUsP,WAAY,IAAKpP,MAAOiI,EAAWyB,UACnDvO,KAAKkE,MAAMoT,SAASxR,IAAI,SAAAC,GAAC,OACtBzB,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAcpC,IAAKwD,EAAEC,IACjBkO,KAAMtG,OAAOC,WAAa,IAAM,EAAI,EACpCzI,QAASM,EAAKsS,WAAWjS,EAAEC,IAAKD,EAAEoR,cAClC7S,EAAAnG,EAAAoG,cAAA,OAAK4F,IAAG,GAAA1K,OAAK7B,EAAL,YAAA6B,OAA2BsG,EAAEqE,OAASgH,IAAK,cACnD9M,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CACIwP,MAAOpO,EAAEnD,KACTwR,SAAU9P,EAAAnG,EAAAoG,cAAA,yBAAgC,IAAfwB,EAAEuE,SAAiB,SAAW,YAQrEhG,EAAAnG,EAAAoG,cAAA,QAAM0E,SAAUjJ,KAAKgX,eACjB1S,EAAAnG,EAAAoG,cAAA,WACID,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CACI0P,aAAa,MACb7I,GAAG,kBACHpC,MAAOpJ,KAAKkE,MAAM+G,iBAClBlC,OAAO,SACPa,QAAQ,WACRP,SAAUrJ,KAAKyG,aAAa,kBAC5B5B,MAAO,CAAEI,MAAO2I,OAAOC,WAAa,IAAM,OAAS,QAG3DvJ,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAQE,MAAO,CAACsI,MAAO,QAAS7O,KAAK,UAArC,aAQRgG,EAAAnG,EAAAoG,cAACoQ,EAAA,iBAAD,CAAkB0D,MAAOxM,GACzBvH,EAAAnG,EAAAoG,cAAA,OAAKsF,UAAU,kBACXvF,EAAAnG,EAAAoG,cAAC+T,EAAD,CAAYrU,OAAO,YAAY0B,KAAM3F,KAAK2F,OAC1CrB,EAAAnG,EAAAoG,cAAA,WAASsF,UAAU,mBACfvF,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAgBE,MAAOiI,EAAWkB,UAAWuK,iBAAe,GACxDjU,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAuB6T,WAAYlU,EAAAnG,EAAAoG,cAACkU,GAAAta,EAAD,CAAgB0G,MAAOiI,EAAWmB,UACjE3J,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAYE,MAAOiI,EAAWmB,QAAQ3J,EAAAnG,EAAAoG,cAAA,KAAGsF,UAAU,wBAAnD,gBAEJvF,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,KACIL,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMC,WAAS,EAACgM,QAAS,IACpB5Q,KAAKkE,MAAMqT,WAAWzR,IAAI,SAAA4S,GAAI,OAAIpU,EAAAnG,EAAAoG,cAACoU,GAAD,CAAepW,IAAKmW,EAAK1S,IACxDyN,IAAKiF,EAAKjF,IACV3L,KAAM4Q,EAAK5Q,KACXuL,SAAUqF,EAAKrF,SACf8B,aAAcuD,EAAKvD,aACnB3J,GAAIkN,EAAK1S,IACTL,KAAMD,EAAKC,YAK3BrB,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAgBE,MAAOiI,EAAWkB,UAAWuK,iBAAe,GACxDjU,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAuB6T,WAAYlU,EAAAnG,EAAAoG,cAACkU,GAAAta,EAAD,CAAgB0G,MAAOiI,EAAWmB,UACjE3J,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAYE,MAAOiI,EAAWmB,QAAQ3J,EAAAnG,EAAAoG,cAAA,KAAGsF,UAAU,mBAAnD,uBAEJvF,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,KACIL,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMC,WAAS,EAACgM,QAAS,IACpB5Q,KAAKkE,MAAMsT,QAAQ1R,IAAI,SAAA+R,GAAC,OAAIvT,EAAAnG,EAAAoG,cAACqU,GAAD,CAAWrW,IAAKsV,EAAE7R,IAC3CyN,IAAKoE,EAAEpE,IACP3L,KAAM+P,EAAE/P,KACRuL,SAAUwE,EAAExE,SACZ7H,GAAIqM,EAAE7R,IACN+J,QAASrK,EAAKlC,MAAMuM,eAKpCzL,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAgBE,MAAOiI,EAAWkB,UAAWuK,iBAAe,GACxDjU,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAuB6T,WAAYlU,EAAAnG,EAAAoG,cAACkU,GAAAta,EAAD,CAAgB0G,MAAOiI,EAAWmB,UACjE3J,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAYE,MAAOiI,EAAWmB,QAAQ3J,EAAAnG,EAAAoG,cAAA,KAAGsF,UAAU,mBAAnD,wBAEJvF,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,KACIL,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMC,WAAS,EAACgM,QAAS,IACpB5Q,KAAKkE,MAAM4T,kBAAkBhS,IAAI,SAAA+R,GAAC,IAAAgB,EAAA,OAAIvU,EAAAnG,EAAAoG,cAACqU,IAADC,EAAA,CAAWtW,IAAKsV,EAAE7R,IACrDyN,IAAKoE,EAAEpE,IACP3L,KAAM+P,EAAE/P,KACRuL,SAAUwE,EAAExE,SACZjJ,MAAOyN,EAAEzN,MACToB,GAAIqM,EAAE7R,KAL6BhI,OAAA0I,EAAA,EAAA1I,CAAA6a,EAAA,QAM5BhB,EAAEzN,OAN0BpM,OAAA0I,EAAA,EAAA1I,CAAA6a,EAAA,UAO1BnT,EAAKlC,MAAMuM,SAPe8I,SAYnDvU,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAgBE,MAAOiI,EAAWkB,UAAWuK,iBAAe,GACxDjU,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAuB6T,WAAYlU,EAAAnG,EAAAoG,cAACkU,GAAAta,EAAD,CAAgB0G,MAAOiI,EAAWmB,UACjE3J,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAYE,MAAOiI,EAAWmB,QAAQ3J,EAAAnG,EAAAoG,cAAA,KAAGsF,UAAU,gBAAnD,kBAEJvF,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,KACIL,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMC,WAAS,EAACgM,QAAS,IACpB5Q,KAAKkE,MAAM2B,MAAMC,IAAI,SAAAgC,GAAI,OAAIxD,EAAAnG,EAAAoG,cAACuU,GAAD,CAAUvW,IAAKuF,EAAK9B,IAAK8B,KAAMA,EAAMnC,KAAMD,EAAKC,SAC9ErB,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,IACXxE,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAQE,MAAK7G,OAAA+a,EAAA,EAAA/a,CAAA,GAAO8O,EAAWmB,OAAlB,CAA0BhJ,MAAO,SAAUG,QAASpF,KAAK8W,eAAtE,gBAOhBxS,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAgBE,MAAOiI,EAAWkB,UAAWuK,iBAAe,GACxDjU,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAuB6T,WAAYlU,EAAAnG,EAAAoG,cAACkU,GAAAta,EAAD,CAAgB0G,MAAOiI,EAAWmB,UACjE3J,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAYE,MAAOiI,EAAWmB,QAAQ3J,EAAAnG,EAAAoG,cAAA,KAAGsF,UAAU,kBAAnD,WAEJvF,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,uIAMRL,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CACI4L,KAAMvQ,KAAKkE,MAAM6S,UACjBvG,QAASxQ,KAAK8W,cACdvC,oBAAqBlD,GACrBmD,aAAW,GACXlQ,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,cACAL,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,KACIL,EAAAnG,EAAAoG,cAAA,WACK2S,WArN7BE,EAAA,CAA+B/R,aCdlB2T,GAAb,SAAAzV,GACI,SAAAyV,EAAYxV,GAAO,IAAAC,EAAA,OAAAzF,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAAgZ,IACfvV,EAAAzF,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAAgb,GAAAnV,KAAA7D,KAAMwD,KAYVmC,KAbmB3H,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAaZ,SAAAC,IAAA,IAAAuH,EAAA,OAAA1H,EAAAC,EAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACesC,EAAc,OAAO,MAAO,IAD3C,OACGuE,EADH/G,EAAAa,KAEHE,QAAQC,IAAI+F,GACM,OAAfA,EAAIjG,QACH8D,EAAKO,SAAS,CACVgO,KAAOpM,EAAIqT,gBALhB,wBAAApa,EAAAkB,SAAA1B,EAAA2B,SAbYyD,EAuBnByV,iBAAmB,SAAC9J,EAAO+J,GACvB1V,EAAKO,SAAS,CAAEmV,UAxBD1V,EA2BnB2V,wBAA0B,SAAAhK,GACtB3L,EAAKO,SAAS,CAAEqV,YAAajK,EAAMzI,OAAOnE,SA1B1CiB,EAAKS,MAAQ,CACT8N,KAAM,GACNsH,QAAS,CAAC,WAAY,OAAQ,MAAO,UACrCH,KAAM,EACNE,YAAa,IANF5V,EADvB,OAAAzF,OAAAmG,EAAA,EAAAnG,CAAAgb,EAAAzV,GAAAvF,OAAAoG,EAAA,EAAApG,CAAAgb,EAAA,EAAAzW,IAAA,oBAAAC,MAAA,WAWQxC,KAAK2F,SAXb,CAAApD,IAAA,SAAAC,MAAA,WAgCQ,OACI8B,EAAAnG,EAAAoG,cAACD,EAAAnG,EAAMuG,SAAP,KACIJ,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,KACIL,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,KACIL,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,KACK3E,KAAKkE,MAAMoV,QAAQxT,IAAI,SAAAyT,GAAM,OAC1BjV,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAWpC,IAAKgX,GACXA,OAKjBjV,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,KACK3E,KAAKkE,MAAM8N,KAAOhS,KAAKkE,MAAM8N,KAC7BwH,MAAMxZ,KAAKkE,MAAMiV,KAAOnZ,KAAKkE,MAAMmV,YAAarZ,KAAKkE,MAAMiV,KAAOnZ,KAAKkE,MAAMmV,YAAcrZ,KAAKkE,MAAMmV,aACtGvT,IAAI,SAAA2T,GAAG,OACJnV,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAUpC,IAAKkX,EAAIjO,IACflH,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAW+U,UAAU,KAAKC,MAAM,OAC3BF,EAAIpG,SAAS9D,WAElBjL,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,KAAY8U,EAAI1O,WAChBzG,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,KAAY8U,EAAIhG,KAChBnP,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,KAAY8U,EAAI9Z,OAAS,EAAI2E,EAAAnG,EAAAoG,cAAA,QAAMM,MAAO,CAAEsI,MAAO,UAAtB,OAA8C7I,EAAAnG,EAAAoG,cAAA,QAAMM,MAAO,CAAEsI,MAAO,QAAtB,YAE/E,KAGZ7I,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CACIiV,mBAAoB,CAAC,EAAE,GAAG,IAC1BF,UAAU,MACVG,MAAO7Z,KAAKkE,MAAM8N,KAAK/O,OACvBoW,YAAarZ,KAAKkE,MAAMmV,YACxBF,KAAMnZ,KAAKkE,MAAMiV,KACjBW,oBAAqB,CACjB1H,aAAc,iBAElB2H,oBAAqB,CACjB3H,aAAc,aAElB4H,aAAcha,KAAKkZ,iBACnBe,oBAAqBja,KAAKoZ,+BAxE9CJ,EAAA,CAAgC3T,aAgFnB6U,GAAb,SAAA3E,GACI,SAAA2E,EAAY1W,GAAO,IAAAkC,EAAA,OAAA1H,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAAka,IACfxU,EAAA1H,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAAkc,GAAArW,KAAA7D,KAAMwD,KAaVmC,KAdmB3H,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAcZ,SAAAoC,IAAA,IAAAoF,EAAA,OAAA1H,EAAAC,EAAAS,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cAAA0B,EAAA1B,KAAA,EACesC,EAAc,OAAO,SAAU,IAD9C,OACGuE,EADHnF,EAAAf,KAEHE,QAAQC,IAAI+F,GACM,OAAfA,EAAIjG,QACH+F,EAAK1B,SAAS,CACVmW,gBAAkBvU,EAAIuU,kBAL3B,wBAAA1Z,EAAAV,SAAAS,EAAAR,SAdY0F,EAyBnBwT,iBAAmB,SAAC9J,EAAO+J,GACvBzT,EAAK1B,SAAS,CAAEmV,UA1BDzT,EA6BnB0T,wBAA0B,SAAAhK,GACtB1J,EAAK1B,SAAS,CAAEqV,YAAajK,EAAMzI,OAAOnE,SA5B1CkD,EAAKxB,MAAQ,CACTiW,gBAAkB,GAClBb,QAAS,CAAC,KAAM,OAAQ,UACxBH,KAAM,EACNE,YAAa,IANF3T,EADvB,OAAA1H,OAAAmG,EAAA,EAAAnG,CAAAkc,EAAA3E,GAAAvX,OAAAoG,EAAA,EAAApG,CAAAkc,EAAA,EAAA3X,IAAA,oBAAAC,MAAA,WAYQxC,KAAK2F,SAZb,CAAApD,IAAA,SAAAC,MAAA,WAkCQ,OACI8B,EAAAnG,EAAAoG,cAACD,EAAAnG,EAAMuG,SAAP,KACIJ,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,KACIL,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,KACIL,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,KACK3E,KAAKkE,MAAMoV,QAAQxT,IAAI,SAAAyT,GAAM,OAC1BjV,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAWpC,IAAKgX,GACXA,OAKjBjV,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,KACK3E,KAAKkE,MAAMiW,gBAAkBna,KAAKkE,MAAMiW,gBACxCX,MAAMxZ,KAAKkE,MAAMiV,KAAOnZ,KAAKkE,MAAMmV,YAAarZ,KAAKkE,MAAMiV,KAAOnZ,KAAKkE,MAAMmV,YAAcrZ,KAAKkE,MAAMmV,aACtGvT,IAAI,SAAA2T,GAAG,OACJnV,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAUpC,IAAKkX,EAAIzT,KACf1B,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAW+U,UAAU,KAAKC,MAAM,OAC3BF,EAAIW,IAET9V,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,KAAY8U,EAAIY,MAChB/V,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,KAAY8U,EAAIzY,KAAO,EAAIsD,EAAAnG,EAAAoG,cAAA,QAAMM,MAAO,CAAEsI,MAAO,UAAYsM,EAAIlU,MAAejB,EAAAnG,EAAAoG,cAAA,QAAMM,MAAO,CAAEsI,MAAO,QAAUsM,EAAIlU,UAExH,KAGZjB,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CACIiV,mBAAoB,CAAC,EAAE,GAAG,IAC1BF,UAAU,MACVG,MAAO7Z,KAAKkE,MAAMiW,gBAAkBna,KAAKkE,MAAMiW,gBAAgBlX,OAAS,EACxEoW,YAAarZ,KAAKkE,MAAMmV,YACxBF,KAAMnZ,KAAKkE,MAAMiV,KACjBW,oBAAqB,CACjB1H,aAAc,iBAElB2H,oBAAqB,CACjB3H,aAAc,aAElB4H,aAAcha,KAAKkZ,iBACnBe,oBAAqBja,KAAKoZ,+BAzE9Cc,EAAA,CAAiC7U,aC9EpBiV,GAAb,SAAA/W,GAAA,SAAA+W,IAAA,OAAAtc,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAAsa,GAAAtc,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAAsc,GAAAla,MAAAJ,KAAAK,YAAA,OAAArC,OAAAmG,EAAA,EAAAnG,CAAAsc,EAAA/W,GAAAvF,OAAAoG,EAAA,EAAApG,CAAAsc,EAAA,EAAA/X,IAAA,SAAAC,MAAA,WAGQ,OACI8B,EAAAnG,EAAAoG,cAACoQ,EAAA,iBAAD,CAAkB0D,MAAOxM,GACzBvH,EAAAnG,EAAAoG,cAAA,OAAKsF,UAAU,gBACXvF,EAAAnG,EAAAoG,cAAC+T,EAAD,CAAYrU,OAAO,YACnBK,EAAAnG,EAAAoG,cAAA,WAASsF,UAAU,mBACfvF,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAOkF,UAAU,SACbvF,EAAAnG,EAAAoG,cAAA,MAAIM,MAAO,CAACsI,MAAON,EAAYjB,QAAQtH,EAAAnG,EAAAoG,cAAA,KAAGsF,UAAU,qBAApD,gBACAvF,EAAAnG,EAAAoG,cAAA,OAAKM,MAAO,CAAEI,MAAO,OAAQsV,UAAW,WACpCjW,EAAAnG,EAAAoG,cAACiW,GAAD,eAX5BF,EAAA,CAA6BjV,aCIhBoV,GAAb,SAAAlX,GACI,SAAAkX,EAAYjX,GAAO,IAAAC,EAAA,OAAAzF,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAAya,IACfhX,EAAAzF,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAAyc,GAAA5W,KAAA7D,KAAMwD,KASVmC,KAVmB3H,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAUZ,SAAAC,IAAA,IAAAuH,EAAA8U,EAAAC,EAAA,OAAAzc,EAAAC,EAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACesC,EAAc,OAAQ,cAAe,IADpD,OACGuE,EADH/G,EAAAa,KAEKgb,EAAwB9U,EAAxB8U,UAAWC,EAAa/U,EAAb+U,SACnBlX,EAAKO,SAAS,CACV0W,YAAWC,aAJZ,wBAAA9b,EAAAkB,SAAA1B,EAAA2B,SARHyD,EAAKS,MAAQ,CACTwW,UAAW,GACXC,SAAU,IAJClX,EADvB,OAAAzF,OAAAmG,EAAA,EAAAnG,CAAAyc,EAAAlX,GAAAvF,OAAAoG,EAAA,EAAApG,CAAAyc,EAAA,EAAAlY,IAAA,oBAAAC,MAAA,WASQxC,KAAK2F,SATb,CAAApD,IAAA,SAAAC,MAAA,WAmBQ,OACI8B,EAAAnG,EAAAoG,cAACoQ,EAAA,iBAAD,CAAkB0D,MAAOxM,GACzBvH,EAAAnG,EAAAoG,cAAA,OAAKsF,UAAU,oBACXvF,EAAAnG,EAAAoG,cAAC+T,EAAD,CAAYrU,OAAO,cAAc0B,KAAM3F,KAAK2F,OAC5CrB,EAAAnG,EAAAoG,cAAA,WAASsF,UAAU,mBACfvF,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMC,WAAS,GACXN,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAOE,MAAK7G,OAAA+a,EAAA,EAAA/a,CAAA,GAAO8O,EAAWF,MAAlB,CAAyB3H,MAAO,OAAQ8D,OAAQ,SAChE6R,UAAWtW,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAe+U,UAAU,MAAM7U,MAAO,CAAEsI,MAAON,EAAYlB,aAA3D,iBAGC3L,KAAKkE,MAAMwW,UAAU5U,IAAI,SAAA+U,GAAK,OAC1BvW,EAAAnG,EAAAoG,cAACqQ,EAAA,EAAD,CAAMC,GAAE,iBAAApV,OAAmBob,EAAM7U,KAAOzD,IAAKsY,EAAM7U,IAAKnB,MAAO,CAAEiQ,eAAgB,OAAQ3H,MAAON,EAAYlB,aAC5GrH,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAUuF,QAAM,GACZ5F,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CACIyM,IAAI,aACJjH,IAAG,GAAA1K,OAAK7B,GAAL6B,OAAmBob,EAAMC,KAC5BjW,MAAO,CAAEI,MAAO,GAAI+E,OAAQ,MAChC1F,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CACIQ,QAASb,EAAAnG,EAAAoG,cAAA,QAAMM,MAAO,CAAEsI,MAAON,EAAYjB,MAAO6B,SAAU,WAAnD,QAAqEoN,EAAME,KAA3E,MAAoFF,EAAMtL,WACnGlF,UAAW/F,EAAAnG,EAAAoG,cAAA,QAAMM,MAAO,CAAEsI,MAAON,EAAYlB,WAAY8B,SAAU,WAAxD,KAAuEoN,EAAMG,aAA7E,uBAtCvDP,EAAA,CAAiCpV,uBCC3B4V,UAASC,GAAWtd,GAE1B,SAASud,GAAUC,EAASC,GACxB,IAAMC,EAAc,UAAYF,EAChCH,GAAOM,GAAGD,EAAa,SAAAtJ,GACnBqJ,EAAGrJ,KAIJ,IAAMwJ,GAAb,SAAAjY,GACI,SAAAiY,EAAYhY,GAAO,IAAAC,EAAAzF,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAAwb,IACf/X,EAAAzF,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAAwd,GAAA3X,KAAA7D,KAAMwD,KAwBVmC,KAzBmB,eAAA5H,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAyBZ,SAAAC,EAAM0F,GAAN,IAAA6B,EAAAkC,EAAA6L,EAAAC,EAAAwH,EAAAK,EAAAxE,EAAAyE,EAAAjI,EAAArJ,EAAAuR,EAAAC,EAAA,OAAA1d,EAAAC,EAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEesC,EAAc,OAAD,WAAA5B,OAAoBgE,EAAKS,MAAM+Q,UAAY,IAFvE,OAGgB,QADbrP,EAFH/G,EAAAa,MAGKC,SACImI,EAAmFlC,EAAnFkC,KAAM6L,EAA6E/N,EAA7E+N,WAAYC,EAAiEhO,EAAjEgO,WAAYwH,EAAqDxV,EAArDwV,QAASK,EAA4C7V,EAA5C6V,OAAQxE,EAAoCrR,EAApCqR,eAAgByE,EAAoB9V,EAApB8V,KAAMjI,EAAc7N,EAAd6N,IAAIrJ,EAAUxE,EAAVwE,MAC3EuR,EAAOja,EAAU,WACnBka,EAAO,EACRD,IAAShI,EAAW3N,MAAK4V,EAAO,GACnCnY,EAAKO,SAAS,CACV8D,OAAM6L,aAAYC,aAAYwH,UAASK,SAAQxE,iBAAgByE,OAAMjI,MAAKmI,OAAMC,aAAa,EAAKzR,WATvG,wBAAAvL,EAAAkB,SAAA1B,EAAA2B,SAzBY,gBAAAC,GAAA,OAAAlC,EAAAqC,MAAAJ,KAAAK,YAAA,GAAAoD,EAsCnBqY,kBAAoB,WAChBrY,EAAKO,SAAS,CACV+X,eAAiBtY,EAAKS,MAAM6X,iBAxCjBtY,EA2CnBuY,mBAAqB,WACjBvY,EAAKO,SAAS,CACViY,gBAAkBxY,EAAKS,MAAM+X,kBA7ClBxY,EAgDnByY,aAhDmB,eAAA3b,EAAAvC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAgDJ,SAAAoC,EAAMuD,GAAN,IAAAoY,EAAAvK,EAAAvK,EAAA,OAAAnJ,EAAAC,EAAAS,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cACXgF,EAAEuD,iBACI6U,EAAYpY,EAAE4C,OAAOQ,MAAM,GAEjCyK,GADIA,EAAIuK,EAAUvZ,KAAKG,MAAM,MACvB6O,EAAE3O,OAAS,IACboE,EAAK,IAAIG,UACVC,OAAO,QAAS0U,EAAnB,GAAA1c,OAAiCgE,EAAKS,MAAM+Q,SAA5C,KAAAxV,OAAwDmS,IACxDvK,EAAGI,OAAO,OAAQhE,EAAKS,MAAM+Q,UAC7B5N,EAAGI,OAAO,OAAQhE,EAAKS,MAAM0X,MARlBnb,EAAA1B,KAAA,GASOiD,EAAc,qBAAsBqF,GAT3C,QAUQ,OAVR5G,EAAAf,KAUHC,SACJ8D,EAAKuY,qBACL5T,MAAM,iCAZC,yBAAA3H,EAAAV,SAAAS,EAAAR,SAhDI,gBAAAE,GAAA,OAAAK,EAAAH,MAAAJ,KAAAK,YAAA,GAAAoD,EA+DnB2Y,YA/DmBpe,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KA+DL,SAAA0C,IAAA,IAAAkR,EAAA,OAAA9T,EAAAC,EAAAS,KAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,cACJiT,EAAO,CACTqK,KAAO5Y,EAAKS,MAAM+Q,SAClB2G,KAAOnY,EAAKS,MAAM0X,MAHZ7a,EAAAhC,KAAA,EAKQsC,EAAc,OAAQ,oBAAqB2Q,GALnD,OAMQ,OANRjR,EAAArB,KAMHC,QACH8D,EAAKD,MAAMuM,QAAQzH,KAAK,cAPlB,wBAAAvH,EAAAhB,SAAAe,EAAAd,SA7DV,IAAMsc,EAAe1O,OAAO2O,SAASC,KAAKzZ,MAAM,KAC1CkS,EAAWqH,EAAaA,EAAarZ,OAAS,GAHrC,OAIfQ,EAAKS,MAAQ,CACT+Q,SAAUA,EACVxB,IAAK,GACLE,WAAY,GACZC,WAAY,GACZ9L,KAAM,GACN4T,KAAM,GACND,OAAQ,GACRvX,MAAO,GACPkX,QAAS,GACTnE,eAAgB,GAChB4E,aAAa,EACbD,KAAO,EACPG,eAAgB,EAChBE,gBAAiB,EACjB7R,MAAM,IAnBK3G,EADvB,OAAAzF,OAAAmG,EAAA,EAAAnG,CAAAwd,EAAAjY,GAAAvF,OAAAoG,EAAA,EAAApG,CAAAwd,EAAA,EAAAjZ,IAAA,oBAAAC,MAAA,WAwBQxC,KAAK2F,SAxBb,CAAApD,IAAA,SAAAC,MAAA,WA2Ea,IAAAqW,EACL,OACIvU,EAAAnG,EAAAoG,cAACD,EAAAnG,EAAMuG,SAAP,KACIJ,EAAAnG,EAAAoG,cAACoQ,EAAA,iBAAD,CAAkB0D,MAAOxM,GACrBvH,EAAAnG,EAAAoG,cAAA,OAAKsF,UAAU,cACXvF,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMC,WAAS,EAACiE,QAAQ,SAASD,WAAW,UACxCtE,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,EAAGJ,WAAS,EAACiE,QAAQ,SAASD,WAAW,UAC5DtE,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAME,MAAO,CAAEI,MAAO,OAAQ8D,OAAQ,SAClCzE,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,KACIL,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CACIE,MAAO,CAAEmF,OAAQ,KACjBI,MAAQpK,KAAKkE,MAAMkG,OAA2B,IAAlBpK,KAAKkE,MAAMkG,MAAhC,GAAA3K,OAAgD7B,EAAhD,kBAAA6B,OAA4EO,KAAKkE,MAAMkG,OAAvF,GAAA3K,OAAkG7B,EAAlG,YAAA6B,OAAwHO,KAAKkE,MAAM4D,KAAKsC,OAC/I+J,MAAOnU,KAAKkE,MAAM4D,KAAKlF,OAE3B0B,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAaE,MAAK7G,OAAA+a,EAAA,EAAA/a,CAAA,GAAO8O,EAAWF,MAAlB,CAAyBO,MAAON,EAAYlB,cAC1DrH,EAAAnG,EAAAoG,cAAA,UAAKvE,KAAKkE,MAAM4D,KAAKlF,SAIjC0B,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAME,MAAK7G,OAAA+a,EAAA,EAAA/a,CAAA,GAAO8O,EAAWF,MAAlB,CAAyB3H,MAAO,OAAQ8D,OAAQ,UACvDzE,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAUuF,QAAM,GACZ5F,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CACIQ,QAASb,EAAAnG,EAAAoG,cAAA,QAAMM,MAAO,CAAEsI,MAAON,EAAYjB,MAAO6B,SAAU,WAAnD,cACTpD,UAAW/F,EAAAnG,EAAAoG,cAAA,QAAMM,MAAO,CAAEsI,MAAON,EAAYlB,WAAY8B,SAAU,WAAxD,IAAsEzN,KAAKkE,MAAM+Q,aAEpG3Q,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAUuF,QAAM,GACZ5F,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CACIQ,QAASb,EAAAnG,EAAAoG,cAAA,QAAMM,MAAO,CAAEsI,MAAON,EAAYjB,MAAO6B,SAAU,WAAnD,wBACTpD,UAAW/F,EAAAnG,EAAAoG,cAAA,QAAMM,MAAO,CAAEsI,MAAON,EAAYlB,WAAY8B,SAAU,WAAxD,IAAsEzN,KAAKkE,MAAM+S,eAAjF,QAEnB3S,EAAAnG,EAAAoG,cAACqQ,EAAA,EAAD,CAAMC,GAAE,iBAAApV,OAAmBO,KAAKkE,MAAM0P,WAAW5N,KAAOnB,MAAO,CAAEiQ,eAAgB,OAAQ3H,MAAON,EAAYlB,aAC5GrH,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAUuF,QAAM,GACZ5F,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CACIyM,IAAI,aACJjH,IAAG,GAAA1K,OAAK7B,EAAL,SAAA6B,OAAwBO,KAAKkE,MAAMyP,WAAW9B,OAA9C,KAAApS,OAAwDO,KAAKkE,MAAMyP,WAAWvJ,OACjFvF,MAAO,CAAEI,MAAO,GAAI+E,OAAQ,MAChC1F,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CACIQ,QAASb,EAAAnG,EAAAoG,cAAA,QAAMM,MAAO,CAAEsI,MAAON,EAAYjB,MAAO6B,SAAU,WAAnD,gBACTpD,UAAW/F,EAAAnG,EAAAoG,cAAA,QAAMM,MAAO,CAAEsI,MAAON,EAAYlB,WAAY8B,SAAU,WAAxD,IAAsEzN,KAAKkE,MAAMyP,WAAWpE,UAA5F,SAGnBjL,EAAAnG,EAAAoG,cAACqQ,EAAA,EAAD,CAAMC,GAAE,iBAAApV,OAAmBO,KAAKkE,MAAM0P,WAAW5N,KAAOnB,MAAO,CAAEiQ,eAAgB,OAAQ3H,MAAON,EAAYlB,aAC5GrH,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAUuF,QAAM,GACZ5F,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CACIyM,IAAI,aACJjH,IAAG,GAAA1K,OAAK7B,EAAL,SAAA6B,OAAwBO,KAAKkE,MAAM0P,WAAW/B,OAA9C,KAAApS,OAAwDO,KAAKkE,MAAM0P,WAAWxJ,OACjFvF,MAAO,CAAEI,MAAO,GAAI+E,OAAQ,MAChC1F,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CACIQ,QAASb,EAAAnG,EAAAoG,cAAA,QAAMM,MAAO,CAAEsI,MAAON,EAAYjB,MAAO6B,SAAU,WAAnD,gBACTpD,UAAW/F,EAAAnG,EAAAoG,cAAA,QAAMM,MAAO,CAAEsI,MAAON,EAAYlB,WAAY8B,SAAU,WAAxD,IAAsEzN,KAAKkE,MAAM0P,WAAWrE,UAA5F,SAGnBjL,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAUuF,QAAM,GACZ5F,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CACIQ,QAASb,EAAAnG,EAAAoG,cAAA,QAAMM,MAAO,CAAEsI,MAAON,EAAYjB,MAAO6B,SAAU,WAAnD,SACTpD,UAAW/F,EAAAnG,EAAAoG,cAAA,QAAMM,MAAO,CAAEsI,MAAON,EAAYlB,WAAY8B,SAAU,WAAazN,KAAKkE,MAAMuP,IAAhF,aAI3BnP,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,EAAGH,MAAO,CAAEmE,QAAS,KACxC1E,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAOE,MAAK7G,OAAA+a,EAAA,EAAA/a,CAAA,GAAO8O,EAAWF,MAAlB,CAAyB5D,QAAS,MAC1C1E,EAAAnG,EAAAoG,cAAA,MAAIM,MAAO,CAAEsI,MAAON,EAAYjB,QAAhC,cACAtH,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAQiF,QAAQ,WAAYxE,QAASpF,KAAKgc,mBAAoBnX,MAAO,CAAEI,MAAO,MAAO8D,OAAQ,OAAQC,QAAS,GAAImE,MAAON,EAAYlB,aAArI,iBACArH,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAQiF,QAAQ,WAAWxE,QAASpF,KAAK8b,kBAAmBjX,MAAO,CAAEI,MAAO,MAAO8D,OAAQ,OAAQC,QAAS,GAAImE,MAAON,EAAYlB,aAAnI,iBAEJrH,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAOE,MAAK7G,OAAA+a,EAAA,EAAA/a,CAAA,GAAO8O,EAAWF,MAAlB,CAAyB5D,QAAS,GAAIgB,OAAQ,OAAQsK,UAAW,MACzEhQ,EAAAnG,EAAAoG,cAAA,MAAIM,MAAO,CAAEsI,MAAON,EAAYjB,QAAhC,QACI5L,KAAKkE,MAAM2X,YACPvX,EAAAnG,EAAAoG,cAACkY,IAAD5D,EAAA,CAASuC,QAASpb,KAAKkE,MAAMkX,SAA7Bpd,OAAA0I,EAAA,EAAA1I,CAAA6a,EAAA,UAA+C7Y,KAAKkE,MAAMkX,SAA1Dpd,OAAA0I,EAAA,EAAA1I,CAAA6a,EAAA,SAA2E7Y,KAAKkE,MAAMuX,QAAtF5C,IACE,OAK1BvU,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CACI4L,KAAMvQ,KAAKkE,MAAM+X,eACjBzL,QAASxQ,KAAKgc,mBACdxH,aAAW,GACXlQ,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,0BACAL,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,KACIL,EAAAnG,EAAAoG,cAAA,WACID,EAAAnG,EAAAoG,cAAA,QAAM2E,QAAQ,uBACV5E,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAQE,MAAO,CAAEkE,OAAQ,MAAO9D,MAAO,QACnCX,EAAAnG,EAAAoG,cAAA,SAAOjG,KAAK,OACRuG,MAAO,CAAEI,MAAO,OAAQ6E,QAAS,EAAGC,SAAU,YAC9CV,SAAUrJ,KAAKkc,eACnB5X,EAAAnG,EAAAoG,cAAA,YAAMD,EAAAnG,EAAAoG,cAAA,KAAGsF,UAAU,kBAAnB,2BAMpBvF,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAQ4L,KAAMvQ,KAAKkE,MAAM6X,cAAevL,QAASxQ,KAAK8b,kBAAmBY,kBAAgB,qBACrFpY,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAa6G,GAAG,qBAAhB,gBACAlH,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,KACAL,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,6CAIAL,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,KACAL,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAQS,QAASpF,KAAKoc,YAAajP,MAAM,WAAzC,MAGA7I,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAQS,QAASpF,KAAK8b,kBAAmB3O,MAAM,aAA/C,kBAlLxBqO,EAAA,CAA2BnW,aA6LrBsX,eACF,SAAAA,EAAYnZ,GAAO,IAAAkC,EAAA,OAAA1H,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAA2c,IACfjX,EAAA1H,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAA2e,GAAA9Y,KAAA7D,KAAMwD,KAYViD,aAAe,SAAA7D,GAAI,OAAI,SAAAmB,GACnB2B,EAAK1B,SAALhG,OAAA0I,EAAA,EAAA1I,CAAA,GACK4E,EAAOmB,EAAE4C,OAAOnE,UAfNkD,EAkBnBC,KAlBmB3H,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAkBZ,SAAAmD,IAAA,OAAArD,EAAAC,EAAAS,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,OACHoc,GAAUzV,EAAKxB,MAAMkX,QAAS,SAACpJ,GAC3BtM,EAAK1B,SAAS,CACV4Y,SAAU5K,EAAK6K,KAAKhd,MAExB,IAAMid,EAAUpX,EAAKoX,QAAQC,QACd,OAAZD,QAAgCE,IAAZF,IACvBA,EAAQG,UAAYH,EAAQI,gBAEhCjC,GAAOkC,KAAK,eAAgB,CACxBC,OAAQ1X,EAAKxB,MAAMkX,UAVpB,wBAAA5Z,EAAAzB,SAAAwB,EAAAvB,SAlBY0F,EA+BnB2X,QA/BmB,eAAApb,EAAAjE,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KA+BT,SAAA8D,EAAM6B,GAAN,OAAA7F,EAAAC,EAAAS,KAAA,SAAAuD,GAAA,cAAAA,EAAArD,KAAAqD,EAAApD,MAAA,OACNgF,EAAEuD,iBACE5B,EAAKxB,MAAMgH,QAAQjI,OAAS,IAC5BgY,GAAOkC,KAAK,cAAe,CACvBC,OAAQ1X,EAAKlC,MAAM4X,QACnBkC,IAAK,EACL7B,OAAQ/V,EAAKlC,MAAMiY,OACnBlW,KAAMG,EAAKxB,MAAMgH,UAErBxF,EAAK1B,SAAS,CACVkH,QAAS,MAVX,wBAAA/I,EAAApC,SAAAmC,EAAAlC,SA/BS,gBAAAG,GAAA,OAAA8B,EAAA7B,MAAAJ,KAAAK,YAAA,GAEfqF,EAAKxB,MAAQ,CACTkX,QAAS1V,EAAKlC,MAAM4X,QACpBwB,SAAU,GACV1R,QAAS,IAEbxF,EAAKoX,QAAUS,IAAMC,YAPN9X,mFAWf1F,KAAK2F,wCAmCA,IAAAgD,EAAA3I,KACL,OACIsE,EAAAnG,EAAAoG,cAAA,WACID,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMC,WAAS,GACXN,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,IACXxE,EAAAnG,EAAAoG,cAAA,OAAKkZ,IAAKzd,KAAK8c,QAASjY,MAAO,CAACI,MAAO,OAAQ+E,OAAQ,OAAOC,UAAW,SAAUsQ,UAAU,WAC7FjW,EAAAnG,EAAAoG,cAAA,WACCvE,KAAKkE,MAAM0Y,SAAS9W,IAAI,SAAAqC,GAEjB,OACI7D,EAAAnG,EAAAoG,cAAA,OAAKhC,IAAK4F,EAAInC,IAAKnB,MAAO,CAACkE,OAAQ,GAAI6F,QAAQ,OAAQ3J,MAAM,SAE5DX,EAAAnG,EAAAoG,cAAA,OAAKM,MAAO8D,EAAKnF,MAAMiY,SAAWtT,EAAIvF,KAAKoD,IAAK,CAACf,MAAO,OAAS,KAC9DX,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CACIyM,IAAI,aACJjH,IAAG,GAAA1K,OAAK7B,EAAL,SAAA6B,OAAwB0I,EAAIvF,KAAKiP,OAAjC,KAAApS,OAA2C0I,EAAIvF,KAAKwH,OACvDvF,MAAO,CAAEI,MAAO,GAAI+E,OAAQ,MAChC1F,EAAAnG,EAAAoG,cAAA,OAAKsF,UAAU,YAAYhF,MAAO,CAACI,MAAM,QACrCX,EAAAnG,EAAAoG,cAAA,MAAIM,MAAO,IAAKsD,EAAIvF,KAAK2M,WACzBjL,EAAAnG,EAAAoG,cAAA,MAAIM,MAAO,IAAKsD,EAAI5C,aAQ5CjB,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,IACXxE,EAAAnG,EAAAoG,cAAA,QAAM0E,SAAUjJ,KAAKqd,QAASxT,UAAU,QACpCvF,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAWkF,UAAU,MAAMhF,MAAO,CAAEI,MAAO2I,OAAOC,WAAa,IAAM,MAAQ,OACzEzE,MAAM,UACNL,OAAO,QACPvG,MAAOxC,KAAKkE,MAAMgH,QAClB7B,SAAUrJ,KAAKyG,aAAa,WAC5B6C,WAAY,kBAGhBhF,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAKrG,KAAK,SAASuG,MAAO,CAAE4I,SAAU,GAAIN,MAAON,EAAYlB,WAAYgB,gBAAiB,SACtFrI,EAAAnG,EAAAoG,cAAA,KAAGsF,UAAU,mCArFvBxE,aCvMTqY,GAAb,SAAAna,GACI,SAAAma,EAAYla,GAAO,IAAAC,EAAA,OAAAzF,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAA0d,IACfja,EAAAzF,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAA0f,GAAA7Z,KAAA7D,KAAMwD,KAgBViD,aAAe,SAAA7D,GAAI,OAAI,SAAAmB,GACnBN,EAAKO,SAALhG,OAAA0I,EAAA,EAAA1I,CAAA,GACK4E,EAAOmB,EAAE4C,OAAOnE,UAnBNiB,EA0BnBkC,KA1BmB,eAAA5H,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KA0BZ,SAAAC,EAAM0F,GAAN,IAAA6B,EAAA+X,EAAA,OAAAzf,EAAAC,EAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACesC,EAAc,OAAQ,UAAW,IADhD,UAEgB,QADbuE,EADH/G,EAAAa,MAEKC,OAFL,CAAAd,EAAAE,KAAA,eAGC0E,EAAKO,SAAS,CACV4Z,iBAAiB,EACjBC,KAAMjY,EAAIiY,KACVjb,KAAMgD,EAAIiY,KAAKtO,UACfnF,MAAK,GAAA3K,OAAK7B,EAAL,SAAA6B,OAAwBmG,EAAIiY,KAAKhM,OAAjC,KAAApS,OAA2CmG,EAAIiY,KAAKzT,OACzD0T,MAAOlY,EAAIkY,MACXC,MAAOnY,EAAImY,QAThBlf,EAAAE,KAAA,EAWoBsC,EAAc,OAAQ,gBAAiB,IAX3D,OAWOsc,EAXP9e,EAAAa,KAYC+D,EAAKO,SAAS,CACV6B,MAAO8X,IAbZ,wBAAA9e,EAAAkB,SAAA1B,EAAA2B,SA1BY,gBAAAC,GAAA,OAAAlC,EAAAqC,MAAAJ,KAAAK,YAAA,GAAAoD,EA2CnBua,qBAAuB,WACnBva,EAAKO,SAAS,CACVia,kBAAoBxa,EAAKS,MAAM+Z,oBA7CpBxa,EAgDnB0C,SAAW,WACP1C,EAAKO,SAAS,CACVkL,aAAc,GACdgP,iBAAkB,MAnDPza,EAsDnB0a,eAtDmB,eAAA5d,EAAAvC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAsDF,SAAAoC,EAAMuD,GAAN,IAAAuL,EAAAG,EAAA2O,EAAAxY,EAAA,OAAA1H,EAAAC,EAAAS,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cACbgF,EAAEuD,iBACF7D,EAAK0C,WAFQmJ,EAGsB7L,EAAKS,MAAhCuL,EAHKH,EAGLG,SAAU2O,EAHL9O,EAGK8O,aAHL3d,EAAA1B,KAAA,EAIKsC,EAAc,OAAQ,0BAA2B,CAAEoO,WAAU2O,iBAJlE,QAIPxY,EAJOnF,EAAAf,MAKLqI,QACJnC,EAAImC,OAAOjC,IAAI,SAAAkC,GACX,IAAMC,EAAY,OAASD,EAAIE,MAE/B,OADAzE,EAAKO,SAALhG,OAAA0I,EAAA,EAAA1I,CAAA,GAAiBiK,EAAYD,EAAIG,MAC1BH,IAGG,OAAfpC,EAAIjG,SACH8D,EAAKkC,OACLlC,EAAKO,SAAS,CACZyL,SAAW,GACX2O,aAAc,KAEhB3a,EAAKua,wBAlBI,wBAAAvd,EAAAV,SAAAS,EAAAR,SAtDE,gBAAAE,GAAA,OAAAK,EAAAH,MAAAJ,KAAAK,YAAA,GAEfoD,EAAKS,MAAQ,CACT0Z,iBAAiB,EACjBC,KAAM,GACNzT,MAAO+G,EAAQ,IACfvO,KAAM,GACNkb,MAAO,GACPC,MAAO,GACPE,kBAAmB,EACnBxO,SAAW,GACX2O,aAAc,GACdlP,aAAe,GACfgP,iBAAkB,GAClBrY,MAAM,IAdKpC,EADvB,OAAAzF,OAAAmG,EAAA,EAAAnG,CAAA0f,EAAAna,GAAAvF,OAAAoG,EAAA,EAAApG,CAAA0f,EAAA,EAAAnb,IAAA,oBAAAC,MAAA,WAyBQxC,KAAK2F,SAzBb,CAAApD,IAAA,SAAAC,MAAA,WA6Ea,IAAAkD,EAAA1F,KACL,OACIsE,EAAAnG,EAAAoG,cAACoQ,EAAA,iBAAD,CAAkB0D,MAAOxM,GACzBvH,EAAAnG,EAAAoG,cAAA,OAAKsF,UAAU,gBACXvF,EAAAnG,EAAAoG,cAAC+T,EAAD,CAAYrU,OAAO,UAAU0B,KAAM3F,KAAK2F,OACxCrB,EAAAnG,EAAAoG,cAAA,WAASsF,UAAU,mBACfvF,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAOkF,UAAU,QAAQhF,MAAOiI,EAAWS,OACvCjJ,EAAAnG,EAAAoG,cAAA,UAAID,EAAAnG,EAAAoG,cAAA,KAAGsF,UAAU,iBAAjB,YAAiDvF,EAAAnG,EAAAoG,cAAA,WACjDD,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMC,WAAS,EAACgM,QAAS,IACrBtM,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,GACnBV,EAAAnG,EAAAoG,cAAC8Z,GAAD,CACI1Y,KAAM3F,KAAK2F,KACXyE,MAAOpK,KAAKkE,MAAMkG,MAClBxH,KAAM5C,KAAKkE,MAAMtB,KACjB0b,WAAW,KAEnBha,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,GAEfhF,KAAKkE,MAAM0Z,gBAAkBtZ,EAAAnG,EAAAoG,cAACga,GAAD,CAAUT,MAAO9d,KAAKkE,MAAM4Z,MAAOC,MAAO/d,KAAKkE,MAAM6Z,MAAOF,KAAM7d,KAAKkE,MAAM2Z,KAAMS,WAAW,IAAU,MAKrJha,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAOkF,UAAU,QAAQhF,MAAOiI,EAAWS,OACvCjJ,EAAAnG,EAAAoG,cAAA,UAAID,EAAAnG,EAAAoG,cAAA,KAAGsF,UAAU,gBAAjB,gBACAvF,EAAAnG,EAAAoG,cAAA,WACAD,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMC,WAAS,EAACgM,QAAS,IAChB5Q,KAAKkE,MAAM2B,MAAMC,IAAI,SAAAgC,GAAI,OAAIxD,EAAAnG,EAAAoG,cAACuU,GAAD,CAAUvW,IAAKuF,EAAK9B,IAAK8B,KAAMA,EAAMnC,KAAMD,EAAKC,WAG1FrB,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAOkF,UAAU,QAAQhF,MAAOiI,EAAWS,OACvCjJ,EAAAnG,EAAAoG,cAAA,UAAID,EAAAnG,EAAAoG,cAAA,KAAGsF,UAAU,gBAAjB,qBACAvF,EAAAnG,EAAAoG,cAAA,WACAD,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAQE,MAAO,CAACsI,MAAON,EAAYjB,OAAQxG,QAASpF,KAAKge,sBACzD1Z,EAAAnG,EAAAoG,cAAA,KAAGsF,UAAU,kBADb,sBAKRvF,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CACI4L,KAAMvQ,KAAKkE,MAAM+Z,iBACjBzN,QAASxQ,KAAKge,qBACdxJ,aAAW,GACXlQ,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,wBACAL,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,KACIL,EAAAnG,EAAAoG,cAAA,WACID,EAAAnG,EAAAoG,cAAA,QAAM0E,SAAUjJ,KAAKme,gBAGjB7Z,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAWE,MAAO,CAAEkE,OAAQ,MAAO9D,MAAO,OACtCmE,MAAM,eACNL,OAAO,SACPzK,KAAK,WACLkE,MAAOxC,KAAKkE,MAAMuL,SAClBpG,SAAUrJ,KAAKyG,aAAa,YAC5B6C,WAAYtJ,KAAKkE,MAAMgL,aACvB3F,MAAOvJ,KAAKkE,MAAMgL,aAAajM,OAAS,IAE5CqB,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAWE,MAAO,CAAEkE,OAAQ,MAAO9D,MAAO,OACtCmE,MAAM,eACNL,OAAO,SACPvG,MAAOxC,KAAKkE,MAAMka,aAClB/U,SAAUrJ,KAAKyG,aAAa,gBAC5B6C,WAAYtJ,KAAKkE,MAAMga,iBACvB3U,MAAOvJ,KAAKkE,MAAMga,iBAAiBjb,OAAS,IAEhDqB,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAQrG,KAAK,SAASsL,QAAQ,WAAW/E,MAAO,CAAEkE,OAAQ,MAAO9D,MAAO,QACpEX,EAAAnG,EAAAoG,cAAA,YAAMD,EAAAnG,EAAAoG,cAAA,KAAGsF,UAAU,kBAAnB,+BA/IpC6T,EAAA,CAA6BrY,aA2JhBmZ,GAAb,SAAAjJ,GACI,SAAAiJ,EAAYhb,GAAO,IAAAmF,EAAA3K,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAAwe,IACf7V,EAAA3K,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAAwgB,GAAA3a,KAAA7D,KAAMwD,KAiBVmC,KAlBmB,eAAA9E,EAAA7C,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAkBZ,SAAA0C,EAAMiD,GAAN,IAAA6B,EAAA,OAAA1H,EAAAC,EAAAS,KAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,cAAAgC,EAAAhC,KAAA,EACesC,EAAc,OAAD,WAAA5B,OAAoBkJ,EAAKzE,MAAMua,SAAW,IADtE,OAEgB,QADb7Y,EADH7E,EAAArB,MAEKC,QACJgJ,EAAK3E,SAAS,CACV4Z,iBAAiB,EACjBC,KAAMjY,EAAIiY,KACVjb,KAAMgD,EAAIiY,KAAKtO,UACfnF,MAAK,GAAA3K,OAAK7B,EAAL,SAAA6B,OAAwBmG,EAAIiY,KAAKhM,OAAjC,KAAApS,OAA2CmG,EAAIiY,KAAKzT,OACzD0T,MAAOlY,EAAIkY,MACXC,MAAOnY,EAAImY,QAThB,wBAAAhd,EAAAhB,SAAAe,EAAAd,SAlBY,gBAAAG,GAAA,OAAAU,EAAAT,MAAAJ,KAAAK,YAAA,GAEf,IAAMic,EAAe1O,OAAO2O,SAASC,KAAKzZ,MAAM,KAC1C0b,EAAUnC,EAAaA,EAAarZ,OAAS,GAHpC,OAIf0F,EAAKzE,MAAQ,CACT0Z,iBAAiB,EACjBa,QAAUA,EACVZ,KAAM,GACNzT,MAAO+G,EAAQ,IACfvO,KAAM,GACNkb,MAAO,GACPC,MAAO,IAXIpV,EADvB,OAAA3K,OAAAmG,EAAA,EAAAnG,CAAAwgB,EAAAjJ,GAAAvX,OAAAoG,EAAA,EAAApG,CAAAwgB,EAAA,EAAAjc,IAAA,oBAAAC,MAAA,WAiBQxC,KAAK2F,SAjBb,CAAApD,IAAA,SAAAC,MAAA,WAmCQ,OACI8B,EAAAnG,EAAAoG,cAAA,OAAKsF,UAAU,gBACXvF,EAAAnG,EAAAoG,cAAC+T,EAAD,CAAYrU,OAAO,UAAU0B,KAAM3F,KAAK2F,OACxCrB,EAAAnG,EAAAoG,cAAA,WAASsF,UAAU,mBACfvF,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAOkF,UAAU,QAAQhF,MAAOiI,EAAWS,OACvCjJ,EAAAnG,EAAAoG,cAAA,UAAID,EAAAnG,EAAAoG,cAAA,KAAGsF,UAAU,iBAAjB,YAAiDvF,EAAAnG,EAAAoG,cAAA,WACjDD,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMC,WAAS,EAACgM,QAAS,IACrBtM,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,GACnBV,EAAAnG,EAAAoG,cAAC8Z,GAAD,CACI1Y,KAAM3F,KAAK2F,KACXyE,MAAOpK,KAAKkE,MAAMkG,MAClBxH,KAAM5C,KAAKkE,MAAMtB,KACjB0b,WAAW,KAEnBha,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,GAEfhF,KAAKkE,MAAM0Z,gBAAkBtZ,EAAAnG,EAAAoG,cAACga,GAAD,CAAUT,MAAO9d,KAAKkE,MAAM4Z,MAAOC,MAAO/d,KAAKkE,MAAM6Z,MAAOF,KAAM7d,KAAKkE,MAAM2Z,KAAMS,WAAW,IAAW,YAnD1KE,EAAA,CAAkCnZ,aA8D5BqZ,eACF,SAAAA,EAAYlb,GAAO,IAAAiH,EAAA,OAAAzM,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAA0e,IACfjU,EAAAzM,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAA0gB,GAAA7a,KAAA7D,KAAMwD,KAUViD,aAAe,SAAA7D,GAAI,OAAI,SAAAmB,GACnB0G,EAAKzG,SAALhG,OAAA0I,EAAA,EAAA1I,CAAA,GACK4E,EAAOmB,EAAE4C,OAAOnE,UAbNiI,EAgBnBkU,kBAAoB,WAChBlU,EAAKzG,SAAS,CACV4a,eAAgBnU,EAAKvG,MAAM0a,iBAlBhBnU,EAqBnBoU,iBAAmB,WACfpU,EAAKzG,SAAS,CACV8a,cAAerU,EAAKvG,MAAM4a,aAC1BC,SAAU,MAxBCtU,EA2BnBuU,YA3BmB,eAAA1d,EAAAtD,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KA2BL,SAAAmD,EAAMwC,GAAN,IAAAoY,EAAA9U,EAAA,OAAAnJ,EAAAC,EAAAS,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,cACV0L,EAAKzG,SAAS,CACVib,qBAAqB,IAEnB9C,EAAYpY,EAAE4C,OAAOQ,MAAM,IAC7BE,EAAK,IAAIG,UACVC,OAAO,QAAS0U,EAAW,aANpB3a,EAAAzC,KAAA,EAOQiD,EAAc,uBAAwBqF,GAP9C,OAQS,OART7F,EAAA9B,KAQFC,SACJ8K,EAAKzG,SAAS,CACVib,qBAAqB,IAEzBrR,OAAO2O,SAAS2C,UAZV,wBAAA1d,EAAAzB,SAAAwB,EAAAvB,SA3BK,gBAAAU,GAAA,OAAAY,EAAAlB,MAAAJ,KAAAK,YAAA,GAAAoK,EA0CnB0U,WA1CmB,eAAAld,EAAAjE,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KA0CN,SAAA8D,EAAM6B,GAAN,IAAA6B,EAAA,OAAA1H,EAAAC,EAAAS,KAAA,SAAAuD,GAAA,cAAAA,EAAArD,KAAAqD,EAAApD,MAAA,cACTgF,EAAEuD,iBACFmD,EAAKzG,SAAS,CACVob,oBAAoB,IAHfjd,EAAApD,KAAA,EAKSsC,EAAc,OAAO,sBAAuB,CAACuB,KAAO6H,EAAKvG,MAAMmb,UALxE,QAKHzZ,EALGzD,EAAAzC,MAMFqI,QACH0C,EAAKzG,SAAS,CACV+a,SAAWnZ,EAAImC,OAAO,GAAGI,MAGd,OAAfvC,EAAIjG,SACJ8K,EAAKzG,SAAS,CACVob,oBAAoB,EACpBC,QAAU,GACVN,SAAW,KAEftU,EAAKjH,MAAMmC,OACX8E,EAAKoU,oBAlBA,wBAAA1c,EAAApC,SAAAmC,EAAAlC,SA1CM,gBAAAW,GAAA,OAAAsB,EAAA7B,MAAAJ,KAAAK,YAAA,GAEfoK,EAAKvG,MAAQ,CACT0a,eAAe,EACfE,cAAc,EACdG,qBAAqB,EACrBK,qBAAqB,EACrBD,QAAS,GACTN,SAAU,IARCtU,wEAiEf,OACInG,EAAAnG,EAAAoG,cAACD,EAAAnG,EAAMuG,SAAP,KACIJ,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAME,MAAO,CAAE0a,WAAY,SACvBjb,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,KACIL,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CACIE,MAAO,CAAEmF,OAAQ,KACjBI,MAAOpK,KAAKwD,MAAM4G,MAClB+J,MAAOnU,KAAKwD,MAAMZ,OAEtB0B,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAaE,MAAO,CAAEmF,OAAQ,KAC1B1F,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAY6a,cAAY,EAAC5V,QAAQ,KAAK8P,UAAU,KAAK7U,MAAO,CAAEsI,MAAON,EAAYlB,WAAY8B,SAAU,WAClGzN,KAAKwD,MAAMZ,QAIvB5C,KAAKwD,MAAM8a,UACRha,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,KAEIL,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAQ8a,KAAK,QACTtS,MAAM,UACN/H,QAASpF,KAAK2e,kBACd9Z,MAAO,CAAEsI,MAAON,EAAYjB,MAAO6B,SAAU,WAHjD,cAMAnJ,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAQ8a,KAAK,QACTtS,MAAM,UACN/H,QAASpF,KAAK6e,iBACdha,MAAO,CAAEsI,MAAON,EAAYjB,MAAO6B,SAAU,WAHjD,cAOF,IAGVnJ,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CACI4L,KAAMvQ,KAAKkE,MAAM0a,cACjBpO,QAASxQ,KAAK2e,kBACdnK,aAAW,GACXlQ,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,qBACAL,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,KACIL,EAAAnG,EAAAoG,cAAA,WACID,EAAAnG,EAAAoG,cAAA,QAAM2E,QAAQ,uBACTlJ,KAAKif,oBAAsB3a,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,MAAqB,GACjDL,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAQE,MAAO,CAAEkE,OAAQ,MAAO9D,MAAO,QACnCX,EAAAnG,EAAAoG,cAAA,SAAOjG,KAAK,OACRuG,MAAO,CAAEI,MAAO,OAAQ6E,QAAS,EAAGC,SAAU,YAC9CV,SAAUrJ,KAAKgf,cACnB1a,EAAAnG,EAAAoG,cAAA,YAAMD,EAAAnG,EAAAoG,cAAA,KAAGsF,UAAU,kBAAnB,kCAMpBvF,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CACI4L,KAAMvQ,KAAKkE,MAAM4a,aACjBtO,QAASxQ,KAAK6e,iBACdrK,aAAW,GACXlQ,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,oBACAL,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,KACIL,EAAAnG,EAAAoG,cAAA,WACID,EAAAnG,EAAAoG,cAAA,QAAM0E,SAAUjJ,KAAKmf,WAAYjW,QAAQ,uBACpClJ,KAAKsf,oBAAsBhb,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,MAAqB,GACjDL,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAWE,MAAO,CAAEkE,OAAQ,MAAO9D,MAAO,OACtCmE,MAAM,WACNL,OAAO,SACPvG,MAAOxC,KAAKkE,MAAMmb,QAClBhW,SAAUrJ,KAAKyG,aAAa,WAC5B6C,WAAYtJ,KAAKkE,MAAM6a,SACvBxV,MAAOvJ,KAAKkE,MAAM6a,SAAS9b,OAAS,IAExCqB,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAQrG,KAAK,SAASsL,QAAQ,WAAW/E,MAAO,CAAEkE,OAAQ,MAAO9D,MAAO,QACpEX,EAAAnG,EAAAoG,cAAA,YAAMD,EAAAnG,EAAAoG,cAAA,KAAGsF,UAAU,kBAAnB,6BAzIVxE,aAoJpBqa,GAAW,SAAAnM,GAAuC,IAApCuK,EAAoCvK,EAApCuK,MAAOC,EAA6BxK,EAA7BwK,MAAOF,EAAsBtK,EAAtBsK,KAAMS,EAAgB/K,EAAhB+K,UAChCqB,EAAO,CACPnQ,MAAOqO,EAAKrO,MACZoQ,QAAS/B,EAAKlW,QACdoW,MAAOA,EAAM8B,QACbC,cAAejC,EAAK7C,aACpB+E,WAAYhC,EAAMiC,OAClBC,cAAepC,EAAKqC,aACpBC,WAAYrC,EAAMsC,MAClBC,cAAevC,EAAMwC,SAErBhC,IACAqB,EAAO,CACH5B,MAAOA,EAAM8B,QACjBC,cAAejC,EAAK7C,aACpB+E,WAAYhC,EAAMiC,OAClBC,cAAepC,EAAKqC,aACpBC,WAAYrC,EAAMsC,MAClBC,cAAevC,EAAMwC,UAEzB,IAAIC,EAAW,CACXR,WAAYhC,EAAMyC,kBAClBC,eAAgB3C,EAAM4C,WAM1B,OAHAf,EAAO3hB,OAAO2iB,QAAQhB,GAIlBrb,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAOE,MAAO,CAAE8H,gBAAiB,OAAQ3D,QAAS,GAAImE,MAAON,EAAYlB,aACrErH,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMC,WAAS,GACV+a,EAAK7Z,IAAI,SAAA8a,GAAG,OACTtc,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACkE,GAAI,GAAIvG,IAAKqe,EAAI,IAClCtc,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,EAAGH,MAAOiI,EAAWU,SAA5C,GAAA/N,OAAyDmhB,EAAI,GAAGC,QAAQ,KAAM,KAA9E,OACAvc,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,EAAGH,MAAOiI,EAAWvH,MAAOqb,EAAI,OAG/Dtc,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,MACAL,EAAAnG,EAAAoG,cAAA,WACAD,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACkE,GAAI,GAAIgY,MAAO,GAAIjY,QAAQ,SAASD,WAAW,UAChEtE,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GACXxE,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAkBoc,UAAW,GAAIlX,UAAU,wBACvCD,QAAQ,SACRpH,MAAO+d,EAASE,eAChBhB,KAAK,MACL5a,MAAO,CACHsI,MACIN,EAAYlB,eAG5BrH,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GACXxE,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAkBoc,UAAW,GAAIlX,UAAU,wBACvCD,QAAQ,SACRpH,MAAO+d,EAASR,WAChBN,KAAK,MAAM5a,MAAO,CACdsI,MACIN,EAAYlB,eAG5BrH,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GACXxE,EAAAnG,EAAAoG,cAAA,oBAAYgc,EAASE,eAArB,MAEJnc,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GACXxE,EAAAnG,EAAAoG,cAAA,2BAAmBgc,EAASR,WAA5B,+BCxaXiB,GAAb,SAAAzd,GACI,SAAAyd,EAAYxd,GAAO,IAAAC,EAAA,OAAAzF,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAAghB,IACfvd,EAAAzF,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAAgjB,GAAAnd,KAAA7D,KAAMwD,KAMV6S,gBAAkB,SAAA7K,GACd/H,EAAKO,SAAS,CACVid,gBAAgB,EAChB7K,cAAe5K,KAVJ/H,EAanBkC,KAAO,aAXHlC,EAAKS,MAAQ,CACT+c,gBAAgB,EAChB7K,cAAe,IAJJ3S,EADvB,OAAAzF,OAAAmG,EAAA,EAAAnG,CAAAgjB,EAAAzd,GAAAvF,OAAAoG,EAAA,EAAApG,CAAAgjB,EAAA,EAAAze,IAAA,SAAAC,MAAA,WAkBQ,OACI8B,EAAAnG,EAAAoG,cAACoQ,EAAA,iBAAD,CAAkB0D,MAAOxM,GACzBvH,EAAAnG,EAAAoG,cAAA,OAAKsF,UAAU,mBACXvF,EAAAnG,EAAAoG,cAAC+T,EAAD,CAAYrU,OAAO,aAAa0B,KAAM3F,KAAK2F,OAC3CrB,EAAAnG,EAAAoG,cAAA,WAASsF,UAAU,mBAEX7J,KAAKkE,MAAM+c,eAAiB3c,EAAAnG,EAAAoG,cAAC2c,GAAD,CAAkB9K,cAAepW,KAAKkE,MAAMkS,gBACpE9R,EAAAnG,EAAAoG,cAAC4c,GAAD,CAAmB9K,gBAAiBrW,KAAKqW,yBAzBrE2K,EAAA,CAAgC3b,aAkC1B+b,eACF,SAAAA,EAAY5d,GAAO,IAAAkC,EAAA,OAAA1H,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAAohB,IACf1b,EAAA1H,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAAojB,GAAAvd,KAAA7D,KAAMwD,KASVmC,KAVmB3H,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAUZ,SAAAC,IAAA,IAAAuH,EAAA,OAAA1H,EAAAC,EAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACesC,EAAc,OAAQ,aAAc,IADnD,OACGuE,EADH/G,EAAAa,KAEHgG,EAAK1B,SAAS,CACVqd,kBAAmBzb,EAAI0b,YAAYD,kBACnCE,cAAe3b,EAAI0b,YAAYC,gBAJhC,wBAAA1iB,EAAAkB,SAAA1B,EAAA2B,SARH0F,EAAKxB,MAAQ,CACTmd,kBAAmB,GACnBE,cAAe,IAJJ7b,mFAQf1F,KAAK2F,wCAUA,IAAAgD,EAAA3I,KACL,OACIsE,EAAAnG,EAAAoG,cAACD,EAAAnG,EAAMuG,SAAP,KACIJ,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAgBE,MAAOiI,EAAWkB,UAAWuK,iBAAe,GACxDjU,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAuB6T,WAAYlU,EAAAnG,EAAAoG,cAACkU,GAAAta,EAAD,CAAgB0G,MAAOiI,EAAWmB,UACjE3J,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAYE,MAAOiI,EAAWmB,QAAQ3J,EAAAnG,EAAAoG,cAAA,KAAGsF,UAAU,wBAAnD,+BAEJvF,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,KACIL,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMC,WAAS,EAACgM,QAAS,IAEjB5Q,KAAKkE,MAAMqd,cAAczb,IAAI,SAAA0b,GAAI,OAAIld,EAAAnG,EAAAoG,cAACkd,GAAD,CAAgBlf,IAAKif,EAAKxb,IAC3DmQ,iBAAiB,EACjBvO,aAAc4Z,EAAK5Z,aACnBjC,KAAMgD,EAAKhD,KACXmC,KAAM0Z,EAAK1Z,KACXsC,MAAOoX,EAAKpX,MACZmM,kBAAmBiL,EAAKE,QAAQze,OAChC4E,UAAW2Z,EAAK3Z,UAChBf,cAAe0a,EAAK1a,cACpB0P,MAAOgL,EAAK7Z,QACZ0O,gBAAiB1N,EAAKnF,MAAM6S,gBAC5BD,cAAeoL,EAAKxb,WAKxC1B,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAgBE,MAAOiI,EAAWkB,UAAWuK,iBAAe,GACxDjU,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAuB6T,WAAYlU,EAAAnG,EAAAoG,cAACkU,GAAAta,EAAD,CAAgB0G,MAAOiI,EAAWmB,UACjE3J,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAYE,MAAOiI,EAAWmB,QAAQ3J,EAAAnG,EAAAoG,cAAA,KAAGsF,UAAU,mBAAnD,qBAEJvF,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,KACIL,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMC,WAAS,EAACgM,QAAS,IAEjB5Q,KAAKkE,MAAMmd,kBAAkBvb,IAAI,SAAA0b,GAAI,OAAIld,EAAAnG,EAAAoG,cAACkd,GAAD,CAAgBlf,IAAKif,EAAKxb,IAC/DmQ,iBAAiB,EACjBvO,aAAc4Z,EAAK5Z,aACnBwC,MAAOoX,EAAKpX,MACZzE,KAAMgD,EAAKhD,KACXmC,KAAM0Z,EAAK1Z,KACXyO,kBAAmBiL,EAAKE,QAAQze,OAChC4E,UAAW2Z,EAAK3Z,UAChBf,cAAe0a,EAAK1a,cACpB0P,MAAOgL,EAAK7Z,QACZ0O,gBAAiB1N,EAAKnF,MAAM6S,gBAC5BD,cAAeoL,EAAKxb,mBA/DxBX,aAyE1Bsc,eACF,SAAAA,EAAYne,GAAO,IAAAiH,EAAA,OAAAzM,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAA2hB,IACflX,EAAAzM,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAA2jB,GAAA9d,KAAA7D,KAAMwD,KAkBVmC,KAnBmB3H,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAmBZ,SAAAoC,IAAA,IAAAoF,EAAAkC,EAAA4Z,EAAAE,EAAAC,EAAApO,EAAAqO,EAAA1X,EAAA1C,EAAAZ,EAAA,OAAA5I,EAAAC,EAAAS,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cAAA0B,EAAA1B,KAAA,EACesC,EAAc,OAAD,cAAA5B,OAAuBgL,EAAKvG,MAAMkS,eAAiB,IAD/E,OAEH,KADMxQ,EADHnF,EAAAf,MAEKC,OAAS,QACLmI,EAAsDlC,EAAtDkC,KAAM4Z,EAAgD9b,EAAhD8b,QAASE,EAAuChc,EAAvCgc,OAAQC,EAA+Bjc,EAA/Bic,OAAQpO,EAAuB7N,EAAvB6N,IAAKqO,EAAkBlc,EAAlBkc,SAAS1X,EAASxE,EAATwE,MACjD1C,EAAQ9B,EAAI8B,MAAM3E,MAAM,MAC5B0H,EAAKzG,SAAS,CACV8D,OAAM4Z,UAASE,SAAQC,SAAQpO,MAAKqO,WAAUpa,QAAM0C,UAErDxE,EAAIkB,eACH,IACQA,EAAgBxH,KAAKyiB,MAAMnc,EAAIkB,eACnC2D,EAAKzG,SAAS,CAAC8C,cAAcA,IAC/B,MAAM/C,IAZb,wBAAAtD,EAAAV,SAAAS,EAAAR,SAnBYyK,EAoCnBuX,UAAY,SAAC5S,EAAO5M,GAChBiI,EAAKzG,SAAS,CAAEie,MAAOzf,KArCRiI,EAuCnByX,kBAAoB,SAACC,GAEjB1X,EAAKzG,SAAS,CAAEie,MAAOE,KAvCvB1X,EAAKvG,MAAQ,CACTkS,cAAe3L,EAAKjH,MAAM4S,cAC1BtO,KAAM,GACN4Z,QAAS,GACTE,OAAQ,GACRC,OAAQ,GACRpO,IAAK,GACL/L,MAAO,GACPoa,SAAU,GACVG,MAAO,EACP7X,MAAM,GACNtD,cAAc,IAbH2D,mFAiBfzK,KAAK2F,wCA0BA,IAAAyc,EAAApiB,KACL,OACIsE,EAAAnG,EAAAoG,cAACD,EAAAnG,EAAMuG,SAAP,KACIJ,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMC,WAAS,EAACiE,QAAQ,SAASD,WAAW,UACxCtE,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,EAAGJ,WAAS,EAACiE,QAAQ,SAASD,WAAW,UAC5DtE,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAME,MAAO,CAAEI,MAAO,OAAQ8D,OAAQ,SAClCzE,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,KACIL,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CACIE,MAAO,CAAEmF,OAAQ,KACjBI,MAAQpK,KAAKkE,MAAMkG,OAA2B,IAAlBpK,KAAKkE,MAAMkG,MAAhC,GAAA3K,OAAgD7B,EAAhD,kBAAA6B,OAA4EO,KAAKkE,MAAMkG,OAAvF,GAAA3K,OAAkG7B,EAAlG,YAAA6B,OAAwHO,KAAKkE,MAAM4D,KAAKsC,OAC/I+J,MAAOnU,KAAKkE,MAAM4D,KAAKlF,OAE3B0B,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAaE,MAAK7G,OAAA+a,EAAA,EAAA/a,CAAA,GAAO8O,EAAWF,MAAlB,CAAyBO,MAAON,EAAYlB,cAC1DrH,EAAAnG,EAAAoG,cAAA,UAAKvE,KAAKkE,MAAM4D,KAAKlF,SAIjC0B,EAAAnG,EAAAoG,cAAC8d,GAAD,CAAmBX,QAAS1hB,KAAKkE,MAAMwd,WAE3Cpd,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,EAAGH,MAAO,CAAEmE,QAAS,KACxC1E,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAOE,MAAK7G,OAAA+a,EAAA,EAAA/a,CAAA,GAAO8O,EAAWF,QAC1BtI,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAQoF,SAAS,SAASlF,MAAO,CAAE8H,gBAAiB,SAChDrI,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMnC,MAAOxC,KAAKkE,MAAM+d,MAAO5Y,SAAUrJ,KAAKgiB,UAAWM,eAAe,UAAUnW,UAAU,WACxF7H,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAKnC,MAAO,EAAG4G,MAAM,OAAOvE,MAAO,CAAEsI,MAA4B,IAArBnN,KAAKkE,MAAM+d,MAAcpV,EAAYlB,WAAakB,EAAYjB,SAC1GtH,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAKnC,MAAO,EAAG4G,MAAM,QAAQvE,MAAO,CAAEsI,MAA4B,IAArBnN,KAAKkE,MAAM+d,MAAcpV,EAAYlB,WAAakB,EAAYjB,SAE1G5L,KAAKkE,MAAM4C,cAAchB,IAAI,SAACyc,EAAOJ,GAAR,OAC1B7d,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAKpC,IAAKggB,EAAO1b,SAAUrE,MAAO2f,EAAQ,EAAG/Y,MAAOmZ,EAAO5Y,WAAY9E,MAAO,CAAEsI,MAAOiV,EAAKle,MAAM+d,QAAUM,EAAO1b,SAAWgG,EAAYlB,WAAakB,EAAYjB,aAI/KtH,EAAAnG,EAAAoG,cAACie,GAAArkB,EAAD,CACIgkB,MAAOniB,KAAKkE,MAAM+d,MAClBQ,cAAeziB,KAAKkiB,mBAExB5d,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAO,CAACmE,QAAS,IAC7B1E,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,EAAGH,MAAO,CAACsI,MAAON,EAAYlB,aAArD,iBACArH,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,EAAGH,MAAO,CAACsI,MAAON,EAAYjB,QAAS5L,KAAKkE,MAAMkS,eACzE9R,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,EAAGH,MAAO,CAACsI,MAAON,EAAYlB,aAArD,aACArH,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,EAAGH,MAAO,CAACsI,MAAON,EAAYjB,QAAS5L,KAAKkE,MAAMuP,IAAzE,OACAnP,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,EAAGH,MAAO,CAACsI,MAAON,EAAYlB,aAArD,eACArH,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,EAAGH,MAAO,CAACsI,MAAON,EAAYjB,QAAS5L,KAAKkE,MAAM0d,OAAzE,OACAtd,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,EAAGH,MAAO,CAACsI,MAAON,EAAYlB,aAArD,gBACArH,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,EAAGH,MAAO,CAACsI,MAAON,EAAYjB,QAAS5L,KAAKkE,MAAM2d,OAAzE,OACAvd,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,EAAGH,MAAO,CAACsI,MAAON,EAAYlB,aAArD,uBACArH,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,EAAGH,MAAO,CAACsI,MAAON,EAAYjB,QAAS5L,KAAKkE,MAAM4d,UACzExd,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,EAAGH,MAAO,CAACsI,MAAON,EAAYlB,aAArD,kBACArH,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC+D,GAAI,GAAI9D,GAAI,EAAGH,MAAO,CAACsI,MAAON,EAAYjB,QAAS5L,KAAKkE,MAAMwd,QAAQze,SAErFqB,EAAAnG,EAAAoG,cAAA,OAAKM,MAAO,CAACsI,MAAON,EAAYjB,MAAO5C,QAAS,IAC/ChJ,KAAKkE,MAAMwD,MAAM5B,IAAK,SAACmS,EAAGjV,GAAJ,OAAWsB,EAAAnG,EAAAoG,cAAA,OAAKhC,IAAKS,GAAIiV,MAE/CjY,KAAKkE,MAAM4C,cAAchB,IAAI,SAACyc,EAAOJ,GAAR,OAC1B7d,EAAAnG,EAAAoG,cAAA,OAAKM,MAAO,CAACsI,MAAON,EAAYjB,MAAO5C,QAAS,IAC/CuZ,EAAOG,iBAMhBpe,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAOE,MAAK7G,OAAA+a,EAAA,EAAA/a,CAAA,GACL8O,EAAWF,MADN,CACa5D,QAAS,GAAIgB,OAAQ,OAC1CsK,UAAW,GAAIiG,UAAW,OAC1B3L,QAAS,OAAQC,eAAgB,SAAUjG,WAAY,YAE1D5I,KAAKkE,MAAM4d,SAAW,GAAK9hB,KAAKkE,MAAM4d,UAAY9hB,KAAKkE,MAAMwd,QAAQze,QAClEqB,EAAAnG,EAAAoG,cAACoe,GAAD,CAAmBvM,cAAepW,KAAKwD,MAAM4S,2BA9G1C/Q,aAyHzBud,eACF,SAAAA,EAAYpf,GAAO,IAAAqf,EAAA,OAAA7kB,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAA4iB,IACfC,EAAA7kB,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAA4kB,GAAA/e,KAAA7D,KAAMwD,KASVmC,KAVmB3H,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAUZ,SAAA0C,IAAA,IAAA8E,EAAA,OAAA1H,EAAAC,EAAAS,KAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,cAAAgC,EAAAhC,KAAA,EACesC,EAAc,OAAD,sBAAA5B,OAA+BojB,EAAKrf,MAAM4S,eAAiB,IADvF,OACGxQ,EADH7E,EAAArB,KAEHmjB,EAAK7e,SAAS,CACV8e,QAASld,EAAIkd,QAAQC,KACrBC,OAAQpd,EAAIkd,QAAQE,SAExBpV,OAAOqV,EAAE,sBAAsBC,SAAS,CACpCC,OAAQN,EAAK3e,MAAM8e,OACnBA,OAAQH,EAAK3e,MAAM4e,QACnBM,YAAa,QACbC,aAAc,OACdC,aAAc,MACdC,UAAW,OACXC,mBAAoB,QACpBC,gBAAiB5W,EAAYjB,MAC7B8X,qBAAsB,MACtBC,oBAAqB,QAhBtB,wBAAA5iB,EAAAhB,SAAAe,EAAAd,SARH6iB,EAAK3e,MAAQ,CACT4e,QAAS,GACTE,OAAQ,IAJGH,mFAQf7iB,KAAK2F,wCAsBL,OACIrB,EAAAnG,EAAAoG,cAACD,EAAAnG,EAAMuG,SAAP,KACIJ,EAAAnG,EAAAoG,cAAA,OAAKiH,GAAG,8BAjCQnG,aAuC1Bue,oLAEE,OACItf,EAAAnG,EAAAoG,cAACD,EAAAnG,EAAMuG,SAAP,KACIJ,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAME,MAAK7G,OAAA+a,EAAA,EAAA/a,CAAA,GAAO8O,EAAWF,MAAlB,CAAyB3H,MAAO,OAAQ8D,OAAQ,SACvD6R,UAAWtW,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAe+U,UAAU,MAAM7U,MAAO,CAAEsI,MAAON,EAAYlB,aAA3D,0BAEV3L,KAAKwD,MAAMke,QAAQ5b,IAAI,SAAA+d,GAAM,OAC1Bvf,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAUuF,QAAM,EAAC3H,IAAKshB,EAAO7d,KACzB1B,EAAAnG,EAAAoG,cAAA,OAAKM,MAAO,CAAE+J,QAAS,OAAQhG,WAAY,WACvCtE,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CACIyM,IAAKyS,EAAOtU,UACZpF,IAAG,GAAA1K,OAAK7B,EAAL,SAAA6B,OAAwBokB,EAAOhS,OAA/B,KAAApS,OAAyCokB,EAAOzZ,SAEvD9F,EAAAnG,EAAAoG,cAAA,QAAMM,MAAO,CAAEiK,UAAW,SAAU3B,MAAON,EAAYjB,MAAOqB,WAAY,KAAO4W,EAAOtU,wBAdxFlK,aCnRnBye,GAAb,SAAAvgB,GAAA,SAAAugB,IAAA,OAAA9lB,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAA8jB,GAAA9lB,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAA8lB,GAAA1jB,MAAAJ,KAAAK,YAAA,OAAArC,OAAAmG,EAAA,EAAAnG,CAAA8lB,EAAAvgB,GAAAvF,OAAAoG,EAAA,EAAApG,CAAA8lB,EAAA,EAAAvhB,IAAA,SAAAC,MAAA,WAEQ,OACI8B,EAAAnG,EAAAoG,cAACoQ,EAAA,iBAAD,CAAkB0D,MAAOxM,GACzBvH,EAAAnG,EAAAoG,cAAA,OAAKsF,UAAU,eACXvF,EAAAnG,EAAAoG,cAAC+T,EAAD,CAAYrU,OAAO,WACnBK,EAAAnG,EAAAoG,cAAA,WAASsF,UAAU,mBACfvF,EAAAnG,EAAAoG,cAACI,EAAA,EAAD,CAAOkF,UAAU,SACbvF,EAAAnG,EAAAoG,cAAA,MAAIM,MAAO,CAACsI,MAAON,EAAYjB,QAAQtH,EAAAnG,EAAAoG,cAAA,KAAGsF,UAAU,qBAApD,eACAvF,EAAAnG,EAAAoG,cAAA,OAAKM,MAAO,CAAEI,MAAO,OAAQsV,UAAW,WACxCjW,EAAAnG,EAAAoG,cAACwf,GAAD,eAVxBD,EAAA,CAA4Bze,aCPf2e,GAAb,SAAAzgB,GAAA,SAAAygB,IAAA,OAAAhmB,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAAgkB,GAAAhmB,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAAgmB,GAAA5jB,MAAAJ,KAAAK,YAAA,OAAArC,OAAAmG,EAAA,EAAAnG,CAAAgmB,EAAAzgB,GAAAvF,OAAAoG,EAAA,EAAApG,CAAAgmB,EAAA,EAAAzhB,IAAA,SAAAC,MAAA,WAEQ,OACI8B,EAAAnG,EAAAoG,cAAA,OAAKsF,UAAU,QAAf,oBAHZma,EAAA,CAA8B3e,kCCCxB4e,GAAa,CACfC,iBAAmB,CACfjf,MAAQ,MACR+E,OAAS,OACTma,SAAW,SACXvV,QAAS,OACThG,WAAa,UAEjB2Q,OAAS,CACLtU,MAAO,QACP+E,OAAQ,OACR4E,QAAS,OACTwV,cAAe,SACfvV,eAAiB,gBACjBjG,WAAa,UAEjBka,QAAU,CACNuB,KAAM,EACNpf,MAAO,OACPqf,OAAQ,kBACR1V,QAAS,OACTC,eAAgB,SAChBjG,WAAa,UAEjBkV,MAAQ,CACJnR,gBAAkB,OAClBQ,MAAO,OACPlI,MAAO,IACP+E,OAAQ,GACRua,UAAW,0BAiDbC,IA7CiCnf,6LA+C/B,OACIf,EAAAnG,EAAAoG,cAAA,OAAKsF,UAAW4a,KAAa3B,iBAHnBzd,cC5CPqf,oLAnBX,OACEpgB,EAAAnG,EAAAoG,cAACogB,EAAA,EAAD,KACErgB,EAAAnG,EAAAoG,cAACqgB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIpL,UAAW1J,IACjC1L,EAAAnG,EAAAoG,cAACqgB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASpL,UAAWpW,IACtCgB,EAAAnG,EAAAoG,cAACqgB,EAAA,EAAD,CAAOE,KAAK,aAAapL,UAAWtC,KACpC9S,EAAAnG,EAAAoG,cAACqgB,EAAA,EAAD,CAAOE,KAAK,WAAWpL,UAAWY,KAClChW,EAAAnG,EAAAoG,cAACqgB,EAAA,EAAD,CAAOE,KAAK,eAAepL,UAAWe,KACtCnW,EAAAnG,EAAAoG,cAACqgB,EAAA,EAAD,CAAOE,KAAK,WAAWpL,UAAWgE,KAClCpZ,EAAAnG,EAAAoG,cAACqgB,EAAA,EAAD,CAAOE,KAAK,oBAAoBpL,UAAW8E,KAC3Cla,EAAAnG,EAAAoG,cAACqgB,EAAA,EAAD,CAAOE,KAAK,cAAcpL,UAAWsH,KACrC1c,EAAAnG,EAAAoG,cAACqgB,EAAA,EAAD,CAAOE,KAAK,UAAUpL,UAAWoK,KACjCxf,EAAAnG,EAAAoG,cAACqgB,EAAA,EAAD,CAAOG,KAAK,aAAarL,UAAW8B,KACpClX,EAAAnG,EAAAoG,cAACqgB,EAAA,EAAD,CAAOlL,UAAWsK,aAdR3e,aCJE2f,QACW,cAA7BpX,OAAO2O,SAAS0I,UAEe,UAA7BrX,OAAO2O,SAAS0I,UAEhBrX,OAAO2O,SAAS0I,SAASnH,MACvB,0ECXNoH,IAASC,OACL7gB,EAAAnG,EAAAoG,cAAC6gB,GAAA,EAAD,KACE9gB,EAAAnG,EAAAoG,cAAC8gB,GAAD,OAED5iB,SAAS6iB,eAAe,SDsHvB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,mCEnInBtoB,EAAAC,QAAiBG,EAAAC,EAAuB,wDCCxCL,EAAAC,QAAA,CAAkByY,MAAA,qBAAAX,MAAA,qBAAAoB,SAAA","file":"static/js/main.12dfe836.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Prev\":\"Bracket_Prev__1x7b0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavProfileCard\":\"Navigation_NavProfileCard__2aSZZ\"};","module.exports = __webpack_public_path__ + \"static/media/8ball.c285721f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chess.708c03cc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/vbg1.75071ebe.png\";","module.exports = __webpack_public_path__ + \"static/media/sword.c7cab733.svg\";","// const config = require('./config.json')(process.env.REACT_APP_ENV || 'dev'); \nimport {config} from \"./config\";\nlet constant = config[process.env.REACT_APP_ENV || 'dev'];\nexport const HostAddress = constant.host; \n\nexport const JsonQuery = async (type, url, info) => {\n    const settings = {\n        method: type,\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n        credentials: 'same-origin'\n    };\n\n    if (type === 'post') settings.body = JSON.stringify(info)\n\n    const response = await fetch(`${HostAddress}api/${url}`, settings)\n    if (response.status !== 200) {\n        console.log(`unable to query:${url}`)\n        return { status: 100 }\n    }\n    const json = await response.json()\n    return json\n}\n\nexport const PostQuery = async (url, body) => {\n    const settings = {\n        method: 'POST',\n        headers: {\n        },\n        credentials: 'same-origin',\n        body: body\n    };\n    const response = await fetch(`${HostAddress}api/${url}`, settings)\n    if (response.status !== 200) {\n        console.log(`unable to query:${url}`)\n        return { status: 100 }\n    }\n    const json = await response.json()\n    return json\n}\n\n\nexport const JsonQueryAdmin = async (type, url, info) => {\n    const settings = {\n        method: type,\n        mode: \"cors\", // no-cors, cors, *same-origin\n        cache: \"no-cache\",\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n        credentials: 'same-origin',\n        body: JSON.stringify(info)\n    };\n\n    const response = await fetch(`${HostAddress}api/${url}`, settings)\n    if (response.status !== 200) {\n        console.log(`unable to query:${url}`)\n        return { status: 100 }\n    }\n    const json = await response.json()\n    return json\n}\n\n\nexport const JsonQueryAuth = async (type, url, info) => {\n    const settings = {\n        method: type,\n        mode: \"cors\", // no-cors, cors, *same-origin\n        cache: \"no-cache\",\n        headers: {\n            Accept: 'application/json',\n            'logautx' : `${getCookie('logautx')}`,\n            'logauty' : `${getCookie('logauty')}`,\n            'logauti' : `${getCookie('logauti')}`,\n            'Content-Type': 'application/json',\n        },\n        credentials: 'same-origin',\n        body: JSON.stringify(info)\n    };\n\n    const response = await fetch(`${HostAddress}api/${url}`, settings)\n    if (response.status !== 200) {\n        console.log(`unable to query:${url}`)\n        return { status: 100 }\n    }\n    const json = await response.json()\n    return json\n}\n\nexport const PostQueryAuth = async ( url, body) => {\n    const settings = {\n        method: 'POST',\n        mode: \"cors\", // no-cors, cors, *same-origin\n        cache: \"no-cache\",\n        headers: {\n            'logautx' : `${getCookie('logautx')}`,\n            'logauty' : `${getCookie('logauty')}`,\n            'logauti' : `${getCookie('logauti')}`\n        },\n        credentials: 'same-origin',\n        body: body\n    };\n\n    const response = await fetch(`${HostAddress}api/${url}`, settings)\n    if (response.status !== 200) {\n        console.log(`unable to query:${url}`)\n        return { status: 100 }\n    }\n    const json = await response.json()\n    return json\n}\n\nexport const AuthData = () => {\n    return {\n        logautx: getCookie('logautx'),\n        logauty: getCookie('logauty'),\n        logauti: getCookie('logauti')\n    }\n}\n\nexport const SetCookie = (key, value) => {\n    document.cookie = `${key}=${value};`;\n}\nexport const getCookie = (cname) => {\n    var name = cname + \"=\";\n    var decodedCookie = decodeURIComponent(document.cookie);\n    var ca = decodedCookie.split(';');\n    for (var i = 0; i < ca.length; i++) {\n        var c = ca[i];\n        while (c.charAt(0) == ' ') {\n            c = c.substring(1);\n        }\n        if (c.indexOf(name) == 0) {\n            return c.substring(name.length, c.length);\n        }\n    }\n    return \"\";\n}","export const config = {\n    \"dev\":{\n        \"host\" : \"http://localhost:3001/\"\n    },\n    \"prod\":{\n        \"host\" : \"http://159.89.163.24/\"\n    }\n}","import React, { Component } from 'react'\n\nimport { PostQuery, JsonQueryAdmin, HostAddress } from '../Services/Query'\n\nimport { Grid, Paper, } from '@material-ui/core'\nimport { Menu, MenuItem, MenuList, List, ListItem, ListItemText, Avatar } from '@material-ui/core'\nimport { TextField, Button, LinearProgress } from '@material-ui/core'\nimport ImageUploader from 'react-images-upload'\n\n\nexport class Admin extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            active : 'games'\n        }\n    }\n    setActive = name => e => {\n        this.setState({\n            active : name\n        })\n    }\n\n\n    render() {\n\n        let panel\n        switch(this.state.active) {\n            case 'games':\n            panel = <GameMenu />\n            break;\n            case 'tournaments':\n            panel = <TournamentMenu />\n            break;\n        }\n\n        return (\n            <React.Fragment>\n                <Grid container style={{ minHeight: '100vh' }}>\n                    <Grid item container md={3}>\n                        <Paper style={{ width: '100%' }}>\n                            <MenuList >\n                                <MenuItem >\n                                    <ListItemText inset primary=\"games\" onClick={this.setActive('games')}/>\n                                </MenuItem>\n                                <MenuItem >\n                                    <ListItemText inset primary=\"tournaments\" onClick={this.setActive('tournaments')}/>\n                                </MenuItem>\n                                <MenuItem >\n                                    <ListItemText inset primary=\"descitions\" />\n                                </MenuItem>\n                                <MenuItem >\n                                    <ListItemText inset primary=\"Inbox\" />\n                                </MenuItem>\n                            </MenuList>\n                        </Paper>\n                    </Grid>\n                    <Grid item container md={9}>\n                        {panel}\n                    </Grid>\n                </Grid>\n            </React.Fragment>\n        )\n    }\n}\n\nconst PlayerCounts = [\n    { text: '4', value: 4 },\n    { text: '8', value: 8 },\n    { text: '16', value: 16 },\n    { text: '32', value: 32 },\n]\nconst Balances = [10, 20, 50, 100, 200, 500]\n\nclass TournamentMenu extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isCalling: false,\n            player_counts: PlayerCounts,\n            entry_fee:'',\n            balances: Balances,\n            games: [],\n            tournaments_ongoing: [],\n            tournaments_yet_to_start: [],\n            game: '',\n            player_count: 4,\n            balance: 10,\n            rules: '',\n            msg_tournament_game_id: '',\n            msg_tournament_player_count: '',\n            msg_tournament_balance: '',\n            msg_tournament_rules: '',\n            msg_tournament_entry_fee: '',\n            tournament_image:'',\n            custom_fields:[]\n        }\n    }\n    componentDidMount() {\n        this.load()\n    }\n    load = async () => {\n        const res = await JsonQueryAdmin('post', 'admin/tournament', {})\n        console.log(res)\n        if (res.status === 'ok') {\n\n            this.setState({\n                games: res.games.map(g => {\n                    return {\n                        text: g.name,\n                        value: g._id\n                    }\n                }),\n                tournaments_ongoing: res.tournaments_ongoing,\n                tournaments_yet_to_start: res.tournaments_yet_to_start\n            })\n        }\n    }\n    clearMsg = () => {\n        this.setState({\n            msg_tournament_game_id: '',\n            msg_tournament_player_count: '',\n            msg_tournament_balance: '',\n            msg_tournament_rules: '',\n            msg_tournament_entry_fee: ''\n        });\n    }\n    handleChange = name => e => {\n        this.setState({\n            [name]: e.target.value\n        })\n    }\n    handleChangeCustomFields = (e,name,field_id) => {\n        for(var i=0;i<this.state.custom_fields.length;i++) {\n            if(this.state.custom_fields[i].field_id == field_id) {\n                this.state.custom_fields[i][name] = e.target.value;\n            }\n        }\n        this.setState({\n            custom_fields: this.state.custom_fields\n        })\n    }\n    onDrop = picture => {\n        this.setState({\n            tournament_image: picture,\n        });\n        console.log(picture)\n    }\n    onFileUpload = e => {\n        this.setState({\n            tournament_image: e.target.files[0]\n        })\n    }\n    addTournament = async e => {\n        e.preventDefault();\n        this.setState({ isCalling: true })\n        // const {game, rules, balance, player_count,entry_fee,tournament_image } = this.state\n        let fd = new FormData()\n        fd.append('image', this.state.tournament_image)\n        fd.append('rules', this.state.rules)\n        fd.append('balance', this.state.balance)\n        fd.append('player_count', this.state.player_count)\n        fd.append('entry_fee', this.state.entry_fee)\n        fd.append('game_id', this.state.game)\n        fd.append('custom_fields',JSON.stringify(this.state.custom_fields))\n        const res = await PostQuery('admin/tournament/create', fd)\n\n        // const res = await JsonQueryAdmin('post','admin/tournament/create',{\n        //     game_id : game, rules, balance, player_count,entry_fee\n        // })\n        console.log('form submitted')\n        this.setState({ isCalling: false })\n        console.log(res);\n        this.clearMsg();\n        if (res.errors) {\n            res.errors.map(err => {\n                const fieldName = 'msg_tournament_' + err.param\n                this.setState({ [fieldName]: err.msg })\n            });\n        } else {\n            alert(\"Tournament created successfully\");\n            this.setState ({\n                game: '',\n                player_count: 4,\n                balance: 0,\n                rules: '',\n                entry_fee:''\n            });\n            this.load();\n        }\n    }\n    addFields = e => {\n        this.state.custom_fields.push({field_id: Date.now()});\n        this.setState ({\n            custom_fields:this.state.custom_fields\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Grid container alignItems='center' justify='center'>\n                    <Grid item xs={12}>\n                        <Paper style={{ margin: '20px', padding: '20px' }}>\n                            <h2>Add Tournament</h2>\n                            {this.state.isCalling ? <LinearProgress /> : ''}\n                            <form onSubmit={this.addTournament} encType=\"multipart/form-data\">\n                                <Grid container alignItems='center' justify='center'>\n                                    <Grid item xs={12} md={6} >\n                                        <TextField style={{ margin: '1vw', width: '90%' }}\n                                            select\n                                            label=\"Select Game\"\n                                            value={this.state.game}\n                                            onChange={this.handleChange('game')}\n                                            helperText={this.state.msg_tournament_game_id}\n                                            error={this.state.msg_tournament_game_id.length > 0}\n                                        >\n                                            {this.state.games.map(option => (\n                                                <MenuItem key={option.value} value={option.value}>\n                                                    {option.text}\n                                                </MenuItem>\n                                            ))}\n                                        </TextField>\n                                    </Grid>\n                                    <Grid item xs={12} md={6} >\n                                        <TextField style={{ margin: '1vw', width: '90%' }}\n                                            select\n                                            label=\"Select Prize\"\n                                            value={this.state.balance}\n                                            onChange={this.handleChange('balance')}\n                                            helperText={this.state.msg_tournament_balance}\n                                            error={this.state.msg_tournament_balance.length > 0}\n                                        >\n                                            {this.state.balances.map(option => (\n                                                <MenuItem key={option} value={option}>\n                                                    {option} bp\n                                                </MenuItem>\n                                            ))}\n                                        </TextField>\n                                    </Grid>\n                                    <Grid item xs={12} md={6} >\n                                        <TextField style={{ margin: '1vw', width: '90%' }}\n                                            select\n                                            label=\"Player Count\"\n                                            value={this.state.player_count}\n                                            onChange={this.handleChange('player_count')}\n                                            helperText={this.state.msg_tournament_player_count}\n                                            error={this.state.msg_tournament_player_count.length > 0}\n                                        >\n                                            {this.state.player_counts.map(option => (\n                                                <MenuItem key={option.value} value={option.value}>\n                                                    {option.text}\n                                                </MenuItem>\n                                            ))}\n                                        </TextField>\n                                    </Grid>\n                                    <Grid item xs={12} md={6} >\n                                        <TextField style={{ margin: '1vw', width: '90%' }}\n                                            label=\"Entry Fee\"\n                                            value={this.state.entry_fee}\n                                            onChange={this.handleChange('entry_fee')}\n                                            helperText={this.state.msg_tournament_entry_fee}\n                                            error={this.state.msg_tournament_entry_fee.length > 0}\n                                        >\n                                            \n                                        </TextField>\n                                    </Grid>\n                                    <Grid item xs={12} md={12} >\n                                        <TextField style={{ margin: '1vw', width: '90%' }}\n                                            multiline\n                                            label=\"Rules\"\n                                            margin=\"normal\"\n                                            value={this.state.rules}\n                                            onChange={this.handleChange('rules')}\n                                            helperText={this.state.msg_tournament_rules}\n                                            error={this.state.msg_tournament_rules.length > 0}\n                                        />\n                                    </Grid>\n                                    {this.state.custom_fields.map(field => (\n                                        <Grid item xs={12} md={12} key={field.field_id}>\n                                            <TextField style={{ margin: '1vw', width: '40%' }}\n                                                label=\"Field Label\"\n                                                value={field.label_name}\n                                                onChange={(e) => this.handleChangeCustomFields(e,'label_name',field.field_id)}\n                                            >\n                                            </TextField>\n                                            <TextField style={{ margin: '1vw', width: '40%' }}\n                                                label=\"Field Value\"\n                                                value={field.value}\n                                                onChange={(e) =>this.handleChangeCustomFields(e,'field_value',field.field_id)}\n                                            >\n                                            </TextField>\n                                        </Grid>\n                                    ))}\n                                    <Grid item xs={12}>\n                                        <Button onClick={(e) => this.addFields(e)} variant='outlined' style={{ margin: '1vw', width: '90%' }}>\n                                            <span> <i className=\"fas fa-plus\"></i>Add Custom Fields</span>\n                                        </Button>\n                                    </Grid>\n                                    <Grid item xs={12} md={6}>\n                                        <Button style={{ margin: '1vw', width: '90%' }}>\n                                            <input type='file'\n                                                style={{ width: '100%', opacity: 0, position: 'absolute' }}\n                                                onChange={this.onFileUpload} />\n                                            <span><i className=\"fas fa-upload\"></i> Upload Tournament Image</span>\n                                        </Button> \n                                    </Grid>\n                                    \n                                    <Grid item xs={12}>\n                                        <Button type='submit' variant='outlined' style={{ margin: '1vw', width: '90%' }}>\n                                            <span><i className=\"fas fa-upload\"></i> Add Tournament</span>\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </form>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Paper style={{ margin: '20px', padding: '20px' }}>\n                            <h2>Tournament List</h2>\n                            <List style={{ width: '100%', margin: '20px', height: '32vh', overflowY: 'scorll' }}>\n\n                                {\n                                    this.state.tournaments_yet_to_start.map(g => (\n                                        <ListItem button key={g._id}>\n                                            <Avatar style={{ height: '60px', width: '60px' }}>\n                                                <img src={`${HostAddress}gameimg/${g.game.image}`} style={{ height: '100%' }} />\n                                            </Avatar>\n                                            <ListItemText\n                                                primary={<span> {g.game.name} ({g.player_count} players) </span>}\n                                                secondary={<span> {g.game.platform ? 'mobile game' : 'pc game'} </span>} />\n                                        </ListItem>\n                                    ))\n                                }\n                            </List>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </React.Fragment>\n        )\n    }\n}\n\n\n\n\n\n\n\nconst PlatformSelection = [\n    { text: 'mobile', value: 0 },\n    { text: 'pc', value: 1 }\n]\n\nclass GameMenu extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isCalling: false,\n            platform_values: PlatformSelection,\n            games: [],\n            game_name: '',\n            game_platform: 0,\n            game_requirement: '',\n            game_image: '',\n            game_player_count: 1,\n            msg_game_name: '',\n            msg_game_platform: '',\n            msg_game_requirement: '',\n            msg_game_image: '',\n            \n        }\n    }\n    clearMsg = () => {\n        this.setState({\n            msg_game_name: '',\n            msg_game_platform: '',\n            msg_game_requirement: '',\n        });\n    }\n    handleChange = name => e => {\n        this.setState({\n            [name]: e.target.value\n        })\n    }\n    onDrop = picture => {\n        this.setState({\n            game_image: picture,\n        });\n        console.log(picture)\n    }\n    onFileUpload = e => {\n        this.setState({\n            game_image: e.target.files[0]\n        })\n    }\n    load = async () => {\n        const res = await JsonQueryAdmin('post', 'admin/game', {})\n        this.setState({\n            games: res.games\n        })\n        console.log(res.games)\n    }\n    componentDidMount() {\n        this.load()\n    }\n    addGame = async e => {\n        e.preventDefault();\n        this.setState({ isCalling: true })\n        let fd = new FormData()\n        fd.append('image', this.state.game_image, 'chris.jpg')\n        fd.append('name', this.state.game_name)\n        fd.append('platform', this.state.game_platform)\n        fd.append('requirement', this.state.game_requirement)\n        // fd.append('player_count', this.state.game_player_count)\n        \n        const res = await PostQuery('admin/game/add', fd)\n        console.log('form submitted')\n        this.setState({ isCalling: false })\n        console.log(res);\n        this.clearMsg();\n        if (res.errors) {\n            res.errors.map(err => {\n                const fieldName = 'msg_game_' + err.param\n                this.setState({ [fieldName]: err.msg })\n            });\n        } else {\n            if(res.error == 1) {\n                alert(res.message);\n            } else {\n                alert(\"Game added successfully\");\n                this.load();\n            }\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Grid container alignItems='center' justify='center'>\n                    <Grid item xs={12}>\n                        <Paper style={{ margin: '20px', padding: '20px' }}>\n                            <h2>Add Game</h2>\n                            {this.state.isCalling ? <LinearProgress /> : ''}\n                            <form onSubmit={this.addGame} >\n                                <Grid container alignItems='center' justify='center'>\n                                    <Grid item xs={12} md={6} >\n                                        <TextField style={{ margin: '1vw', width: '90%' }}\n                                            label=\"Game Name\"\n                                            margin=\"normal\"\n                                            value={this.state.gameName}\n                                            onChange={this.handleChange('game_name')}\n                                            helperText={this.state.msg_game_name}\n                                            error={this.state.msg_game_name.length > 0}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} md={6} >\n                                        <TextField style={{ margin: '1vw', width: '90%' }}\n                                            label=\"Game Reqirement\"\n                                            margin=\"normal\"\n                                            value=\"ID\"\n                                            readonly={true}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} md={6} >\n                                        <TextField style={{ margin: '1vw', width: '90%' }}\n                                            id=\"standard-select-bets\"\n                                            select\n                                            label=\"Select Platform\"\n                                            value={this.state.game_platform}\n                                            onChange={this.handleChange('game_platform')}\n                                        >\n                                            {this.state.platform_values.map(option => (\n                                                <MenuItem key={option.value} value={option.value}>\n                                                    {option.text}\n                                                </MenuItem>\n                                            ))}\n                                        </TextField>\n                                    </Grid>\n                                    <Grid item xs={12} md={6}>\n                                        <Button style={{ margin: '1vw', width: '90%' }}>\n                                            <input type='file'\n                                                style={{ width: '100%', opacity: 0, position: 'absolute' }}\n                                                onChange={this.onFileUpload} />\n                                            <span><i className=\"fas fa-upload\"></i> Upload Game Image</span>\n                                        </Button>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Button type='submit' variant='outlined' style={{ margin: '1vw', width: '90%' }}>\n                                            <span><i className=\"fas fa-upload\"></i> Add Game</span>\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </form>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Paper style={{ margin: '20px', padding: '20px' }}>\n                            <h2>Game List</h2>\n                            <List style={{ width: '100%', margin: '20px', height: '32vh', overflowY: 'scorll' }}>\n\n                                {\n                                    this.state.games.map(g => (\n                                        <ListItem button key={g._id}>\n                                            <Avatar style={{ height: '60px', width: '60px' }}>\n                                                <img src={`${HostAddress}gameimg/${g.image}`} style={{ height: '100%' }} />\n                                            </Avatar>\n                                            <ListItemText\n                                                primary={<span> {g.name} </span>}\n                                                secondary={<span> {g.platform ? 'mobile game' : 'pc game'} </span>} />\n                                        </ListItem>\n                                    ))\n                                }\n                            </List>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </React.Fragment>\n        )\n    }\n}","import {createMuiTheme} from '@material-ui/core'\n\nconst colors = {\n    blackLight: '#334',\n    greenLight: '#76ff03',\n    green: '#aaa',\n}\n\nexport const myTheme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: {\n            light: '#bbb',\n            main: colors.greenLight,\n            dark: '#76ff03'\n         },\n         secondary: {\n           main: colors.greenLight,\n         },\n         textColor: \"#bdbdbd\",\n      },\n    typography: { \n        useNextVariants: true\n     },\n     appBar: {\n        \"textColor\": \"#33691e\"\n    },\n    card: {\n        \"titleColor\": \"rgba(118, 255, 3, 0.87)\",\n        \"subtitleColor\": \"rgba(224, 224, 224, 0.54)\"\n    },\n    overlay: {\n        \"backgroundColor\": \"rgba(0, 0, 0, 0.87)\"\n    },\n    paper: {\n        backgroundColor: \"rgba(33, 33, 33, 0.66)\"\n    },\n})\n\nexport const ColorPalate = colors;\n\n\nexport const  MainStyles = {\n    nav: {\n        backgroundColor: colors.blackLight,\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n        color: colors.greenLight\n    },\n    logo: {\n        width: 140\n    },\n    sideNav: {\n        width: 240,\n        height: '100%',\n        color: colors.greenLight,\n        backgroundColor: colors.blackLight,\n    },\n    sideNavList: {\n        backgroundColor: colors.blackLight,\n        padding: 8,\n        color: colors.greenLight,\n    },\n    block: {\n        backgroundColor: 'rgba(0, 0, 10, 0.1)',\n        color: colors.greenLight,\n    },\n    heading: {\n        color: colors.greenLight,\n        padding: 8,\n        fontSize: '1.3rem',\n        fontWeight: 'bolder'\n    },\n    text: {\n        color: colors.green,\n        padding: 8,\n        fontSize: '1.2rem',\n    },\n    paper: {\n        backgroundColor: colors.blackLight\n    },\n    boxChallenger: {\n        height: window.innerWidth < 600 ? 70 : 100,\n        width: window.innerWidth < 600 ? 70: 100,\n    },\n    boxGame : {\n        height: '140px',\n        clipPath: 'polygon(0% 0%, 60% 0, 60% 100%, 31% 71%, 0 100%)',\n       \n    },\n    expansion: {\n        padding: 10,\n        backgroundColor: 'rgba(0, 0, 10, 0.2)',\n        color: colors.green,\n    },\n    header: {\n        fontSize: '1.3rem',\n        fontWeight: 'bolder',\n        color: colors.greenLight\n    },\n    gameBtn: {\n        position: 'absolute',\n        zIndex: 4,\n        top: window.innerWidth < 600 ?'84vh' : '90vh',\n        right: window.innerWidth < 600 ? 20 : 40,\n        transform: 'scale(1.2)'\n    },\n    gridList: {\n        minWidth: 500,\n        maxHeight: 450,\n    },\n    centerContainer: {\n        display: 'grid',\n        alignItems: 'center',\n        justifyContent: 'center',\n        textAlign: 'center',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n}\n\n","import React, { Component } from 'react';\nimport { ColorPalate, myTheme } from '../Components/MainStyles';\nimport { MuiThemeProvider } from '@material-ui/core'\n\nimport { JsonQuery, SetCookie } from '../Services/Query'\nimport { Grid, Drawer, TextField, LinearProgress } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\n\nimport './Landing.css';\n\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            full_name: '',\n            email: '',\n            password: '',\n            confirm: '',\n            isCalling: false,\n            msg_full_name: '',\n            msg_email: '',\n            msg_password: '',\n            msg_confirm: '',\n        }\n    }\n    clearMsg = () => {\n        this.setState({\n            msg_full_name: '',\n            msg_email: '',\n            msg_password: '',\n            msg_confirm: '',\n        });\n    }\n    handleChange = name => event => {\n        this.setState({ [name]: event.target.value })\n    }\n    register = async e => {\n        e.preventDefault();\n        this.setState({ isCalling: true })\n        const { full_name, email, password, confirm } = this.state;\n        if (full_name === '' || full_name === undefined) {\n\n        }\n        const res = await JsonQuery('post', 'sign/register', { full_name, email, password, confirm });\n        this.setState({ isCalling: false })\n        this.clearMsg();\n        if (res.errors) {\n            res.errors.map(err => {\n                const fieldName = 'msg_' + err.param;\n                this.setState({ [fieldName]: err.msg })\n                return err\n            });\n        } else {\n            alert(`registration successful`)\n        }\n    }\n\n    render() {\n        return (\n            <div style={{ width: '80vw', height: '100%', display: 'grid', alignItems: 'center', justifyContent: 'center' }}>\n                <div style={{ margin: '2vw' }}>\n                    <h1>Register</h1>\n                    {this.state.isCalling ? <LinearProgress /> : ''}\n                    <form onSubmit={this.register}>\n                        <Grid container >\n                            <Grid item xs={12} md={6} >\n                                <TextField style={{ margin: '1vw', width: '90%' }}\n                                    id=\"standard-name\"\n                                    label=\"Name\"\n                                    margin=\"normal\"\n                                    value={this.state.full_name}\n                                    onChange={this.handleChange('full_name')}\n                                    helperText={this.state.msg_full_name}\n                                    error={this.state.msg_full_name.length > 0}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6} >\n                                <TextField style={{ margin: '1vw', width: '90%' }}\n                                    id=\"standard-email\"\n                                    label=\"Email Id\"\n                                    margin=\"normal\"\n                                    value={this.state.email}\n                                    onChange={this.handleChange('email')}\n                                    helperText={this.state.msg_email}\n                                    error={this.state.msg_email.length > 0}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6}>\n                                <TextField style={{ margin: '1vw', width: '90%' }}\n                                    id=\"standard-password\"\n                                    label=\"Password\"\n                                    margin=\"normal\"\n                                    type='password'\n                                    value={this.state.password}\n                                    onChange={this.handleChange('password')}\n                                    helperText={this.state.msg_password}\n                                    error={this.state.msg_password.length > 0}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6} >\n                                <TextField style={{ margin: '1vw', width: '90%' }}\n                                    id=\"standard-confirm-password\"\n                                    label=\"Confirm Password\"\n                                    margin=\"normal\"\n                                    type='password'\n                                    value={this.state.confirm}\n                                    onChange={this.handleChange('confirm')}\n                                    helperText={this.state.msg_confirm}\n                                    error={this.state.msg_confirm.length > 0}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6} >\n                                <Button type='submit' style={{ padding: 14, color: '#2af', }}>\n                                    Register\n                        </Button>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\nclass SignIn extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            isCalling: false,\n            msg_email: '',\n            msg_password: '',\n        }\n    }\n    clearMsg = () => {\n        this.setState({\n            msg_email: '',\n            msg_password: ''\n        });\n    }\n    handleChange = name => event => {\n        this.setState({ [name]: event.target.value })\n    }\n    signIn = async e => {\n        e.preventDefault();\n        this.setState({ isCalling: true })\n        const { email, password } = this.state;\n        const res = await JsonQuery('post', 'sign/login', { email, password });\n        this.setState({ isCalling: false })\n        this.clearMsg();\n        if (res.errors) {\n            res.errors.map(err => {\n                const fieldName = 'msg_' + err.param;\n                this.setState({ [fieldName]: err.msg });\n                return err\n            });\n        } else {\n            SetCookie('logauti', res.id);\n            SetCookie('logautx', this.state.email);\n            SetCookie('logauty', res.connection_string);\n            this.props.history.push('/dashboard')\n        }\n    }\n    render() {\n        return (\n            <div style={{ height: '80vh', display: 'grid', alignItems: 'center', justifyContent: 'center' }}>\n                <div style={{ margin: '2vw' }}>\n                    <h1>Sign In</h1>\n                    {this.state.isCalling ? <LinearProgress /> : ''}\n                    <form onSubmit={this.signIn}>\n                        <Grid container >\n                            <Grid item xs={12} md={6} >\n                                <TextField style={{ margin: '1vw', width: '90%' }}\n                                    id=\"standard-email\"\n                                    label=\"Email Id\"\n                                    margin=\"normal\"\n                                    value={this.state.email}\n                                    onChange={this.handleChange('email')}\n                                    helperText={this.state.msg_email}\n                                    error={this.state.msg_email.length > 0}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6}>\n                                <TextField style={{ margin: '1vw', width: '90%' }}\n                                    id=\"standard-password\"\n                                    label=\"Password\"\n                                    margin=\"normal\"\n                                    type='password'\n                                    value={this.state.password}\n                                    onChange={this.handleChange('password')}\n                                    helperText={this.state.msg_password}\n                                    error={this.state.msg_password.length > 0}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6} >\n                                <Button type='submit' style={{ padding: 14, color: '#2af', }}>\n                                    Sign In\n                        </Button>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\nexport class Landing extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isRegister: false,\n            isSignIn: false\n        }\n    }\n    toggleRegister = () => {\n        this.setState({\n            isRegister: !this.state.isRegister\n        })\n    }\n    toggleSignIn = () => {\n        this.setState({\n            isSignIn: !this.state.isSignIn\n        })\n    }\n    redrt = async () => {\n       // const res = await JsonQueryAuth('POST', 'info/getUser', { });\n    }\n    componentDidMount() {\n        document.body.className=\"body-a\" \n    }\n    render() {\n        return (\n            <React.Fragment>\n                <div className='body1'>\n                    <Drawer open={this.state.isRegister} onClose={this.toggleRegister}>\n                        <Register />\n                    </Drawer>\n                    <Drawer anchor=\"top\" open={this.state.isSignIn} onClose={this.toggleSignIn}>\n                        <SignIn history={this.props.history} />\n                    </Drawer>\n                    <div className='Page'>\n                        <div id=\"title\" className=\"slide header\">\n                            <div>\n                                <Grid container alignItems='center' justify='center'>\n                                    <Grid item xs={12}>\n                                        <h1 style={{ color: ColorPalate.greenLight, fontSize: '2.4rem' }}>Virtual Battle Ground</h1>\n                                        <h1 style={{ color: '#bbb', fontSize: '1.4rem' }}>Start making money through competetive gaming</h1>\n                                    </Grid>\n                                    <br /><br />\n                                    <Grid item xs={12} spacing={16} container alignItems='center' justify='center'>\n                                        <Grid item xs={12} md={6} container alignItems='center' justify='center'>\n                                            <Button style={{ color: ColorPalate.greenLight }}\n                                                onClick={this.toggleRegister}\n                                            ><div className=\"boton\">\n\n                                                    <svg viewBox=\"0 0 290 70\" width=\"100%\" heigth=\"100%\" >\n                                                        <line className=\"L-T\" x1=\"0\" y1=\"-15\" x2=\"0\" y2=\"20\" />\n                                                        <line className=\"L-B\" x1=\"0\" y1=\"50\" x2=\"0\" y2=\"85\" />\n\n                                                        <line className=\"R-T\" x1=\"290\" y1=\"-15\" x2=\"290\" y2=\"20\" />\n                                                        <line className=\"R-B\" x1=\"290\" y1=\"50\" x2=\"290\" y2=\"85\" />\n\n                                                        <line className=\"T-L\" x1=\"-125\" y1=\"0\" x2=\"20\" y2=\"0\" />\n                                                        <line className=\"T-R\" x1=\"270\" y1=\"0\" x2=\"415\" y2=\"0\" />\n\n                                                        <line className=\"B-R\" x1=\"270\" y1=\"70\" x2=\"415\" y2=\"70\" />\n                                                        <line className=\"B-L\" x1=\"-125\" y1=\"70\" x2=\"20\" y2=\"70\" />\n                                                    </svg>\n                                                    <span>Register</span>\n                                                </div>\n                                            </Button>\n                                        </Grid>\n                                        <Grid item xs={12} md={6} container alignItems='center' justify='center'>\n                                            <Button style={{ color: ColorPalate.greenLight }}\n                                                onClick={this.toggleSignIn}\n                                            ><div className=\"boton\"\n                                            >\n\n                                                    <svg viewBox=\"0 0 290 70\" width=\"100%\" heigth=\"100%\" >\n                                                        <line className=\"L-T\" x1=\"0\" y1=\"-15\" x2=\"0\" y2=\"20\" />\n                                                        <line className=\"L-B\" x1=\"0\" y1=\"50\" x2=\"0\" y2=\"85\" />\n\n                                                        <line className=\"R-T\" x1=\"290\" y1=\"-15\" x2=\"290\" y2=\"20\" />\n                                                        <line className=\"R-B\" x1=\"290\" y1=\"50\" x2=\"290\" y2=\"85\" />\n\n                                                        <line className=\"T-L\" x1=\"-125\" y1=\"0\" x2=\"20\" y2=\"0\" />\n                                                        <line className=\"T-R\" x1=\"270\" y1=\"0\" x2=\"415\" y2=\"0\" />\n\n                                                        <line className=\"B-R\" x1=\"270\" y1=\"70\" x2=\"415\" y2=\"70\" />\n                                                        <line className=\"B-L\" x1=\"-125\" y1=\"70\" x2=\"20\" y2=\"70\" />\n                                                    </svg>\n                                                    <span>Sign In</span>\n                                                </div>\n                                            </Button>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </div>\n                        </div>\n\n                        <div id=\"slide1\" className=\"slide\">\n                            <div className=\"title-x\">\n                                <h1>How It Works</h1>\n                                <p>Compete in gaming tournaments and head-to-head challenges with gamers of every skill level on Mobile, Playstation, Xbox and PC. Participate in free-to-play or cash tournaments and Win Big at Virtual Battle Ground.</p>\n                            </div>\n                        </div>\n\n                        <div id=\"slide2\" className=\"slide\">\n                            <div className=\"title\">\n                                <h1>Participate in Live Tournaments To Earn More</h1>\n                                <p>Lorem ipsum dolor sit amet, in velit iudico mandamus sit, persius dolorum in per, postulant mnesarchum cu nam. Malis movet ornatus id vim, feugait detracto est ea, eam eruditi conceptam in. Ne sit explicari interesset. Labores perpetua cum at. Id viris docendi denique vim.</p>\n                            </div>\n\n                            <img src={require('../img/8ball.jpg')} alt='game'/>\n                            <img src={require('../img/chess.jpg')} alt='chess'/>\n                        </div>\n\n                        <div id=\"slide3\" className=\"slide\">\n                            <Grid container spacing={16}>\n                                <Grid item xs={12} md={6}>\n                                    <div className=\"title-y\">\n                                        <h1>CREATE ACCOUNT</h1>\n                                        <p>Login to Virtual Battle Ground and Add money to wallet</p>\n                                    </div>\n\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <div className=\"title-y\">\n                                        <h1>FIND YOUR GAME</h1>\n                                        <p>Search among the Listd game and add to your play list</p>\n                                    </div>\n\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <div className=\"title-y\">\n                                        <h1>CHALLENGE OTHERS</h1>\n                                        <p>Search for ohter players and challenge them for free or bet</p>\n                                    </div>\n\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <div className=\"title-y\">\n                                        <h1>WIN AND EARN</h1>\n                                        <p>beat other players in tournaments and matches to earn credits.</p>\n                                    </div>\n\n                                </Grid>\n                            </Grid>\n\n                        </div>\n\n                        <div id=\"slide4\" className=\"slide header\">\n                            <h1>The End</h1>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport { MainStyles, ColorPalate } from './MainStyles';\n\nimport { JsonQueryAuth, HostAddress, getCookie } from '../Services/Query'\n\nimport { AppBar, Toolbar } from '@material-ui/core';\nimport { Drawer, List, ListItem, ListItemIcon, ListItemText, Divider, Icon } from '@material-ui/core';\nimport { IconButton } from '@material-ui/core'\nimport { Sort, Dashboard, Person, AccountBalanceWallet, FeaturedPlayListTwoTone } from '@material-ui/icons';\nimport { Grid, Typography, Fab, Button } from '@material-ui/core';\nimport { GridList, GridListTile, GridListTileBar } from '@material-ui/core';\nimport { TextField, Avatar, MenuItem } from '@material-ui/core';\nimport { Dialog, DialogTitle, DialogContent } from '@material-ui/core';\nimport Slide from '@material-ui/core/Slide';\n\nimport styles from './Navigation.module.css';\n\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\n\nconst ChallengeBets = [\n    { text: 'Free', value: 0 },\n    { text: '10 BP', value: 10 },\n    { text: '20 BP', value: 20 },\n    { text: '50 BP', value: 50 },\n    { text: '100 BP', value: 100 },\n    { text: '500 BP', value: 500 },\n]\n\n\nconst Logo = () =>\n    (<img\n        src={require('../img/icons/vbg1.png')}\n        style={MainStyles.logo}\n        alt=\"VBG\"\n    >\n    </img>);\n\n\nexport class Navigation extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showGameBtn : false, \n            isOpen: false,\n            image: require('../img/default.jpg'),\n            name: 'palyer',\n            balance: 0,\n            data: {}\n        }\n        this.toggleDrawer = this.toggleDrawer.bind(this);\n    }\n    toggleDrawer() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        })\n    }\n    load = async () => {\n        const res = await JsonQueryAuth('POST', 'info/getUser', { x: 10 });\n        const image = `${HostAddress}user/${res.folder}/${res.image}`\n        const name = res.full_name\n        const balance = res.balance\n        this.setState({\n            name: name,\n            image: image,\n            balance: balance,\n            showGameBtn : this.props.active !== 'wallet' && this.props.active !== 'history'\n        })\n    }\n    componentDidMount() {\n        this.load();\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <AppBar position='sticky' style={MainStyles.nav}>\n                    <Toolbar>\n                        <IconButton\n                            style={MainStyles.menuButton}\n                            color=\"inherit\" aria-label=\"Menu\"\n                            onClick={this.toggleDrawer}>\n                            <Sort style={{ transform: 'scale(1.2)' }} />\n                        </IconButton>\n                        <Logo />\n                    </Toolbar>\n                    {\n                        this.state.showGameBtn? <GameBtn load={this.props.load} /> : ''\n                    }\n                </AppBar>\n                <Drawer open={this.state.isOpen} onClose={this.toggleDrawer}>\n                    <SideMenu\n                        active={this.props.active}\n                        image={this.state.image}\n                        name={this.state.name}\n                        balance={this.state.balance}\n                    />\n                </Drawer>\n            </React.Fragment>\n        );\n    }\n}\n\nclass GameBtn extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false,\n            stage: 'game',\n            bets: ChallengeBets,\n            nameHint: '',\n            bet: 0,\n            games: [],\n            game: '',\n            opponents: [],\n            opponent: {\n                _id: '',\n                name: '',\n                image: require('../img/default.jpg')\n            },\n            self: {\n                _id: '',\n                name: '',\n                image: require('../img/default.jpg')\n            }\n        }\n        this.toggleChallenge = this.toggleChallenge.bind(this);\n    }\n    toggleChallenge() {\n        this.setState({\n            isOpen: !this.state.isOpen,\n            stage: 'game'\n        })\n    }\n    handleChange = name => async event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n        if (name === 'nameHint') {\n            this.search(event.target.value)\n        }\n    } \n    async componentDidMount() {\n        const res = await JsonQueryAuth('POST', 'info/getGames', {})\n        this.setState({\n            games: res\n        });\n    }\n    search = async (name) => {\n        const res = await JsonQueryAuth('POST', 'info/getChallangerList', { name: name, game_id: this.state.game })\n        const opponents = res.list.filter(x => x._id !== getCookie('logauti'))\n        this.setState({\n            opponents: opponents,\n            stage: 'search',\n        })\n    }\n    selectOpponent = id => async  e => {\n        const res = await JsonQueryAuth('POST', 'info/getChallangerList', { name: this.state.nameHint, game_id: id })\n        const opponents = res.list.filter(x => x._id !== getCookie('logauti'))\n        this.setState({\n            opponents: opponents,\n            self: res.list.filter(x => x._id === getCookie('logauti'))[0],\n            stage: 'search',\n            game: id\n        })\n    }\n    openChallange = op => async e => {\n        this.setState({\n            opponent: op,\n            stage: 'challenge'\n        })\n    }\n    challenge = async e => {\n        const { opponent, bet, game, self } = this.state;\n        const res = await JsonQueryAuth('POST', 'dashboard/game/challange', {\n            challenger: self._id,\n            challenged: opponent._id,\n            balance: bet,\n            game_id: game\n        });\n        if (res.status === 'ok') {\n            this.toggleChallenge();\n            this.props.load()\n        } else {\n            alert(res.errors[0]);\n        }\n    }\n    render() {\n        let dialogContent, dialogTitle;\n        switch (this.state.stage) {\n            case 'game':\n                dialogTitle = 'Select Game';\n                dialogContent = (\n                    <React.Fragment>\n                        <GridList cellHeight={200} style={MainStyles.gridList}>\n                            {this.state.games.map(g => (\n                                <GridListTile key={g._id} onClick={this.selectOpponent(g._id)} cols={window.innerWidth < 600 ? 2 : 1}>\n                                    <img src={`${HostAddress}gameimg/${g.image}`} alt={'data.name'} />\n                                    <GridListTileBar\n                                        title={g.name}\n                                        subtitle={<span>Platform: {g.platform === 0 ? 'mobile' : 'PC'}</span>}\n                                    />\n                                </GridListTile>\n                            ))\n                            }\n                        </GridList>\n                    </React.Fragment>\n                )\n                break;\n            case 'search':\n                dialogTitle = 'Search Opponent';\n                dialogContent = (\n                    <React.Fragment>\n                        <div>\n                            <TextField\n                                autoComplete=\"off\"\n                                id=\"outlined-search\"\n                                label=\"Search Opponent\"\n                                type=\"search\"\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                                onChange={this.handleChange('nameHint')}\n                                style={{ width: window.innerWidth < 600 ? 'auto' : 400 }}\n                            />\n                        </div>\n                        <div>\n                            <List style={{ height: 300, overflowY: 'scroll' }}>\n                                {this.state.opponents.map(op => (\n                                    <ListItem key={op._id} onClick={this.openChallange(op)}>\n                                        <Avatar alt=\"Remy Sharp\" src={`${HostAddress}${op.image}`} />\n                                        <ListItemText primary={op.full_name} />\n                                    </ListItem>\n                                ))}\n                            </List>\n                        </div>\n                    </React.Fragment>\n                )\n                break;\n            case 'challenge':\n                dialogTitle = 'Challenge';\n                dialogContent = (\n                    <React.Fragment>\n                        <Grid container justify='center' alignItems='center' >\n                            <Grid item xs={12}>\n                                <Grid container spacing={16} justify=\"center\" alignItems=\"center\">\n                                    <Grid item xs={5} style={MainStyles.centerContainer}>\n                                        <Avatar \n                                            alt={this.state.self.full_name}\n                                            src={`${HostAddress}${this.state.self.image}`}\n                                            style={{ width: window.innerWidth < 600 ? 100 : 200, height: window.innerWidth < 600 ? 100 : 200 }} />\n                                        <span style={{ textAlign: 'center', color:'#aaa' }}>{this.state.self.full_name}</span>\n                                    </Grid>\n                                    <Grid item xs={2} style={{ textAlign: 'center', color: ColorPalate.greenLight, fontSize: '1.6rem' }} className='animated heartBeat infinite'>\n                                        <span > VS </span>\n                                    </Grid>\n                                    <Grid item xs={5} style={MainStyles.centerContainer}>\n                                        <Avatar\n                                            alt=\"Remy Sharp\"\n                                            src={`${HostAddress}${this.state.opponent.image}`}\n                                            style={{ width: window.innerWidth < 600 ? 100 : 200, height: window.innerWidth < 600 ? 100 : 200 }} />\n                                        <span style={{ textAlign: 'center', color:'#aaa' }}>{this.state.opponent.full_name}</span>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={12} md={6}>\n                                <TextField\n                                    id=\"standard-select-bets\"\n                                    select\n                                    label=\"Select Bet\"\n                                    value={this.state.bet}\n                                    style={{ width: '100%', marginTop: 20 }}\n                                    onChange={this.handleChange('bet')}\n                                >\n                                    {this.state.bets.map(option => (\n                                        <MenuItem key={option.value} value={option.value}>\n                                            {option.text}\n                                        </MenuItem>\n                                    ))}\n                                </TextField>\n                            </Grid>\n                            <Grid item xs={12} style={MainStyles.centerContainer}>\n                                <Button\n                                    style={{ marginTop: 30, width: '100%', padding: 20, fontSize: '1.3rem', color: ColorPalate.greenLight }}\n                                    onClick={this.challenge}\n                                >\n                                    <i className=\"fas fa-gamepad\"></i>{'\\u00A0'}Challenge\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </React.Fragment>\n                )\n                break;\n        }\n        return (\n            <div style={MainStyles.gameBtn}>\n                <Fab style={{ backgroundColor: '#00c853' }} onClick={this.toggleChallenge} className='animated rubberBand'>\n                    <img src={require('../img/icons/sword.svg')} alt=\"B\" style={{ width: 30 }} />\n                </Fab>\n                <Dialog\n                    open={this.state.isOpen}\n                    onClose={this.toggleChallenge}\n                    TransitionComponent={Transition}\n                    keepMounted>\n                    <DialogTitle>{dialogTitle}</DialogTitle>\n                    <DialogContent>\n                    <div>\n                    {dialogContent}\n                    </div>\n                    </DialogContent>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\n\nconst SideMenu = ({ active, image, name, balance }) => {\n    return (\n        <div style={MainStyles.sideNav}>\n            <div className={styles.NavProfileCard}>\n                <div>\n                    <img src={image} alt=\"Player\" />\n                </div>\n                <div>\n                    <h2>{name}</h2>\n                    <span>Balance : {balance} bp</span>\n                </div>\n            </div>\n            <List style={MainStyles.sideNavList}>\n                <Link to='/dashboard' style={{ textDecoration: 'none', color: ColorPalate.greenLight }}>\n                    <ListItem button >\n                        <ListItemIcon style={{ color: active === 'dashboard' ? ColorPalate.greenLight : ColorPalate.green }}>\n                            <Dashboard />\n                        </ListItemIcon>\n                        <ListItemText inset\n                            primary={<span style={{\n                                color:\n                                    active === 'dashboard' ? ColorPalate.greenLight : ColorPalate.green\n                            }}>\n                                Dashboard</span>} />\n                    </ListItem>\n                </Link>\n                <Link to='/tournament' style={{ textDecoration: 'none', color: ColorPalate.greenLight }}>\n                    <ListItem button>\n                        <ListItemIcon style={{ color: active === 'tournament' ? ColorPalate.greenLight : ColorPalate.green }}>\n                            <Icon className=\"fas fa-trophy\" style={{ marginLeft: -2, transform: 'scale(0.79)' }} />\n                        </ListItemIcon>\n                        <ListItemText inset\n                            primary={<span style={{\n                                color:\n                                    active === 'tournament' ? ColorPalate.greenLight : ColorPalate.green\n                            }}>\n                                Tournament</span>} />\n                    </ListItem>\n                </Link>\n                <Link to='/leaderboard' style={{ textDecoration: 'none', color: ColorPalate.greenLight }}>\n                    <ListItem button>\n                        <ListItemIcon style={{ color: active === 'leaderboard' ? ColorPalate.greenLight : ColorPalate.green }}>\n                            <Icon className=\"fab fa-fort-awesome\" style={{ marginLeft: 2, transform: 'scale(0.79)' }} />\n                        </ListItemIcon>\n                        <ListItemText inset\n                            primary={<span style={{\n                                color:\n                                    active === 'leaderboard' ? ColorPalate.greenLight : ColorPalate.green\n                            }}>\n                                Leaderboard</span>} />\n                    </ListItem>\n                </Link>\n                <Divider />\n                <Link to='/wallet' style={{ textDecoration: 'none', color: ColorPalate.greenLight }}>\n                    <ListItem button>\n                        <ListItemIcon style={{ color: active === 'wallet' ? ColorPalate.greenLight : ColorPalate.green }}>\n                            <AccountBalanceWallet />\n                        </ListItemIcon>\n                        <ListItemText inset\n                            primary={<span style={{\n                                color:\n                                    active === 'wallet' ? ColorPalate.greenLight : ColorPalate.green\n                            }}>\n                                Wallet</span>} />\n                    </ListItem>\n                </Link>\n                <Link to='/history' style={{ textDecoration: 'none', color: ColorPalate.greenLight }}>\n                    <ListItem button>\n                        <ListItemIcon style={{ color: active === 'history' ? ColorPalate.greenLight : ColorPalate.green }}>\n                            <Icon className=\"fas fa-scroll\" style={{ marginLeft: -2, transform: 'scale(0.79)' }} />\n                        </ListItemIcon>\n                        <ListItemText inset\n                            primary={<span style={{\n                                color:\n                                    active === 'history' ? ColorPalate.greenLight : ColorPalate.green\n                            }}>\n                                History</span>} />\n                    </ListItem>\n                </Link>\n                <Link to='/profile' style={{ textDecoration: 'none', color: ColorPalate.greenLight }}>\n                    <ListItem button>\n                        <ListItemIcon style={{ color: active === 'profile' ? ColorPalate.greenLight : ColorPalate.green }}>\n                            <Person />\n                        </ListItemIcon>\n                        <ListItemText inset\n                            primary={<span style={{\n                                color:\n                                    active === 'profile' ? ColorPalate.greenLight : ColorPalate.green\n                            }}>\n                                Profile</span>} />\n                    </ListItem>\n                </Link>\n                <Divider />\n                <Link to='/logout' style={{ textDecoration: 'none', color: ColorPalate.greenLight }}>\n                    <ListItem button>\n                        <ListItemIcon style={{ color: ColorPalate.green }}>\n                            <Icon className=\"fas fa-sign-out-alt\" style={{ marginLeft: 2, transform: 'scale(0.79)' }} />\n                        </ListItemIcon>\n                        <ListItemText inset\n                            primary={<span style={{ color: ColorPalate.green }}>\n                                Tournament</span>} />\n                    </ListItem>\n                </Link>\n            </List>\n        </div>\n    );\n}\n","import React, { Component } from 'react';\nimport { ColorPalate } from './MainStyles';\n\nimport { JsonQueryAuth, HostAddress } from '../Services/Query';\nimport { Grid, Button,TextField,Slide } from '@material-ui/core';\nimport { Dialog, DialogTitle, DialogContent, DialogActions } from '@material-ui/core';\nimport styles from './Cards.module.css';\n\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\nexport class ChallengeCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false,\n            opponent: this.props.opponent,\n            game: this.props.game,\n            bet: this.props.bet,\n            isChallenger: this.props.isChallenger\n        }\n    }\n    toggleChallenge = () => {\n        this.setState({\n            isOpen: !this.state.isOpen,\n        })\n    }\n    acceptChallenge = async () => {\n        const res = await JsonQueryAuth('POST', 'dashboard/game/challange/accept', { match_id: this.props.id })\n        console.log(res);\n        if (res.status === 'ok') {\n            this.props.load();\n            this.toggleChallenge();\n        }\n        else {\n            alert(res.errors[0]);\n        }\n    }\n    cancelChallenge = async () => {\n        const res = await JsonQueryAuth('POST', 'dashboard/game/challange/decline', { match_id: this.props.id })\n        if (res.status === 'ok') {\n            this.props.load();\n            this.toggleChallenge();\n        }\n        else {\n            alert(res.errors[0]);\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Grid item container xs={12} md={4} justify='center' alignItems='center' style={{ marginBottom: 8 }}>\n                    <div className={`${styles.bCard} animated bounceInRight`} onClick={this.toggleChallenge}>\n                        <div>\n                            <img src={`${HostAddress}gameimg/${this.state.game.image}`} alt='game'/>\n                            <h1>{this.state.game.name}</h1>\n                            <h2>Bet: {this.state.bet} BP</h2>\n                            <h2>{this.state.opponent.full_name}</h2>\n                        </div>\n                        <div>\n                            <img src={`${HostAddress}${this.state.opponent.image}`} alt='opponent' />\n                        </div>\n                    </div>\n                </Grid>\n                <Dialog open={this.state.isOpen} onClose={this.toggleChallenge}>\n                    <DialogTitle>I want to</DialogTitle>\n                    <DialogContent>\n                        Choose the type of action you want.\n                    </DialogContent>\n                    <DialogActions>\n                        {!this.state.isChallenger ? <Button onClick={this.acceptChallenge} style={{ color: 'green', fontWeight: 'bolder' }}>Accept Challenge</Button> : ''}\n                        <Button onClick={this.cancelChallenge} style={{ color: 'red', fontWeight: 'bolder' }}>Cancel Challenge</Button>\n                    </DialogActions>\n                </Dialog>\n            </React.Fragment>\n        )\n    }\n}\n\n\n\nexport class MatchCard extends Component {\n    redirect = id => async e => {\n        this.props.history.push(`/match/${id}`)\n    }\n    render() {\n        const { id, bet, game, opponent } = this.props\n        return (\n            <Grid item container xs={12} md={4} lg={3} justify='center' alignItems='center' style={{ marginBottom: 8 }} >\n                <div className={`${styles.cCard} animated bounceInLeft`} onClick={this.redirect(id)}>\n                    <div>\n                        <img src={`${HostAddress}gameimg/${game.image}`} />\n                    </div>\n                    <div>\n                        <img src={`${HostAddress}${opponent.image}`} />\n                    </div>\n                    <div>\n                        <h1> VS </h1>\n                        <h2>{opponent.full_name}</h2>\n                        <br />\n                        <h3>{game.name}</h3>\n                        <h3>{bet} BP</h3>\n                    </div>\n                </div>\n            </Grid>\n        )\n    }\n}\n\nexport class TournamentCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false,\n            game: this.props.game,\n            isParticipating: this.props.isParticipating,\n            player_count: this.props.player_count,\n            tournament_id: this.props.tournament_id,\n            image:this.props.image,\n            current_available:this.props.current_available,\n            entry_fee:this.props.entry_fee,\n            prize:this.props.prize,\n        }\n       \n    }\n    toggleJoin = () => {\n        if (!this.state.isParticipating)\n            this.setState({\n                isOpen: !this.state.isOpen,\n            })\n        else {\n            console.log(this.state.tournament_id)\n            this.props.enterTournament(this.state.tournament_id)\n        }\n    }\n    joinTournament = id => async e => {\n        console.log(id)\n        const res = await JsonQueryAuth('post', `tournament/join/`, { tournament_id: this.state.tournament_id })\n        if (res.status === 'ok') {\n            this.props.load()\n        } else {\n            this.toggleJoin();\n            alert(\"Tournament is not valid\");\n        }\n    }\n\n    render() {\n\n        // if(this.props.custom_fields) {\n        //     try {\n        //         var custom_fields = JSON.parse(this.props.custom_fields);\n        //     } catch(e) {\n        //         var custom_fields = [];\n        //     }\n        // } else {\n        //     var custom_fields = [];\n        // }\n        return (\n            <React.Fragment>\n                <Grid item container xs={12} md={4} lg={4} justify='center' alignItems='center' style={{ marginBottom: 8 }} >\n                    <div className={styles.gameCard} onClick={this.toggleJoin}>\n                        <div>\n                            <img src={(this.props.image && this.props.image!='') ? `${HostAddress}tournamentimg/${this.props.image}`:`${HostAddress}gameimg/${this.props.game.image}`} />\n                        </div>\n                        <h1>{this.props.game.name}  </h1>\n                        <h2>{this.props.game.platform ? 'mobile game' : 'pc game'}</h2>\n                        <h2>Slot : {this.props.current_available + '/' +this.props.player_count }</h2>\n                        <h2>Prize Amount : {this.props.prize }</h2>\n                        <h2>Entry Fees : {this.props.entry_fee }</h2>\n                        {/* {custom_fields.map((custom,index) =>\n                            <h2 key={custom.field_id}>{custom.label_name} : {custom.field_value }</h2>                        \n                        )} */}\n                    </div>\n                </Grid>\n                <Dialog open={this.state.isOpen} onClose={this.toggleJoin}>\n                    <DialogTitle>Join Tournament</DialogTitle>\n                    <DialogContent>\n                        Do you want to join this tournament?\n                    </DialogContent>\n                    <DialogActions>\n                        <Button style={{ color: ColorPalate.green, fontWeight: 'bolder' }} onClick={this.joinTournament(this.props.tournament_id)}>\n                            Join\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </React.Fragment>\n        )\n    }\n}\n\n\n\nexport class GameCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false,\n            game: this.props.game,\n            isAddGame:false,\n            contact_string:this.props.game.contact_string\n        };;\n    }\n    toggleGame = () => {\n        this.setState({\n            isOpen: !this.state.isOpen,\n        })\n    }\n    removeGame = id => async e => {\n        console.log(id)\n        const res = await JsonQueryAuth('get', `dashboard/game/remove/${id}`)\n        if (res.status === 'ok')\n            this.props.load()\n    }\n    toggleAddGame = () => {\n        this.toggleGame();\n        this.setState({\n            isAddGame: !this.state.isAddGame,\n        })\n    }\n    handleChange = name => e => {\n        this.setState({\n            [name]: e.target.value\n        })\n    }\n    addGameSubmit = async e =>{\n        e.preventDefault()\n        const {contact_string } = this.state;\n        var game_id = this.props.game._id;\n        const res = await JsonQueryAuth('post', 'dashboard/game/updateid', { game_id, contact_string})\n        if(res.errors) {\n            //console.log(res.errors)\n        }else if(res.status === 'ok') {\n            alert('gameid updated succenssfully')\n            this.setState({\n                isAddGame: !this.state.isAddGame,\n            });\n        }else if(res.status === 'fail') {\n            alert(res.msg);\n        }\n    }\n    render() {\n        let content;\n        console.log('-------------');\n        console.log(this.props.game);\n        content = (\n            <form onSubmit={this.addGameSubmit}>\n                <div>\n                    <TextField\n                        autoComplete=\"off\"\n                        id=\"outlined-search\"\n                        label={this.props.game.requirement}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        value={this.state.contact_string}\n                        onChange={this.handleChange('contact_string')}\n                        style={{ width: window.innerWidth < 600 ? 'auto' : 400 }}\n                    />\n                </div>\n                <Button style={{color: '#157'}} type='submit' onClick={this.addGameSubmit}>\n                    Update Id\n                </Button>\n            </form>\n        );\n        return (\n            <React.Fragment>\n                <Grid item container xs={12} md={4} lg={4} justify='center' alignItems='center' style={{ marginBottom: 8 }} >\n                    <div className={styles.gameCard} onClick={this.toggleGame}>\n                        <div>\n                            <img src={`${HostAddress}gameimg/${this.props.game.image}`} />\n                        </div>\n                        <h1>{this.props.game.name}</h1>\n                        <h2>{this.props.game.platform ? 'mobile game' : 'pc game'}</h2>\n                        {this.props.game.contact_string &&\n                            <h4> GameId : {this.props.game.contact_string}</h4>\n                        }\n                    </div>\n                </Grid>\n                <Dialog open={this.state.isOpen} onClose={this.toggleGame}>\n                    <DialogTitle>{this.props.game.name}</DialogTitle>\n                    <DialogContent>\n                        <h4>Game Type :  {this.props.game.platform ? 'mobile game' : 'pc game'}</h4>\n                        <h4>Game id :  {this.props.game.requirement}</h4>\n                        <h4>Player Count :  {this.props.game.player_count}</h4>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button style={{ color: 'green', fontWeight: 'bolder' }} onClick={this.toggleAddGame}>\n                            Change Id\n                        </Button>\n                        <Button style={{ color: 'red', fontWeight: 'bolder' }} onClick={this.removeGame(this.props.game._id)}>\n                            Remove Game\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.isAddGame}\n                    onClose={this.toggleAddGame}\n                    TransitionComponent={Transition}\n                    keepMounted>\n                    <DialogTitle>Games</DialogTitle>\n                    <DialogContent> \n                        <div>\n                            {content}\n                        </div>\n                    </DialogContent>\n                </Dialog>\n            </React.Fragment>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { MainStyles, myTheme } from '../Components/MainStyles';\nimport { MuiThemeProvider } from '@material-ui/core'\n\nimport { JsonQueryAuth, HostAddress, getCookie } from '../Services/Query'\nimport { Navigation } from '../Components/Navigation';\nimport { MatchCard, ChallengeCard, GameCard } from '../Components/Cards';\n\nimport { Grid, Typography, Button } from '@material-ui/core';\nimport { GridList, GridListTile, GridListTileBar } from '@material-ui/core';\nimport { TextField } from '@material-ui/core';\nimport { ExpansionPanel, ExpansionPanelDetails, ExpansionPanelSummary } from '@material-ui/core';\nimport { Dialog, DialogTitle, DialogContent} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Slide from '@material-ui/core/Slide';\nimport './Dashboard.css'\n\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\n\nexport class Dashboard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isgameSelect: false,\n            isAddGame: false,\n            addGames: [],\n            challenges: [],\n            gameList: [],\n            games: [],\n            matches: [],\n            tournamentMatches: [],\n            game_id: '',\n            game_requirement: '',\n            contact_string: ''\n        }\n    }\n    componentDidMount() {\n        document.body.classList.remove('body-a')\n        this.load()\n    }\n\n    handleChange = name => e => {\n        this.setState({\n            [name]: e.target.value\n        })\n    }\n    load = async () => {\n        const res = await JsonQueryAuth('POST', 'dashboard/', {});\n        let { gamePocket, gameList, challenges, matches, feeds } = res;\n        challenges = challenges.map(ch => {\n            return {\n                _id: ch._id,\n                opponent: ch.challenger._id === getCookie('logauti') ? ch.challenged : ch.challenger,\n                game: ch.game,\n                bet: ch.balance,\n                isChallenger: ch.challenger._id === getCookie('logauti')\n            }\n        });\n        matches = matches.map(ch => {\n            return {\n                _id: ch._id,\n                opponent: ch.challenger._id === getCookie('logauti') ? ch.challenged : ch.challenger,\n                game: ch.game,\n                bet: ch.balance,\n                isTournament: ch.is_tournament\n            }\n        });\n        this.setState({\n            challenges: challenges,\n            matches: matches.filter(m => !m.isTournament),\n            tournamentMatches: matches.filter(m => m.isTournament),\n            games: gamePocket,\n            gameList: gameList\n        });\n        console.log(this.state.games);\n    }\n    toggleAddGame = () => {\n        this.setState({\n            isAddGame: !this.state.isAddGame,\n            isgameSelect: true,\n        })\n    }\n    gameSelect = (id, r) => e => {\n        this.setState({\n            isgameSelect: false,\n            game_id: id,\n            game_requirement: r\n        })\n    }\n    addGameSubmit = async e =>{\n        e.preventDefault()\n        const { game_id, contact_string } = this.state\n        const res = await JsonQueryAuth('post', 'dashboard/game/add', { game_id, contact_string})\n        if(res.errors) {\n            //console.log(res.errors)\n        }else if(res.status === 'ok') {\n            //alert('game added succenssfully')\n            this.toggleAddGame()\n            this.load()\n        }else if(res.status === 'fail') {\n            alert(res.msg);\n        }\n    }\n    \n\n    render() {\n        let content;\n        if (this.state.isgameSelect) {\n            content = (<GridList cellHeight={200} style={MainStyles.gridList}>\n                {this.state.gameList.map(g => (\n                    <GridListTile key={g._id}\n                        cols={window.innerWidth < 600 ? 2 : 1}\n                        onClick={this.gameSelect(g._id, g.requirement)}>\n                        <img src={`${HostAddress}gameimg/${g.image}`} alt={'data.name'} />\n                        <GridListTileBar\n                            title={g.name}\n                            subtitle={<span>Platform: {g.platform === 0 ? 'mobile' : 'PC'}</span>}\n                        />\n                    </GridListTile>\n                ))\n                }\n            </GridList>)\n        } else {\n            content = (\n                <form onSubmit={this.addGameSubmit}>\n                    <div>\n                        <TextField\n                            autoComplete=\"off\"\n                            id=\"outlined-search\"\n                            label={this.state.game_requirement}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            onChange={this.handleChange('contact_string')}\n                            style={{ width: window.innerWidth < 600 ? 'auto' : 400 }}\n                        />\n                    </div>\n                    <Button style={{color: '#157'}} type='submit'>\n                        add Game\n                    </Button>\n                </form>\n            )\n        }\n\n        return (\n            <MuiThemeProvider theme={myTheme}>\n            <div className='Dashboard Page'>\n                <Navigation active='dashboard' load={this.load} />\n                <section className='ContainerCenter'>\n                    <ExpansionPanel style={MainStyles.expansion} defaultExpanded>\n                        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon style={MainStyles.header} />}>\n                            <Typography style={MainStyles.header}><i className=\"fas fa-puzzle-piece\"></i> Challenges</Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails >\n                            <Grid container spacing={16}>\n                                {this.state.challenges.map(clng => <ChallengeCard key={clng._id}\n                                    bet={clng.bet}\n                                    game={clng.game}\n                                    opponent={clng.opponent}\n                                    isChallenger={clng.isChallenger}\n                                    id={clng._id}\n                                    load={this.load}\n                                />)}\n                            </Grid>\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                    <ExpansionPanel style={MainStyles.expansion} defaultExpanded>\n                        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon style={MainStyles.header} />}>\n                            <Typography style={MainStyles.header}><i className=\"fas fa-gamepad\"></i> Challenge Matches</Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails>\n                            <Grid container spacing={16}>\n                                {this.state.matches.map(m => <MatchCard key={m._id}\n                                    bet={m.bet}\n                                    game={m.game}\n                                    opponent={m.opponent}\n                                    id={m._id}\n                                    history={this.props.history}\n                                />)}\n                            </Grid>\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                    <ExpansionPanel style={MainStyles.expansion} defaultExpanded>\n                        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon style={MainStyles.header} />}>\n                            <Typography style={MainStyles.header}><i className=\"fas fa-gamepad\"></i> Tournament Matches</Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails>\n                            <Grid container spacing={16}>\n                                {this.state.tournamentMatches.map(m => <MatchCard key={m._id}\n                                    bet={m.bet}\n                                    game={m.game}\n                                    opponent={m.opponent}\n                                    image={m.image}\n                                    id={m._id}\n                                    image={m.image}\n                                    history={this.props.history}\n                                />)}\n                            </Grid>\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                    <ExpansionPanel style={MainStyles.expansion} defaultExpanded>\n                        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon style={MainStyles.header} />}>\n                            <Typography style={MainStyles.header}><i className=\"fas fa-dice\"></i> Game Librery</Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails>\n                            <Grid container spacing={16}>\n                                {this.state.games.map(game => <GameCard key={game._id} game={game} load={this.load} />)}\n                                <Grid item xs={12}>\n                                    <Button style={{ ...MainStyles.header, width: '100%' }} onClick={this.toggleAddGame}>\n                                        Add game\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                    <ExpansionPanel style={MainStyles.expansion} defaultExpanded>\n                        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon style={MainStyles.header} />}>\n                            <Typography style={MainStyles.header}><i className=\"fab fa-pushed\"></i> Feeds</Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails>\n                            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\n                            sit amet blandit leo lobortis eget.\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                </section>\n                <Dialog\n                    open={this.state.isAddGame}\n                    onClose={this.toggleAddGame}\n                    TransitionComponent={Transition}\n                    keepMounted>\n                    <DialogTitle>Games</DialogTitle>\n                    <DialogContent>\n                        <div>\n                            {content}\n                        </div>\n                    </DialogContent>\n                </Dialog>\n            </div>\n            </MuiThemeProvider>\n        );\n    }\n};","import React, { Component } from 'react';\n\nimport { JsonQueryAuth } from '../Services/Query'\n\nimport { Table, TableHead, TableBody, TableCell, TableRow, TablePagination } from '@material-ui/core';\n\n\nexport class MatchTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            columns: ['OPPONENT', 'GAME', 'BET', 'STATUS'],\n            page: 0,\n            rowsPerPage: 10,\n        }\n    }\n    componentDidMount() {\n        this.load()\n    }\n\n    load = async () => {\n        const res = await JsonQueryAuth('post','log', {})\n        console.log(res)\n        if(res.status === 'ok') {\n            this.setState({\n                data : res.match_results\n            })\n        }\n\n    }\n    handleChangePage = (event, page) => {\n        this.setState({ page });\n    };\n\n    handleChangeRowsPerPage = event => {\n        this.setState({ rowsPerPage: event.target.value });\n    };\n    render() {\n        return (\n            <React.Fragment>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            {this.state.columns.map(column =>\n                                <TableCell key={column}>\n                                    {column}\n                                </TableCell>\n                            )}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {this.state.data ? this.state.data\n                        .slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage)\n                        .map(row =>\n                            <TableRow key={row.id}>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {row.opponent.full_name}\n                                </TableCell>\n                                <TableCell>{row.game_name}</TableCell>\n                                <TableCell>{row.bet}</TableCell>\n                                <TableCell>{row.status > 0 ? <span style={{ color: 'GREEN' }}>WON</span> : <span style={{ color: 'red' }}>LOST</span>}</TableCell>\n                            </TableRow>\n                        ) : {}}\n                    </TableBody>\n                </Table>\n                <TablePagination\n                    rowsPerPageOptions={[5,10,20]}\n                    component=\"div\"\n                    count={this.state.data.length}\n                    rowsPerPage={this.state.rowsPerPage}\n                    page={this.state.page}\n                    backIconButtonProps={{\n                        'aria-label': 'Previous Page',\n                    }}\n                    nextIconButtonProps={{\n                        'aria-label': 'Next Page',\n                    }}\n                    onChangePage={this.handleChangePage}\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                />\n            </React.Fragment>\n        )\n    }\n}\n\n\nexport class WalletTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            transaction_log : [],\n            columns: ['BP', 'Date', 'Status'],\n            page: 0,\n            rowsPerPage: 10,\n        }\n    }\n\n    componentDidMount() {\n        this.load()\n    }\n\n    load = async () => {\n        const res = await JsonQueryAuth('post','wallet', {})\n        console.log(res)\n        if(res.status === 'ok') {\n            this.setState({\n                transaction_log : res.transaction_log\n            })\n        }\n\n    }\n\n    handleChangePage = (event, page) => {\n        this.setState({ page });\n    };\n\n    handleChangeRowsPerPage = event => {\n        this.setState({ rowsPerPage: event.target.value });\n    };\n    render() {\n        return (\n            <React.Fragment>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            {this.state.columns.map(column =>\n                                <TableCell key={column}>\n                                    {column}\n                                </TableCell>\n                            )}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {this.state.transaction_log ? this.state.transaction_log\n                        .slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage)\n                        .map(row =>\n                            <TableRow key={row._id}>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {row.bp}\n                                </TableCell>\n                                <TableCell>{row.date}</TableCell>\n                                <TableCell>{row.mode > 0 ? <span style={{ color: 'GREEN' }}>{row.text}</span> : <span style={{ color: 'red' }}>{row.text}</span>}</TableCell>\n                            </TableRow>\n                        ) : {}}\n                    </TableBody>\n                </Table>\n                <TablePagination\n                    rowsPerPageOptions={[5,10,20]}\n                    component=\"div\"\n                    count={this.state.transaction_log ? this.state.transaction_log.length : 0}\n                    rowsPerPage={this.state.rowsPerPage}\n                    page={this.state.page}\n                    backIconButtonProps={{\n                        'aria-label': 'Previous Page',\n                    }}\n                    nextIconButtonProps={{\n                        'aria-label': 'Next Page',\n                    }}\n                    onChangePage={this.handleChangePage}\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                />\n            </React.Fragment>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { myTheme, ColorPalate } from '../Components/MainStyles';\nimport { MuiThemeProvider } from '@material-ui/core'\n\nimport { Navigation } from '../Components/Navigation';\nimport { MatchTable } from '../Components/DataTable';\n\nimport { Paper } from '@material-ui/core';\n\nexport class History extends Component {\n\n    render() {\n        return (\n            <MuiThemeProvider theme={myTheme}>\n            <div className='History Page'>\n                <Navigation active='history' />\n                <section className='ContainerCenter'>\n                    <Paper className='Block'>\n                        <h1 style={{color: ColorPalate.green}}><i className=\"fas fa-chart-bar\"></i> History Log</h1>\n                        <div style={{ width: '100%', overflowX: 'scroll' }}>\n                            <MatchTable />\n                        </div>\n\n                    </Paper>\n                </section>\n            </div>\n            </MuiThemeProvider>\n        )\n    }\n}","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom'\nimport { MainStyles, ColorPalate, myTheme } from '../Components/MainStyles';\nimport { MuiThemeProvider } from '@material-ui/core'\n\nimport { JsonQueryAuth, HostAddress } from '../Services/Query'\n\nimport { Navigation } from '../Components/Navigation';\n\nimport { Grid } from '@material-ui/core'\nimport { List, ListItem, ListItemText, Avatar, ListSubheader } from '@material-ui/core'\n\n\nexport class Leaderboard extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            champions: [],\n            achieves: {}\n        }\n    }\n    componentDidMount() {\n        this.load()\n    }\n    load = async () => {\n        const res = await JsonQueryAuth('post', 'leaderboard', {})\n        const { champions, achieves } = res\n        this.setState({\n            champions, achieves\n        })\n    }\n    render() {\n        return (\n            <MuiThemeProvider theme={myTheme}>\n            <div className='Leaderboard Page'>\n                <Navigation active='leaderboard' load={this.load}/>\n                <section className='ContainerCenter'>\n                    <Grid container>\n                        <List  style={{ ...MainStyles.paper, width: '100%', margin: '20px' }}\n                    subheader={<ListSubheader component=\"div\" style={{ color: ColorPalate.greenLight }}>Top Rankings</ListSubheader>}\n                >\n                            {\n                                this.state.champions.map(champ => (\n                                    <Link to={`/profileOther/${champ._id}`} key={champ._id} style={{ textDecoration: 'none', color: ColorPalate.greenLight }}>\n                                    <ListItem button>\n                                        <Avatar\n                                            alt=\"Remy Sharp\"\n                                            src={`${HostAddress}${champ.img}`}\n                                            style={{ width: 50, height: 50 }} />\n                                        <ListItemText\n                                            primary={<span style={{ color: ColorPalate.green, fontSize: '1.4rem' }}>RANK {champ.rank} | {champ.full_name}</span>}\n                                            secondary={<span style={{ color: ColorPalate.greenLight, fontSize: '1.2rem' }}> ({champ.leader_point} bp)</span>} />\n                                    </ListItem>\n                                    </Link>\n                                ))\n                            }\n\n                        </List>\n\n                    </Grid>\n                </section>\n            </div>\n            </MuiThemeProvider>\n        );\n    }\n};","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport { MainStyles, ColorPalate, myTheme } from '../Components/MainStyles';\n\nimport { JsonQueryAuth, PostQueryAuth, HostAddress, getCookie } from '../Services/Query'\nimport openSocket from 'socket.io-client';\n\nimport { Grid, Paper } from '@material-ui/core'\nimport { TextField, Button, Fab } from '@material-ui/core'\nimport { Card, CardActionArea, CardMedia, CardContent } from '@material-ui/core'\nimport { List, ListItem, ListItemText, Avatar } from '@material-ui/core'\nimport { Dialog, DialogTitle, DialogContent, DialogActions, DialogContentText } from '@material-ui/core';\nimport { MuiThemeProvider } from '@material-ui/core'\n\nconst socket = openSocket(HostAddress);\n\nfunction LoadChats(chat_id, cb) {\n    const responseUrl = \"msgcame\" + chat_id;\n    socket.on(responseUrl, data => {\n        cb(data)\n    })\n}\n\nexport class Match extends Component {\n    constructor(props) {\n        super(props)\n        const urlFragments = window.location.href.split('/');\n        const match_id = urlFragments[urlFragments.length - 1];\n        this.state = {\n            match_id: match_id,\n            bet: '',\n            challenger: {},\n            challenged: {},\n            game: {},\n            time: '',\n            sender: '',\n            state: '',\n            chat_id: '',\n            contact_string: '',\n            chatVisible: false,\n            is_c : 0,\n            isAdmitDefeat : false,\n            isClaimVectory : false,\n            image:''\n        }\n    }\n    componentDidMount() {\n        this.load()\n    }\n    load = async e => {\n        \n        const res = await JsonQueryAuth('post', `match/m/${this.state.match_id}`, {})\n        if (res.status === 'ok') {\n            const { game, challenger, challenged, chat_id, sender, contact_string, time, bet,image } = res;\n            const myId = getCookie('logauti')\n            let is_c = 0\n            if(myId === challenger._id) is_c = 1;\n            this.setState({\n                game, challenger, challenged, chat_id, sender, contact_string, time, bet, is_c, chatVisible: true,image\n            });\n        }\n    }\n    toggleAdmitDefeat = () => {\n        this.setState({\n            isAdmitDefeat : !this.state.isAdmitDefeat\n        })\n    }\n    toggleClaimVictory = () => {\n        this.setState({\n            isClaimVectory : !this.state.isClaimVectory\n        })\n    }\n    claimVictory = async e => {\n        e.preventDefault()\n        const imageFile = e.target.files[0]\n        let x = imageFile.name.split('.');\n        x = x[x.length - 1]\n        let fd = new FormData()\n        fd.append('image', imageFile, `${this.state.match_id}.${x}`)\n        fd.append('m_id', this.state.match_id)\n        fd.append('is_c', this.state.is_c)\n        const res = await PostQueryAuth('match/claimVectory', fd)\n        if (res.status === 'ok') {\n            this.toggleClaimVictory();\n            alert(\"victory claimed successfully\");\n        }\n    }\n    admitDefeat = async () => {\n        const data = {\n            m_id : this.state.match_id,\n            is_c : this.state.is_c\n        }\n        const res = await JsonQueryAuth('post', 'match/admitDefeat', data)\n        if(res.status === 'ok') {\n            this.props.history.push('/dashboard')\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <MuiThemeProvider theme={myTheme}>\n                    <div className='Match Page'>\n                        <Grid container justify='center' alignItems='center' >\n                            <Grid item xs={12} md={4} container justify='center' alignItems='center' >\n                                <Card style={{ width: '100%', margin: '20px' }}>\n                                    <CardActionArea>\n                                        <CardMedia\n                                            style={{ height: 200 }}\n                                            image={(this.state.image && this.state.image!='') ? `${HostAddress}tournamentimg/${this.state.image}`:`${HostAddress}gameimg/${this.state.game.image}`}\n                                            title={this.state.game.name}\n                                        />\n                                        <CardContent style={{ ...MainStyles.paper, color: ColorPalate.greenLight }}>\n                                            <h2>{this.state.game.name}</h2>\n                                        </CardContent>\n                                    </CardActionArea>\n                                </Card>\n                                <List style={{ ...MainStyles.paper, width: '100%', margin: '20px' }}>\n                                    <ListItem button >\n                                        <ListItemText\n                                            primary={<span style={{ color: ColorPalate.green, fontSize: '1.4rem' }}> Match Id </span>}\n                                            secondary={<span style={{ color: ColorPalate.greenLight, fontSize: '1.2rem' }}> {this.state.match_id}</span>} />\n                                    </ListItem>\n                                    <ListItem button >\n                                        <ListItemText\n                                            primary={<span style={{ color: ColorPalate.green, fontSize: '1.4rem' }}> Opponent's  Contact</span>}\n                                            secondary={<span style={{ color: ColorPalate.greenLight, fontSize: '1.2rem' }}> {this.state.contact_string} </span>} />\n                                    </ListItem>\n                                    <Link to={`/profileOther/${this.state.challenged._id}`} style={{ textDecoration: 'none', color: ColorPalate.greenLight }}>\n                                    <ListItem button>\n                                        <Avatar\n                                            alt=\"Remy Sharp\"\n                                            src={`${HostAddress}user/${this.state.challenger.folder}/${this.state.challenger.image}`}\n                                            style={{ width: 50, height: 50 }} />\n                                        <ListItemText\n                                            primary={<span style={{ color: ColorPalate.green, fontSize: '1.4rem' }}> Challenger </span>}\n                                            secondary={<span style={{ color: ColorPalate.greenLight, fontSize: '1.2rem' }}> {this.state.challenger.full_name} </span>} />\n                                    </ListItem>\n                                    </Link>\n                                    <Link to={`/profileOther/${this.state.challenged._id}`} style={{ textDecoration: 'none', color: ColorPalate.greenLight }}>\n                                    <ListItem button>\n                                        <Avatar\n                                            alt=\"Remy Sharp\"\n                                            src={`${HostAddress}user/${this.state.challenged.folder}/${this.state.challenged.image}`}\n                                            style={{ width: 50, height: 50 }} />\n                                        <ListItemText\n                                            primary={<span style={{ color: ColorPalate.green, fontSize: '1.4rem' }}> challenged </span>}\n                                            secondary={<span style={{ color: ColorPalate.greenLight, fontSize: '1.2rem' }}> {this.state.challenged.full_name} </span>} />\n                                    </ListItem>\n                                    </Link>\n                                    <ListItem button>\n                                        <ListItemText\n                                            primary={<span style={{ color: ColorPalate.green, fontSize: '1.4rem' }}> bet </span>}\n                                            secondary={<span style={{ color: ColorPalate.greenLight, fontSize: '1.2rem' }}>{this.state.bet}  BP</span>} />\n                                    </ListItem>\n                                </List>\n                            </Grid>\n                            <Grid item xs={12} md={8} style={{ padding: 20 }}>\n                                <Paper style={{ ...MainStyles.paper, padding: 16 }}>\n                                    <h2 style={{ color: ColorPalate.green }}>Evaluation</h2>\n                                    <Button variant='outlined'  onClick={this.toggleClaimVictory} style={{ width: '40%', margin: '2.5%', padding: 16, color: ColorPalate.greenLight }}>Clain Victory</Button>\n                                    <Button variant='outlined' onClick={this.toggleAdmitDefeat} style={{ width: '40%', margin: '2.5%', padding: 16, color: ColorPalate.greenLight }}>Admit Defeat</Button>\n                                </Paper>\n                                <Paper style={{ ...MainStyles.paper, padding: 16, height: '60vh', marginTop: 20 }}>\n                                    <h2 style={{ color: ColorPalate.green }}>Chat</h2>{\n                                        this.state.chatVisible ?\n                                            <ChatBox chat_id={this.state.chat_id} chat_id={this.state.chat_id} sender={this.state.sender} />\n                                            : ''}\n                                </Paper>\n                            </Grid>\n                        </Grid>\n                    </div>\n                    <Dialog\n                        open={this.state.isClaimVectory}\n                        onClose={this.toggleClaimVictory}\n                        keepMounted>\n                        <DialogTitle>UPLOAD SCREENSHOT</DialogTitle>\n                        <DialogContent>\n                            <div>\n                                <form encType=\"multipart/form-data\">\n                                    <Button style={{ margin: '1vw', width: '90%' }}>\n                                        <input type='file'\n                                            style={{ width: '100%', opacity: 0, position: 'absolute' }}\n                                            onChange={this.claimVictory} />\n                                        <span><i className=\"fas fa-upload\"></i> upload screenShot</span>\n                                    </Button>\n                                </form>\n                            </div>\n                        </DialogContent>\n                    </Dialog>\n                    <Dialog open={this.state.isAdmitDefeat} onClose={this.toggleAdmitDefeat} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\">ADMIT DEFEAT</DialogTitle>\n                        <DialogContent>\n                        <DialogContentText>\n                            Do you really want to admit defeat?\n                        </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                        <Button onClick={this.admitDefeat} color='primary'>\n                            Ok\n                        </Button>\n                        <Button onClick={this.toggleAdmitDefeat} color='secondary'>\n                            Cancel\n                        </Button>\n                        </DialogActions>\n                    </Dialog>\n                </MuiThemeProvider>\n            </React.Fragment>\n        )\n    }\n}\n\nclass ChatBox extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            chat_id: this.props.chat_id,\n            messages: [],\n            message: ''\n        }\n        this.chatbox = React.createRef()\n    }\n\n    componentDidMount() {\n        this.load();\n    }\n    handleChange = name => e => {\n        this.setState({\n            [name]: e.target.value\n        })\n    }\n    load = async () => {\n        LoadChats(this.state.chat_id, (data) => {\n            this.setState({\n                messages: data.chat.log\n            })\n            const chatbox = this.chatbox.current\n            if(chatbox !== null && chatbox !== undefined)\n            chatbox.scrollTop = chatbox.scrollHeight\n        })\n        socket.emit('chatResponse', {\n            chatId: this.state.chat_id\n        })\n    }\n    sendMsg = async e => {\n        e.preventDefault();\n        if (this.state.message.length > 0) {\n            socket.emit('chatRequest', {\n                chatId: this.props.chat_id,\n                col: 1,\n                sender: this.props.sender,\n                text: this.state.message\n            })\n            this.setState({\n                message: ''\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Grid container>\n                    <Grid item xs={12}>\n                        <div ref={this.chatbox} style={{width: '100%', height: '40vh',overflowY: 'scroll', overflowX:'hidden'}}>\n                        <div>\n                        {this.state.messages.map(msg => {\n\n                                return (\n                                    <div key={msg._id} style={{margin: 10, display:'flex', width:'100%'\n                                     }}>\n                                     <div style={this.props.sender === msg.name._id? {width: '10%'} : {}}></div>\n                                        <Avatar\n                                            alt=\"Remy Sharp\"\n                                            src={`${HostAddress}user/${msg.name.folder}/${msg.name.image}`}\n                                            style={{ width: 50, height: 50 }} />\n                                        <div className='msgBubble' style={{width:'80%'}}>\n                                            <h4 style={{}}>{msg.name.full_name}</h4>\n                                            <h5 style={{}}>{msg.text}</h5>\n                                        </div>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                        </div>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <form onSubmit={this.sendMsg} className='kami'>\n                            <TextField className='kal' style={{ width: window.innerWidth < 600 ? '76%' : '84%' }}\n                                label='message'\n                                margin='dense'\n                                value={this.state.message}\n                                onChange={this.handleChange('message')}\n                                helperText={'write message'}\n\n                            />\n                            <Fab type='submit' style={{ fontSize: 24, color: ColorPalate.greenLight, backgroundColor: '#444' }}>\n                                <i className=\"fas fa-paper-plane\"></i>\n                            </Fab>\n                        </form>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n\n}","import React, { Component } from 'react';\nimport { MainStyles, ColorPalate, myTheme } from '../Components/MainStyles';\nimport { MuiThemeProvider } from '@material-ui/core'\nimport {  GameCard } from '../Components/Cards';\n\nimport { JsonQueryAuth, HostAddress, PostQueryAuth } from '../Services/Query'\n\nimport { Navigation } from '../Components/Navigation';\n\nimport { Paper, Grid, LinearProgress, TextField } from '@material-ui/core';\nimport { Card, CardMedia, CardActionArea, CardContent, CardActions, Typography, Button, Divider, CircularProgress } from '@material-ui/core';\nimport { Dialog, DialogTitle, DialogContent} from '@material-ui/core';\n\nexport class Profile extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isDataAvailable: false,\n            user: '',\n            image: require('../img/default.jpg'),\n            name: '',\n            match: {},\n            level: {},\n            isChangePassword : false,\n            password : '',\n            new_password: '',\n            msg_password : '',\n            msg_new_password: '',\n            games:[]\n        }\n    }\n    handleChange = name => e => {\n        this.setState({\n            [name]: e.target.value\n        })\n    } \n\n    componentDidMount() {\n        this.load()\n    }\n    load = async e => {\n        const res = await JsonQueryAuth('post', 'profile', {});\n        if (res.status === 'ok') {\n            this.setState({\n                isDataAvailable: true,\n                user: res.user,\n                name: res.user.full_name,\n                image: `${HostAddress}user/${res.user.folder}/${res.user.image}`,\n                match: res.match,\n                level: res.level\n            });\n            const res1 = await JsonQueryAuth('POST', 'info/getGames', {})\n            this.setState({\n                games: res1\n            });\n        }\n    }\n    toggleChangePassword = () => {\n        this.setState({\n            isChangePassword : !this.state.isChangePassword\n        })\n    }\n    clearMsg = () => {\n        this.setState({\n            msg_password: '',\n            msg_new_password: ''\n        });\n    }\n    changePassword = async e => {\n        e.preventDefault()\n        this.clearMsg()\n        const { password, new_password } = this.state\n        const res = await JsonQueryAuth('post', 'profile/update/password', { password, new_password })\n        if (res.errors) {\n            res.errors.map(err => {\n                const fieldName = 'msg_' + err.param;\n                this.setState({ [fieldName]: err.msg });\n                return err\n            });\n        }\n        if(res.status === 'ok' ) {\n            this.load()\n            this.setState({\n              password : '',\n              new_password: ''  \n            })\n            this.toggleChangePassword()\n        }\n    }\n\n    render() {\n        return (\n            <MuiThemeProvider theme={myTheme}>\n            <div className='Profile Page'>\n                <Navigation active='profile' load={this.load} />\n                <section className='ContainerCenter'>\n                    <Paper className='Block' style={MainStyles.block}>\n                        <h1><i className=\"fas fa-users\"></i> Profile</h1><br />\n                        <Grid container spacing={16}>\n                            <Grid item xs={12} md={3}>\n                                <ProfileCard\n                                    load={this.load}\n                                    image={this.state.image}\n                                    name={this.state.name}\n                                    isJenuine={true} />\n                            </Grid>\n                            <Grid item xs={12} md={9}>\n                                {\n                                    this.state.isDataAvailable ? <InfoCard match={this.state.match} level={this.state.level} user={this.state.user} isJenuine={true}/> : ''\n                                }\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                    <Paper className='Block' style={MainStyles.block}>\n                        <h1><i className=\"fas fa-dice\"></i>Game Library</h1>\n                        <br />\n                        <Grid container spacing={16}>\n                                {this.state.games.map(game => <GameCard key={game._id} game={game} load={this.load} />)} \n                        </Grid>\n                    </Paper>\n                    <Paper className='Block' style={MainStyles.block}>\n                        <h1><i className=\"fas fa-cogs\"></i> Profile Settings</h1>\n                        <br />\n                        <Button style={{color: ColorPalate.green}} onClick={this.toggleChangePassword}>\n                        <i className=\"fas fa-unlock\"></i> change password\n                        </Button>\n                    </Paper>\n                </section>\n                <Dialog\n                    open={this.state.isChangePassword}\n                    onClose={this.toggleChangePassword}\n                    keepMounted>\n                    <DialogTitle>Change password</DialogTitle>\n                    <DialogContent>\n                        <div>\n                            <form onSubmit={this.changePassword}>\n                                {//this.changeImageProgress ? <LinearProgress /> : ''\n                                }\n                                <TextField style={{ margin: '1vw', width: '90%' }}\n                                    label=\"Old Password\"\n                                    margin=\"normal\"\n                                    type='password'\n                                    value={this.state.password}\n                                    onChange={this.handleChange('password')}\n                                    helperText={this.state.msg_password}\n                                    error={this.state.msg_password.length > 0}\n                                />\n                                <TextField style={{ margin: '1vw', width: '90%' }}\n                                    label=\"New Password\"\n                                    margin=\"normal\"\n                                    value={this.state.new_password}\n                                    onChange={this.handleChange('new_password')}\n                                    helperText={this.state.msg_new_password}\n                                    error={this.state.msg_new_password.length > 0}\n                                />\n                                <Button type='submit' variant='outlined' style={{ margin: '1vw', width: '90%' }}>\n                                    <span><i className=\"fas fa-upload\"></i> Change Password</span>\n                                </Button>\n                            </form>\n                        </div>\n                    </DialogContent>\n                </Dialog>\n            </div>\n            </MuiThemeProvider>\n        );\n    }\n};\n\nexport class OtherProfile extends Component {\n    constructor(props) {\n        super(props)\n        const urlFragments = window.location.href.split('/');\n        const user_id = urlFragments[urlFragments.length - 1];\n        this.state = {\n            isDataAvailable: false,\n            user_id : user_id,\n            user: '',\n            image: require('../img/default.jpg'),\n            name: '',\n            match: {},\n            level: {},\n        }\n    }\n\n    componentDidMount() {\n        this.load()\n    }\n    load = async e => {\n        const res = await JsonQueryAuth('post', `profile/${this.state.user_id}`, {});\n        if (res.status === 'ok') {\n            this.setState({\n                isDataAvailable: true,\n                user: res.user,\n                name: res.user.full_name,\n                image: `${HostAddress}user/${res.user.folder}/${res.user.image}`,\n                match: res.match,\n                level: res.level\n            })\n            \n        }\n    }\n\n    render() {\n        return (\n            <div className='Profile Page'>\n                <Navigation active='profile' load={this.load} />\n                <section className='ContainerCenter'>\n                    <Paper className='Block' style={MainStyles.block}>\n                        <h1><i className=\"fas fa-users\"></i> Profile</h1><br />\n                        <Grid container spacing={16}>\n                            <Grid item xs={12} md={3}>\n                                <ProfileCard\n                                    load={this.load}\n                                    image={this.state.image}\n                                    name={this.state.name}\n                                    isJenuine={false} />\n                            </Grid>\n                            <Grid item xs={12} md={9}>\n                                {\n                                    this.state.isDataAvailable ? <InfoCard match={this.state.match} level={this.state.level} user={this.state.user} isJenuine={false}/> : ''\n                                }\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </section>\n            </div>\n        );\n    }\n}\n\nclass ProfileCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isChangeImage: false,\n            isChangeName: false,\n            changeImageProgress: false,\n            cahangeNameProgress: false,\n            newName: '',\n            msg_name: ''\n        }\n    }\n    handleChange = name => e => {\n        this.setState({\n            [name]: e.target.value\n        })\n    }\n    toggleChangeImage = () => {\n        this.setState({\n            isChangeImage: !this.state.isChangeImage\n        })\n    }\n    toggleChangeName = () => {\n        this.setState({\n            isChangeName: !this.state.isChangeName,\n            msg_name: ''\n        })\n    }\n    changeImage = async e => {\n        this.setState({\n            changeImageProgress: true\n        })\n        const imageFile = e.target.files[0]\n        let fd = new FormData()\n        fd.append('image', imageFile, 'image.jpg')\n        const res = await PostQueryAuth('profile/update/image', fd)\n        if (res.status === 'ok') {\n            this.setState({\n                changeImageProgress: false\n            })\n            window.location.reload()\n        }\n    }\n    changeName = async e => {\n        e.preventDefault()\n        this.setState({\n            changeNameProgress: true\n        })\n        const res = await JsonQueryAuth('post','profile/update/name', {name : this.state.newName})\n        if(res.errors) {\n            this.setState({\n                msg_name : res.errors[0].msg\n            })\n        }\n        if (res.status === 'ok') {\n            this.setState({\n                changeNameProgress: false,\n                newName : '',\n                msg_name : ''\n            })\n            this.props.load()\n            this.toggleChangeName()\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Card style={{ background: '#333' }}>\n                    <CardActionArea>\n                        <CardMedia\n                            style={{ height: 200 }}\n                            image={this.props.image}\n                            title={this.props.name}\n                        />\n                        <CardContent style={{ height: 20 }}>\n                            <Typography gutterBottom variant=\"h5\" component=\"h1\" style={{ color: ColorPalate.greenLight, fontSize: '1.2rem' }}>\n                                {this.props.name}\n                            </Typography>\n                        </CardContent>\n                    </CardActionArea>\n                    {this.props.isJenuine ?\n                        <CardActions >\n\n                            <Button size=\"small\"\n                                color=\"primary\"\n                                onClick={this.toggleChangeImage}\n                                style={{ color: ColorPalate.green, fontSize: '0.6rem' }}>\n                                Edit Image\n                    </Button>\n                            <Button size=\"small\"\n                                color=\"primary\"\n                                onClick={this.toggleChangeName}\n                                style={{ color: ColorPalate.green, fontSize: '0.6rem' }}>\n                                Edit Name\n                    </Button>\n                        </CardActions>\n                        : ''\n                    }\n                </Card>\n                <Dialog\n                    open={this.state.isChangeImage}\n                    onClose={this.toggleChangeImage}\n                    keepMounted>\n                    <DialogTitle>Change Image</DialogTitle>\n                    <DialogContent>\n                        <div>\n                            <form encType=\"multipart/form-data\">\n                                {this.changeImageProgress ? <LinearProgress /> : ''}\n                                <Button style={{ margin: '1vw', width: '90%' }}>\n                                    <input type='file'\n                                        style={{ width: '100%', opacity: 0, position: 'absolute' }}\n                                        onChange={this.changeImage} />\n                                    <span><i className=\"fas fa-upload\"></i> Upload new profile Image</span>\n                                </Button>\n                            </form>\n                        </div>\n                    </DialogContent>\n                </Dialog>\n                <Dialog\n                    open={this.state.isChangeName}\n                    onClose={this.toggleChangeName}\n                    keepMounted>\n                    <DialogTitle>Change Name</DialogTitle>\n                    <DialogContent>\n                        <div>\n                            <form onSubmit={this.changeName} encType=\"multipart/form-data\">\n                                {this.cahangeNameProgress ? <LinearProgress /> : ''}\n                                <TextField style={{ margin: '1vw', width: '90%' }}\n                                    label=\"New Name\"\n                                    margin=\"normal\"\n                                    value={this.state.newName}\n                                    onChange={this.handleChange('newName')}\n                                    helperText={this.state.msg_name}\n                                    error={this.state.msg_name.length > 0}\n                                />\n                                <Button type='submit' variant='outlined' style={{ margin: '1vw', width: '90%' }}>\n                                    <span><i className=\"fas fa-upload\"></i> change Name</span>\n                                </Button>\n                            </form>\n                        </div>\n                    </DialogContent>\n                </Dialog>\n            </React.Fragment>\n        );\n    }\n}\n\nconst InfoCard = ({ match, level, user, isJenuine }) => {\n    let Info = {\n        email: user.email,\n        Balance: user.balance,\n        level: level.m_level,\n        leader_points: user.leader_point,\n        next_level: level.m_next,\n        total_winning: user.total_bp_win,\n        total_wins: match.m_win,\n        total_matches: match.m_match\n    }\n    if(!isJenuine)\n        Info = {\n            level: level.m_level,\n        leader_points: user.leader_point,\n        next_level: level.m_next,\n        total_winning: user.total_bp_win,\n        total_wins: match.m_win,\n        total_matches: match.m_match\n        }\n    let Percents = {\n        next_level: level.m_levelExpPercent,\n        win_persentage: match.m_average\n    }\n\n    Info = Object.entries(Info);\n    //Percents = Object.entries(Percents);\n\n    return (\n        <Paper style={{ backgroundColor: '#444', padding: 16, color: ColorPalate.greenLight }}>\n            <Grid container>\n                {Info.map(inf => (\n                    <Grid item container xs={12} key={inf[0]}>\n                        <Grid item xs={12} md={5} style={MainStyles.heading}>{`${inf[0].replace(/_/g, \" \")} :`}</Grid>\n                        <Grid item xs={12} md={7} style={MainStyles.text}>{inf[1]}</Grid>\n                    </Grid>\n                ))}\n                <Divider />\n                <br />\n                <Grid item container xs={12} space={12} justify='center' alignItems='center'>\n                    <Grid item xs={6}>\n                        <CircularProgress thickness={12} className='animated jackInTheBox'\n                            variant=\"static\"\n                            value={Percents.win_persentage}\n                            size='80%'\n                            style={{\n                                color:\n                                    ColorPalate.greenLight\n                            }} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <CircularProgress thickness={16} className='animated jackInTheBox'\n                            variant=\"static\"\n                            value={Percents.next_level}\n                            size='80%' style={{\n                                color:\n                                    ColorPalate.greenLight\n                            }} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <span>win: {Percents.win_persentage}%</span>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <span>next level: {Percents.next_level}%</span>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n}\n","import React, { Component } from 'react';\nimport { MainStyles, ColorPalate, myTheme } from '../Components/MainStyles';\nimport { MuiThemeProvider } from '@material-ui/core'\n\nimport { JsonQueryAuth, HostAddress } from '../Services/Query'\nimport { Navigation } from '../Components/Navigation';\nimport { TournamentCard } from '../Components/Cards';\n\nimport SwipeableViews from 'react-swipeable-views';\nimport { Grid, Typography } from '@material-ui/core';\nimport { Paper, Card, CardMedia, CardContent, CardActionArea } from '@material-ui/core';\nimport { Tab, Tabs, AppBar } from '@material-ui/core';\nimport { Avatar } from '@material-ui/core';\nimport { List, ListItem, ListSubheader, } from '@material-ui/core';\nimport { ExpansionPanel, ExpansionPanelDetails, ExpansionPanelSummary } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nexport class Tournament extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isInTournament: false,\n            tournament_id: ''\n        }\n    }\n    enterTournament = id => {\n        this.setState({\n            isInTournament: true,\n            tournament_id: id\n        })\n    }\n    load = () => {\n        //do nothing\n    }\n    render() {\n        return (\n            <MuiThemeProvider theme={myTheme}>\n            <div className='Tournament Page'>\n                <Navigation active='tournament' load={this.load} />\n                <section className='ContainerCenter'>\n                    {\n                        this.state.isInTournament ? <TournamentInSide tournament_id={this.state.tournament_id} /> :\n                            <TournamentOutSide enterTournament={this.enterTournament} />\n                    }\n                </section>\n            </div>\n            </MuiThemeProvider>\n        )\n    }\n}\n\nclass TournamentOutSide extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            not_participating: [],\n            participating: []\n        }\n    }\n    componentDidMount() {\n        this.load()\n    }\n    load = async () => {\n        const res = await JsonQueryAuth('post', 'tournament', {})\n        this.setState({\n            not_participating: res.tournaments.not_participating,\n            participating: res.tournaments.participating\n        })\n        \n    }\n    render() {\n        return (\n            <React.Fragment>\n                <ExpansionPanel style={MainStyles.expansion} defaultExpanded>\n                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon style={MainStyles.header} />}>\n                        <Typography style={MainStyles.header}><i className=\"fas fa-puzzle-piece\"></i> Participating tournaments</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails >\n                        <Grid container spacing={16}>\n                            {\n                                this.state.participating.map(tour => <TournamentCard key={tour._id}\n                                    isParticipating={true}\n                                    player_count={tour.player_count}\n                                    load={this.load}\n                                    game={tour.game}\n                                    image={tour.image}\n                                    current_available={tour.players.length}\n                                    entry_fee={tour.entry_fee}\n                                    custom_fields={tour.custom_fields}\n                                    prize={tour.balance}\n                                    enterTournament={this.props.enterTournament}\n                                    tournament_id={tour._id} />)\n                            }\n                        </Grid>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n                <ExpansionPanel style={MainStyles.expansion} defaultExpanded>\n                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon style={MainStyles.header} />}>\n                        <Typography style={MainStyles.header}><i className=\"fas fa-gamepad\"></i> New Tournaments</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <Grid container spacing={16}>\n                            {\n                                this.state.not_participating.map(tour => <TournamentCard key={tour._id}\n                                    isParticipating={false}\n                                    player_count={tour.player_count}\n                                    image={tour.image}\n                                    load={this.load}\n                                    game={tour.game}\n                                    current_available={tour.players.length}\n                                    entry_fee={tour.entry_fee}\n                                    custom_fields={tour.custom_fields}\n                                    prize={tour.balance}\n                                    enterTournament={this.props.enterTournament}\n                                    tournament_id={tour._id} />)\n                            }\n                        </Grid>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n            </React.Fragment>\n        )\n    }\n}\n\nclass TournamentInSide extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            tournament_id: this.props.tournament_id,\n            game: {},\n            players: [],\n            prize1: '',\n            prize2: '',\n            bet: '',\n            rules: [],\n            capacity: '',\n            tabId: 0,\n            image:'',\n            custom_fields:[]\n        }\n    }\n    componentDidMount() {\n        this.load()\n    }\n    load = async () => {\n        const res = await JsonQueryAuth('post', `tournament/${this.state.tournament_id}`, {})\n        if (res.status = 'ok') {\n            const { game, players, prize1, prize2, bet, capacity,image} = res\n            let rules = res.rules.split('\\n')\n            this.setState({\n                game, players, prize1, prize2, bet, capacity, rules,image\n            });\n            if(res.custom_fields) {\n                try {\n                    let custom_fields = JSON.parse(res.custom_fields);\n                    this.setState({custom_fields:custom_fields});\n                } catch(e) {\n                }  \n            }\n        }\n    }\n    changeTab = (event, value) => {\n        this.setState({ tabId: value })\n    }\n    handleChangeIndex = (index) => {\n        // if(index >= 0 && index <= 1)\n        this.setState({ tabId: index })\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <Grid container justify='center' alignItems='center' >\n                    <Grid item xs={12} md={4} container justify='center' alignItems='center' >\n                        <Card style={{ width: '100%', margin: '20px' }}>\n                            <CardActionArea>\n                                <CardMedia\n                                    style={{ height: 200 }}\n                                    image={(this.state.image && this.state.image!='') ? `${HostAddress}tournamentimg/${this.state.image}`:`${HostAddress}gameimg/${this.state.game.image}`}\n                                    title={this.state.game.name}\n                                />\n                                <CardContent style={{ ...MainStyles.paper, color: ColorPalate.greenLight }}>\n                                    <h2>{this.state.game.name}</h2>\n                                </CardContent>\n                            </CardActionArea>\n                        </Card>\n                        <TournamentPlayers players={this.state.players} />\n                    </Grid>\n                    <Grid item xs={12} md={8} style={{ padding: 20 }}>\n                        <Paper style={{ ...MainStyles.paper }}>\n                            <AppBar position=\"static\" style={{ backgroundColor: '#444' }}>\n                                <Tabs value={this.state.tabId} onChange={this.changeTab} indicatorColor='primary' textColor='primary'>\n                                    <Tab value={0} label=\"INFO\" style={{ color: this.state.tabId === 0 ? ColorPalate.greenLight : ColorPalate.green }} />\n                                    <Tab value={1} label=\"RULES\" style={{ color: this.state.tabId === 1 ? ColorPalate.greenLight : ColorPalate.green }} />\n                                    \n                                    {this.state.custom_fields.map((custom,index) => \n                                        <Tab key={custom.field_id} value={index + 2} label={custom.label_name} style={{ color: this.state.tabId === custom.field_id ? ColorPalate.greenLight : ColorPalate.green }} />\n                                    )}\n                                </Tabs>\n                            </AppBar>\n                            <SwipeableViews\n                                index={this.state.tabId}\n                                onChangeIndex={this.handleChangeIndex}\n                            >\n                            <Grid container style={{padding: 8}}>\n                                <Grid item xs={12} md={5} style={{color: ColorPalate.greenLight}}>Tournament Id</Grid>\n                                <Grid item xs={12} md={7} style={{color: ColorPalate.green}}>{this.state.tournament_id}</Grid>\n                                <Grid item xs={12} md={5} style={{color: ColorPalate.greenLight}}>Entry Fee</Grid>\n                                <Grid item xs={12} md={7} style={{color: ColorPalate.green}}>{this.state.bet} bp</Grid>\n                                <Grid item xs={12} md={5} style={{color: ColorPalate.greenLight}}>First Prize</Grid>\n                                <Grid item xs={12} md={7} style={{color: ColorPalate.green}}>{this.state.prize1} bp</Grid>\n                                <Grid item xs={12} md={5} style={{color: ColorPalate.greenLight}}>Second Prize</Grid>\n                                <Grid item xs={12} md={7} style={{color: ColorPalate.green}}>{this.state.prize2} bp</Grid>\n                                <Grid item xs={12} md={5} style={{color: ColorPalate.greenLight}}>Tournament Capacity</Grid>\n                                <Grid item xs={12} md={7} style={{color: ColorPalate.green}}>{this.state.capacity}</Grid>\n                                <Grid item xs={12} md={5} style={{color: ColorPalate.greenLight}}>Joined players</Grid>\n                                <Grid item xs={12} md={7} style={{color: ColorPalate.green}}>{this.state.players.length}</Grid>\n                            </Grid>\n                            <div style={{color: ColorPalate.green, padding: 8}}>\n                            {this.state.rules.map( (r, i) => (<div key={i}>{r}</div>))}\n                            </div>\n                            {this.state.custom_fields.map((custom,index) => \n                                <div style={{color: ColorPalate.green, padding: 8}}>\n                                {custom.field_value}\n                                </div>\n                             )}\n                               \n                            </SwipeableViews>\n                        </Paper>\n                        <Paper style={{\n                            ...MainStyles.paper, padding: 16, height: '60vh',\n                            marginTop: 20, overflowX: 'auto',\n                            display: 'flex', justifyContent: 'center', alignItems: 'center'\n                        }}>\n                        {this.state.capacity > 0 && this.state.capacity <= this.state.players.length &&\n                            <TournamentBracket tournament_id={this.props.tournament_id} />\n                        }\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </React.Fragment>\n        )\n    }\n}\n\n\nclass TournamentBracket extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            bracket: [],\n            rounds: []\n        }\n    }\n    componentDidMount() {\n        this.load()\n    }\n    load = async () => {\n        const res = await JsonQueryAuth('post', `tournament/bracket/${this.props.tournament_id}`, {})\n        this.setState({\n            bracket: res.bracket.tree,\n            rounds: res.bracket.rounds\n        })\n        window.$(\"#tournamentBracket\").brackets({\n            titles: this.state.rounds,\n            rounds: this.state.bracket,\n            color_title: 'white',\n            border_color: '#666',\n            color_player: 'red',\n            bg_player: '#666',\n            color_player_hover: 'white',\n            bg_player_hover: ColorPalate.green,\n            border_radius_player: '2px',\n            border_radius_lines: '4px',\n        });\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <div id='tournamentBracket'></div>\n            </React.Fragment>\n        );\n    }\n}\n\nclass TournamentPlayers extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <List style={{ ...MainStyles.paper, width: '100%', margin: '20px' }}\n                    subheader={<ListSubheader component=\"div\" style={{ color: ColorPalate.greenLight }}>Perticipating players</ListSubheader>}\n                >\n                    {this.props.players.map(player => (\n                        <ListItem button key={player._id}>\n                            <div style={{ display: 'flex', alignItems: 'center' }}>\n                                <Avatar\n                                    alt={player.full_name}\n                                    src={`${HostAddress}user/${player.folder}/${player.image}`}\n                                />\n                                <span style={{ textAlign: 'center', color: ColorPalate.green, marginLeft: 10 }}>{player.full_name}</span>\n                            </div>\n                        </ListItem>\n                    ))}\n                </List>\n            </React.Fragment>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { myTheme, ColorPalate } from '../Components/MainStyles';\nimport { MuiThemeProvider } from '@material-ui/core'\n\nimport { Paper } from '@material-ui/core';\n\nimport { WalletTable } from '../Components/DataTable'\nimport { Navigation } from '../Components/Navigation';\n\nexport class Wallet extends Component {\n    render() {\n        return(\n            <MuiThemeProvider theme={myTheme}>\n            <div className='Wallet Page'>\n                <Navigation active='wallet'/>\n                <section className='ContainerCenter'>\n                    <Paper className='Block' >\n                        <h1 style={{color: ColorPalate.green}}><i className=\"fas fa-chart-bar\"></i> Wallet Log</h1>\n                        <div style={{ width: '100%', overflowX: 'scroll'}}>\n                        <WalletTable />\n                        </div>\n                    </Paper>\n                </section>\n            </div>\n            </MuiThemeProvider>\n        )\n    }\n}","import React, { Component } from 'react'\n\nexport class NotFound extends Component {\n    render() {\n        return(\n            <div className='page'>\n                404 NotFound\n            </div>\n        )\n    }\n} ","import React,{ Component } from 'react'\nimport BracketStyle from './Bracket.module.css'\n\nconst StyleSheet = {\n    bracketContainer : {\n        width : '90%',\n        height : '40vh',\n        overflow : 'scroll',\n        display: 'flex',\n        alignItems : 'center'\n    },\n    column : {\n        width: '300px',\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent : 'space-between',\n        alignItems : 'center'\n    },\n    bracket : {\n        flex: 1,\n        width: '100%',\n        border: '1px solid black',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems : 'center',\n    },\n    match : {\n        backgroundColor : '#555',\n        color: '#bbb',\n        width: 100,\n        height: 50,\n        boxShadow: '0px 0px 10px 1px #222',\n    }\n}\n\nexport class TournamentBracket extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            data : [\n                [{x: 1, y :2}, {x:3 , y :2}, {x:3 , y :2}, {x:3 , y :2}],\n                [{x:2 , y :3}, {x:3 , y :2}],\n                [{x:2 , y :2}]\n            ]\n        }\n    }\n    render() {\n        return(\n        <div style={StyleSheet.bracketContainer}>\n           {/*  <div style={{position: \"relative\", zIndex: 1}}>\n            <div > \n            </div>\n            \n\n            </div>*/}\n            {\n                this.state.data.map( (round, j) => {\n                    return(\n                        <div style={StyleSheet.column} key={Math.random() * 10000 }>\n                            {\n                                round.map( (match, i) => {\n                                    return(\n                                        <div style={StyleSheet.bracket}>\n                                            <div style={StyleSheet.match} className={BracketStyle.Prev}>\n                                            {match.x} : {match.y}\n                                            </div>\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n                    )\n                })\n            }\n            <Bracket />\n        </div>\n        )\n    }\n}\n\nclass Bracket extends Component {\n    render() {\n        return(\n            <div className={BracketStyle.bracket}>\n\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport './App.css';\n\nimport { Admin } from './Pages/Admin';\nimport { Landing } from './Pages/Landing';\nimport { Dashboard } from './Pages/Dashboard';\nimport { History } from './Pages/History';\nimport { Leaderboard } from './Pages/Leaderboard';\nimport { Match } from './Pages/Match';\nimport { Profile, OtherProfile } from './Pages/Profile';\nimport { Tournament } from './Pages/Tournament';\nimport { Wallet } from './Pages/Wallet';\nimport { NotFound } from './Pages/NotFound'\nimport { TournamentBracket } from './Components/TournamentBracket'\n\nclass App extends Component {\n  render() {\n    return (\n      <Switch>\n        <Route exact path='/' component={Landing} />\n        <Route exact path='/admin' component={Admin} />\n        <Route path='/dashboard' component={Dashboard} />\n        <Route path='/history' component={History} />\n        <Route path='/leaderboard' component={Leaderboard} />\n        <Route path='/profile' component={Profile} />\n        <Route path='/profileOther/:id' component={OtherProfile} />\n        <Route path='/tournament' component={Tournament} />\n        <Route path='/wallet' component={Wallet} />\n        <Route Path='/match/:id' component={Match} />\n        <Route component={NotFound} />\n      </Switch>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render((\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  ), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/default.fd55f441.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cCard\":\"Cards_cCard__19KLI\",\"bCard\":\"Cards_bCard__1dVfm\",\"gameCard\":\"Cards_gameCard__aT-j6\"};"],"sourceRoot":""}