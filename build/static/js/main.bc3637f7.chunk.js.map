{"version":3,"sources":["Components/Bracket.module.css","Components/Navigation.module.css","img/8ball.jpg","img/chess.jpg","img/icons/vbg1.png","img/icons/sword.svg","Services/Query.js","Services/config.js","Pages/Admin.jsx","Components/MainStyles.js","Pages/Landing.jsx","Components/Navigation.jsx","Components/Cards.jsx","Pages/Dashboard.jsx","Components/DataTable.jsx","Pages/History.jsx","Pages/Leaderboard.jsx","Pages/Match.jsx","Pages/Profile.jsx","Pages/Tournament.jsx","Pages/Wallet.jsx","Pages/NotFound.jsx","Components/TournamentBracket.jsx","App.js","serviceWorker.js","index.js","img/default.jpg","Components/Cards.module.css"],"names":["module","exports","Prev","NavProfileCard","__webpack_require__","p","HostAddress","host","JsonQuery","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","type","url","info","settings","response","json","wrap","_context","prev","next","method","headers","Accept","Content-Type","credentials","body","JSON","stringify","fetch","concat","sent","status","console","log","abrupt","stop","this","_x","_x2","_x3","apply","arguments","PostQuery","_ref2","_callee2","_context2","_x4","_x5","JsonQueryAdmin","_ref3","_callee3","_context3","mode","cache","_x6","_x7","_x8","JsonQueryAuth","_ref4","_callee4","_context4","logautx","getCookie","logauty","logauti","_x9","_x10","_x11","PostQueryAuth","_ref5","_callee5","_context5","_x12","_x13","SetCookie","key","value","document","cookie","cname","name","ca","decodeURIComponent","split","i","length","c","charAt","substring","indexOf","Admin","_Component","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setActive","e","setState","active","state","inherits","createClass","panel","react_default","createElement","Admin_GameMenu","Admin_TournamentMenu","Fragment","index_es","container","style","minHeight","item","md","width","inset","primary","onClick","Component","PlayerCounts","text","Balances","TournamentMenu","_this2","load","res","games","map","g","_id","tournaments_ongoing","tournaments_yet_to_start","clearMsg","msg_tournament_game_id","msg_tournament_player_count","msg_tournament_balance","msg_tournament_rules","msg_tournament_entry_fee","handleChange","defineProperty","is_bracket_needed","target","handleChangeCustomFields","field_id","custom_fields","onDrop","picture","tournament_image","onFileUpload","files","addTournament","fd","preventDefault","isCalling","FormData","append","rules","balance","player_count","entry_fee","game","errors","err","fieldName","param","msg","alert","addFields","push","Date","now","player_counts","balances","_this3","alignItems","justify","xs","margin","padding","onSubmit","encType","select","label","onChange","helperText","error","option","checked","multiline","field","label_name","variant","className","opacity","position","height","overflowY","button","src","image","secondary","platform","PlatformSelection","GameMenu","_this4","msg_game_name","msg_game_platform","msg_game_requirement","game_image","addGame","game_name","game_platform","game_requirement","message","platform_values","game_player_count","msg_game_image","gameName","readonly","id","colors","blackLight","greenLight","green","myTheme","createMuiTheme","palette","light","main","dark","textColor","typography","useNextVariants","appBar","card","titleColor","subtitleColor","overlay","backgroundColor","paper","ColorPalate","MainStyles","nav","menuButton","marginLeft","marginRight","color","logo","sideNav","sideNavList","block","heading","fontSize","fontWeight","boxChallenger","window","innerWidth","boxGame","clipPath","expansion","header","gameBtn","zIndex","top","right","transform","gridList","minWidth","maxHeight","centerContainer","_centerContainer","display","justifyContent","textAlign","Register","msg_full_name","msg_email","msg_password","msg_confirm","event","register","_this$state","full_name","email","password","confirm","SignIn","signIn","_this2$state","connection_string","history","Landing","_Component3","toggleRegister","isRegister","toggleSignIn","isSignIn","redrt","open","onClose","Landing_Register","anchor","Landing_SignIn","spacing","viewBox","heigth","x1","y1","x2","y2","require","alt","Transition","Slide_default","assign","direction","ChallengeBets","Logo","Navigation","x","folder","showGameBtn","isOpen","data","toggleDrawer","bind","assertThisInitialized","aria-label","icons_index_es","Navigation_Logo","Navigation_GameBtn","Navigation_SideMenu","GameBtn","search","opponents","game_id","list","filter","stage","selectOpponent","nameHint","self","openChallange","op","opponent","challenge","_ref6","_callee6","bet","_context6","challenger","challenged","toggleChallenge","bets","dialogContent","dialogTitle","cellHeight","cols","title","subtitle","autoComplete","marginTop","TransitionComponent","keepMounted","SideMenu","_ref7","styles","Link","to","textDecoration","ChallengeCard","acceptChallenge","match_id","cancelChallenge","isChallenger","marginBottom","bCard","MatchCard","_Component2","_getPrototypeOf2","_len","args","Array","_key","redirect","_this$props","lg","cCard","TournamentCard","toggleJoin","isParticipating","tournament_id","enterTournament","joinTournament","current_available","prize","gameCard","GameCard","_Component4","toggleGame","removeGame","toggleAddGame","isAddGame","addGameSubmit","contact_string","content","requirement","Dashboard","gamePocket","gameList","challenges","matches","feeds","ch","isTournament","is_tournament","m","tournamentMatches","isgameSelect","gameSelect","r","addGames","classList","remove","theme","Navigation_Navigation","defaultExpanded","expandIcon","ExpandMore_default","clng","Cards_ChallengeCard","Cards_MatchCard","_React$createElement","Cards_GameCard","objectSpread","MatchTable","match_results","handleChangePage","page","handleChangeRowsPerPage","rowsPerPage","columns","column","slice","row","component","scope","rowsPerPageOptions","count","backIconButtonProps","nextIconButtonProps","onChangePage","onChangeRowsPerPage","WalletTable","transaction_log","bp","date","History","overflowX","DataTable_MatchTable","Leaderboard","champions","achieves","subheader","champ","img","rank","leader_point","socket","openSocket","LoadChats","chat_id","cb","responseUrl","on","Match","sender","time","myId","is_c","chatVisible","toggleAdmitDefeat","isAdmitDefeat","toggleClaimVictory","isClaimVectory","claimVictory","imageFile","admitDefeat","m_id","urlFragments","location","href","Match_ChatBox","aria-labelledby","ChatBox","messages","chat","chatbox","current","undefined","scrollTop","scrollHeight","emit","chatId","sendMsg","col","React","createRef","ref","Profile","res1","isDataAvailable","user","match","level","toggleChangePassword","isChangePassword","msg_new_password","changePassword","new_password","Profile_ProfileCard","isJenuine","Profile_InfoCard","OtherProfile","user_id","ProfileCard","toggleChangeImage","isChangeImage","toggleChangeName","isChangeName","msg_name","changeImage","changeImageProgress","reload","changeName","changeNameProgress","newName","cahangeNameProgress","background","gutterBottom","size","InfoCard","Info","Balance","m_level","leader_points","next_level","m_next","total_winning","total_bp_win","total_wins","m_win","total_matches","m_match","Percents","m_levelExpPercent","win_persentage","m_average","entries","inf","replace","space","thickness","Tournament","isInTournament","Tournament_TournamentInSide","Tournament_TournamentOutSide","TournamentOutSide","not_participating","tournaments","participating","tour","Cards_TournamentCard","players","TournamentInSide","prize1","prize2","capacity","parse","changeTab","tabId","handleChangeIndex","index","_this5","Tournament_TournamentPlayers","indicatorColor","custom","react_swipeable_views_lib_default","onChangeIndex","field_value","Tournament_TournamentBracket","TournamentBracket","_this6","bracket","tree","rounds","$","brackets","titles","color_title","border_color","color_player","bg_player","color_player_hover","bg_player_hover","border_radius_player","border_radius_lines","TournamentPlayers","player","Wallet","DataTable_WalletTable","NotFound","StyleSheet","bracketContainer","overflow","flexDirection","flex","border","boxShadow","Bracket","BracketStyle","App","Switch","Route","exact","path","Path","Boolean","hostname","ReactDOM","render","BrowserRouter","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bc3637f7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Prev\":\"Bracket_Prev__1x7b0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavProfileCard\":\"Navigation_NavProfileCard__2aSZZ\"};","module.exports = __webpack_public_path__ + \"static/media/8ball.c285721f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chess.708c03cc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/vbg1.75071ebe.png\";","module.exports = __webpack_public_path__ + \"static/media/sword.c7cab733.svg\";","// const config = require('./config.json')(process.env.REACT_APP_ENV || 'dev'); \nimport {config} from \"./config\";\nlet constant = config[process.env.REACT_APP_ENV || 'dev'];\nexport const HostAddress = constant.host; \n\nexport const JsonQuery = async (type, url, info) => {\n    const settings = {\n        method: type,\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n        credentials: 'same-origin'\n    };\n\n    if (type === 'post') settings.body = JSON.stringify(info)\n\n    const response = await fetch(`${HostAddress}api/${url}`, settings)\n    if (response.status !== 200) {\n        console.log(`unable to query:${url}`)\n        return { status: 100 }\n    }\n    const json = await response.json()\n    return json\n}\n\nexport const PostQuery = async (url, body) => {\n    const settings = {\n        method: 'POST',\n        headers: {\n        },\n        credentials: 'same-origin',\n        body: body\n    };\n    const response = await fetch(`${HostAddress}api/${url}`, settings)\n    if (response.status !== 200) {\n        console.log(`unable to query:${url}`)\n        return { status: 100 }\n    }\n    const json = await response.json()\n    return json\n}\n\n\nexport const JsonQueryAdmin = async (type, url, info) => {\n    const settings = {\n        method: type,\n        mode: \"cors\", // no-cors, cors, *same-origin\n        cache: \"no-cache\",\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n        credentials: 'same-origin',\n        body: JSON.stringify(info)\n    };\n\n    const response = await fetch(`${HostAddress}api/${url}`, settings)\n    if (response.status !== 200) {\n        console.log(`unable to query:${url}`)\n        return { status: 100 }\n    }\n    const json = await response.json()\n    return json\n}\n\n\nexport const JsonQueryAuth = async (type, url, info) => {\n    const settings = {\n        method: type,\n        mode: \"cors\", // no-cors, cors, *same-origin\n        cache: \"no-cache\",\n        headers: {\n            Accept: 'application/json',\n            'logautx' : `${getCookie('logautx')}`,\n            'logauty' : `${getCookie('logauty')}`,\n            'logauti' : `${getCookie('logauti')}`,\n            'Content-Type': 'application/json',\n        },\n        credentials: 'same-origin',\n        body: JSON.stringify(info)\n    };\n\n    const response = await fetch(`${HostAddress}api/${url}`, settings)\n    if (response.status !== 200) {\n        console.log(`unable to query:${url}`)\n        return { status: 100 }\n    }\n    const json = await response.json()\n    return json\n}\n\nexport const PostQueryAuth = async ( url, body) => {\n    const settings = {\n        method: 'POST',\n        mode: \"cors\", // no-cors, cors, *same-origin\n        cache: \"no-cache\",\n        headers: {\n            'logautx' : `${getCookie('logautx')}`,\n            'logauty' : `${getCookie('logauty')}`,\n            'logauti' : `${getCookie('logauti')}`\n        },\n        credentials: 'same-origin',\n        body: body\n    };\n\n    const response = await fetch(`${HostAddress}api/${url}`, settings)\n    if (response.status !== 200) {\n        console.log(`unable to query:${url}`)\n        return { status: 100 }\n    }\n    const json = await response.json()\n    return json\n}\n\nexport const AuthData = () => {\n    return {\n        logautx: getCookie('logautx'),\n        logauty: getCookie('logauty'),\n        logauti: getCookie('logauti')\n    }\n}\n\nexport const SetCookie = (key, value) => {\n    document.cookie = `${key}=${value};`;\n}\nexport const getCookie = (cname) => {\n    var name = cname + \"=\";\n    var decodedCookie = decodeURIComponent(document.cookie);\n    var ca = decodedCookie.split(';');\n    for (var i = 0; i < ca.length; i++) {\n        var c = ca[i];\n        while (c.charAt(0) == ' ') {\n            c = c.substring(1);\n        }\n        if (c.indexOf(name) == 0) {\n            return c.substring(name.length, c.length);\n        }\n    }\n    return \"\";\n}","export const config = {\n    \"dev\":{\n        \"host\" : \"http://localhost:3001/\"\n    },\n    \"prod\":{\n        \"host\" : \"http://159.89.163.24/\"\n    }\n}","import React, { Component } from 'react'\n\nimport { PostQuery, JsonQueryAdmin, HostAddress } from '../Services/Query'\n\nimport { Grid, Paper, } from '@material-ui/core'\nimport { Menu, MenuItem, MenuList, List, ListItem, ListItemText, Avatar } from '@material-ui/core'\nimport { TextField, Button, LinearProgress,Checkbox } from '@material-ui/core'\nimport ImageUploader from 'react-images-upload'\n\n\nexport class Admin extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            active : 'games'\n        }\n    }\n    setActive = name => e => {\n        this.setState({\n            active : name\n        })\n    }\n\n\n    render() {\n\n        let panel\n        switch(this.state.active) {\n            case 'games':\n            panel = <GameMenu />\n            break;\n            case 'tournaments':\n            panel = <TournamentMenu />\n            break;\n        }\n\n        return (\n            <React.Fragment>\n                <Grid container style={{ minHeight: '100vh' }}>\n                    <Grid item container md={3}>\n                        <Paper style={{ width: '100%' }}>\n                            <MenuList >\n                                <MenuItem >\n                                    <ListItemText inset primary=\"games\" onClick={this.setActive('games')}/>\n                                </MenuItem>\n                                <MenuItem >\n                                    <ListItemText inset primary=\"tournaments\" onClick={this.setActive('tournaments')}/>\n                                </MenuItem>\n                                <MenuItem >\n                                    <ListItemText inset primary=\"descitions\" />\n                                </MenuItem>\n                                <MenuItem >\n                                    <ListItemText inset primary=\"Inbox\" />\n                                </MenuItem>\n                            </MenuList>\n                        </Paper>\n                    </Grid>\n                    <Grid item container md={9}>\n                        {panel}\n                    </Grid>\n                </Grid>\n            </React.Fragment>\n        )\n    }\n}\n\nconst PlayerCounts = [\n    { text: '4', value: 4 },\n    { text: '8', value: 8 },\n    { text: '16', value: 16 },\n    { text: '32', value: 32 },\n]\nconst Balances = [10, 20, 50, 100, 200, 500]\n\nclass TournamentMenu extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isCalling: false,\n            player_counts: PlayerCounts,\n            entry_fee:'',\n            balances: Balances,\n            games: [],\n            tournaments_ongoing: [],\n            tournaments_yet_to_start: [],\n            game: '',\n            player_count: 4,\n            balance: 10,\n            rules: '',\n            msg_tournament_game_id: '',\n            msg_tournament_player_count: '',\n            msg_tournament_balance: '',\n            msg_tournament_rules: '',\n            msg_tournament_entry_fee: '',\n            tournament_image:'',\n            custom_fields:[],\n            is_bracket_needed:true\n        }\n    }\n    componentDidMount() {\n        this.load()\n    }\n    load = async () => {\n        const res = await JsonQueryAdmin('post', 'admin/tournament', {})\n        console.log(res)\n        if (res.status === 'ok') {\n\n            this.setState({\n                games: res.games.map(g => {\n                    return {\n                        text: g.name,\n                        value: g._id\n                    }\n                }),\n                tournaments_ongoing: res.tournaments_ongoing,\n                tournaments_yet_to_start: res.tournaments_yet_to_start\n            })\n        }\n    }\n    clearMsg = () => {\n        this.setState({\n            msg_tournament_game_id: '',\n            msg_tournament_player_count: '',\n            msg_tournament_balance: '',\n            msg_tournament_rules: '',\n            msg_tournament_entry_fee: ''\n        });\n    }\n    handleChange = name => e => {\n        if(name == \"is_bracket_needed\") {\n            this.setState({\n                [name]: !this.state.is_bracket_needed\n            })\n        } else {\n            this.setState({\n                [name]: e.target.value\n            })\n        }\n    }\n    handleChangeCustomFields = (e,name,field_id) => {\n        for(var i=0;i<this.state.custom_fields.length;i++) {\n            if(this.state.custom_fields[i].field_id == field_id) {\n                this.state.custom_fields[i][name] = e.target.value;\n            }\n        }\n        this.setState({\n            custom_fields: this.state.custom_fields\n        })\n    }\n    onDrop = picture => {\n        this.setState({\n            tournament_image: picture,\n        });\n        console.log(picture)\n    }\n    onFileUpload = e => {\n        this.setState({\n            tournament_image: e.target.files[0]\n        })\n    }\n    addTournament = async e => {\n        e.preventDefault();\n        this.setState({ isCalling: true })\n        // const {game, rules, balance, player_count,entry_fee,tournament_image } = this.state\n        let fd = new FormData()\n        fd.append('image', this.state.tournament_image)\n        fd.append('rules', this.state.rules)\n        fd.append('balance', this.state.balance)\n        fd.append('player_count', this.state.player_count)\n        fd.append('entry_fee', this.state.entry_fee)\n        fd.append('game_id', this.state.game)\n        fd.append('custom_fields',JSON.stringify(this.state.custom_fields))\n        fd.append('is_bracket_needed',this.state.is_bracket_needed)\n    \n        const res = await PostQuery('admin/tournament/create', fd)\n\n        // const res = await JsonQueryAdmin('post','admin/tournament/create',{\n        //     game_id : game, rules, balance, player_count,entry_fee\n        // })\n        console.log('form submitted')\n        this.setState({ isCalling: false })\n        console.log(res);\n        this.clearMsg();\n        if (res.errors) {\n            res.errors.map(err => {\n                const fieldName = 'msg_tournament_' + err.param\n                this.setState({ [fieldName]: err.msg })\n            });\n        } else {\n            alert(\"Tournament created successfully\");\n            this.setState ({\n                game: '',\n                player_count: 4,\n                balance: 0,\n                rules: '',\n                entry_fee:''\n            });\n            this.load();\n        }\n    }\n    addFields = e => {\n        this.state.custom_fields.push({field_id: Date.now()});\n        this.setState ({\n            custom_fields:this.state.custom_fields\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Grid container alignItems='center' justify='center'>\n                    <Grid item xs={12}>\n                        <Paper style={{ margin: '20px', padding: '20px' }}>\n                            <h2>Add Tournament</h2>\n                            {this.state.isCalling ? <LinearProgress /> : ''}\n                            <form onSubmit={this.addTournament} encType=\"multipart/form-data\">\n                                <Grid container alignItems='center' justify='center'>\n                                    <Grid item xs={12} md={6} >\n                                        <TextField style={{ margin: '1vw', width: '90%' }}\n                                            select\n                                            label=\"Select Game\"\n                                            value={this.state.game}\n                                            onChange={this.handleChange('game')}\n                                            helperText={this.state.msg_tournament_game_id}\n                                            error={this.state.msg_tournament_game_id.length > 0}\n                                        >\n                                            {this.state.games.map(option => (\n                                                <MenuItem key={option.value} value={option.value}>\n                                                    {option.text}\n                                                </MenuItem>\n                                            ))}\n                                        </TextField>\n                                    </Grid>\n                                    <Grid item xs={12} md={6} >\n                                        <TextField style={{ margin: '1vw', width: '90%' }}\n                                            select\n                                            label=\"Select Prize\"\n                                            value={this.state.balance}\n                                            onChange={this.handleChange('balance')}\n                                            helperText={this.state.msg_tournament_balance}\n                                            error={this.state.msg_tournament_balance.length > 0}\n                                        >\n                                            {this.state.balances.map(option => (\n                                                <MenuItem key={option} value={option}>\n                                                    {option} bp\n                                                </MenuItem>\n                                            ))}\n                                        </TextField>\n                                    </Grid>\n                                    <Grid item xs={12} md={6} >\n                                        <TextField style={{ margin: '1vw', width: '90%' }}\n                                            select\n                                            label=\"Player Count\"\n                                            value={this.state.player_count}\n                                            onChange={this.handleChange('player_count')}\n                                            helperText={this.state.msg_tournament_player_count}\n                                            error={this.state.msg_tournament_player_count.length > 0}\n                                        >\n                                            {this.state.player_counts.map(option => (\n                                                <MenuItem key={option.value} value={option.value}>\n                                                    {option.text}\n                                                </MenuItem>\n                                            ))}\n                                        </TextField>\n                                    </Grid>\n                                    <Grid item xs={12} md={6} >\n                                        <TextField style={{ margin: '1vw', width: '90%' }}\n                                            label=\"Entry Fee\"\n                                            value={this.state.entry_fee}\n                                            onChange={this.handleChange('entry_fee')}\n                                            helperText={this.state.msg_tournament_entry_fee}\n                                            error={this.state.msg_tournament_entry_fee.length > 0}\n                                        >\n                                            \n                                        </TextField>\n                                    </Grid>\n                                    <Grid item xs={12} md={6} >\n                                        <Checkbox \n                                            checked={this.state.is_bracket_needed}\n                                            onChange={this.handleChange('is_bracket_needed')}\n                                        > \n                                        </Checkbox>Is Bracket Needed                     \n                                    </Grid>\n                                    <Grid item xs={12} md={12} >\n                                        <TextField style={{ margin: '1vw', width: '90%' }}\n                                            multiline\n                                            label=\"Rules\"\n                                            margin=\"normal\"\n                                            value={this.state.rules}\n                                            onChange={this.handleChange('rules')}\n                                            helperText={this.state.msg_tournament_rules}\n                                            error={this.state.msg_tournament_rules.length > 0}\n                                        />\n                                    </Grid>\n                                    {this.state.custom_fields.map(field => (\n                                        <Grid item xs={12} md={12} key={field.field_id}>\n                                            <TextField style={{ margin: '1vw', width: '40%' }}\n                                                label=\"Field Label\"\n                                                value={field.label_name}\n                                                onChange={(e) => this.handleChangeCustomFields(e,'label_name',field.field_id)}\n                                            >\n                                            </TextField>\n                                            <TextField style={{ margin: '1vw', width: '40%' }}\n                                                label=\"Field Value\"\n                                                value={field.value}\n                                                onChange={(e) =>this.handleChangeCustomFields(e,'field_value',field.field_id)}\n                                            >\n                                            </TextField>\n                                        </Grid>\n                                    ))}\n                                    <Grid item xs={12}>\n                                        <Button onClick={(e) => this.addFields(e)} variant='outlined' style={{ margin: '1vw', width: '90%' }}>\n                                            <span> <i className=\"fas fa-plus\"></i>Add Custom Fields</span>\n                                        </Button>\n                                    </Grid>\n                                    <Grid item xs={12} md={6}>\n                                        <Button style={{ margin: '1vw', width: '90%' }}>\n                                            <input type='file'\n                                                style={{ width: '100%', opacity: 0, position: 'absolute' }}\n                                                onChange={this.onFileUpload} />\n                                            <span><i className=\"fas fa-upload\"></i> Upload Tournament Image</span>\n                                        </Button> \n                                    </Grid>\n                                    \n                                    <Grid item xs={12}>\n                                        <Button type='submit' variant='outlined' style={{ margin: '1vw', width: '90%' }}>\n                                            <span><i className=\"fas fa-upload\"></i> Add Tournament</span>\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </form>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Paper style={{ margin: '20px', padding: '20px' }}>\n                            <h2>Tournament List</h2>\n                            <List style={{ width: '100%', margin: '20px', height: '32vh', overflowY: 'scorll' }}>\n\n                                {\n                                    this.state.tournaments_yet_to_start.map(g => (\n                                        <ListItem button key={g._id}>\n                                            <Avatar style={{ height: '60px', width: '60px' }}>\n                                                <img src={`${HostAddress}gameimg/${g.game.image}`} style={{ height: '100%' }} />\n                                            </Avatar>\n                                            <ListItemText\n                                                primary={<span> {g.game.name} ({g.player_count} players) </span>}\n                                                secondary={<span> {g.game.platform ? 'mobile game' : 'pc game'} </span>} />\n                                        </ListItem>\n                                    ))\n                                }\n                            </List>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </React.Fragment>\n        )\n    }\n}\n\n\n\n\n\n\n\nconst PlatformSelection = [\n    { text: 'mobile', value: 0 },\n    { text: 'pc', value: 1 }\n]\n\nclass GameMenu extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isCalling: false,\n            platform_values: PlatformSelection,\n            games: [],\n            game_name: '',\n            game_platform: 0,\n            game_requirement: '',\n            game_image: '',\n            game_player_count: 1,\n            msg_game_name: '',\n            msg_game_platform: '',\n            msg_game_requirement: '',\n            msg_game_image: '',\n            \n        }\n    }\n    clearMsg = () => {\n        this.setState({\n            msg_game_name: '',\n            msg_game_platform: '',\n            msg_game_requirement: '',\n        });\n    }\n    handleChange = name => e => {\n        \n        this.setState({\n            [name]: e.target.value\n        })\n    }\n    onDrop = picture => {\n        this.setState({\n            game_image: picture,\n        });\n        console.log(picture)\n    }\n    onFileUpload = e => {\n        this.setState({\n            game_image: e.target.files[0]\n        })\n    }\n    load = async () => {\n        const res = await JsonQueryAdmin('post', 'admin/game', {})\n        this.setState({\n            games: res.games\n        })\n        console.log(res.games)\n    }\n    componentDidMount() {\n        this.load()\n    }\n    addGame = async e => {\n        e.preventDefault();\n        this.setState({ isCalling: true })\n        let fd = new FormData()\n        fd.append('image', this.state.game_image, 'chris.jpg')\n        fd.append('name', this.state.game_name)\n        fd.append('platform', this.state.game_platform)\n        fd.append('requirement', this.state.game_requirement)\n        // fd.append('player_count', this.state.game_player_count)\n        \n        const res = await PostQuery('admin/game/add', fd)\n        console.log('form submitted')\n        this.setState({ isCalling: false })\n        console.log(res);\n        this.clearMsg();\n        if (res.errors) {\n            res.errors.map(err => {\n                const fieldName = 'msg_game_' + err.param\n                this.setState({ [fieldName]: err.msg })\n            });\n        } else {\n            if(res.error == 1) {\n                alert(res.message);\n            } else {\n                alert(\"Game added successfully\");\n                this.load();\n            }\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Grid container alignItems='center' justify='center'>\n                    <Grid item xs={12}>\n                        <Paper style={{ margin: '20px', padding: '20px' }}>\n                            <h2>Add Game</h2>\n                            {this.state.isCalling ? <LinearProgress /> : ''}\n                            <form onSubmit={this.addGame} >\n                                <Grid container alignItems='center' justify='center'>\n                                    <Grid item xs={12} md={6} >\n                                        <TextField style={{ margin: '1vw', width: '90%' }}\n                                            label=\"Game Name\"\n                                            margin=\"normal\"\n                                            value={this.state.gameName}\n                                            onChange={this.handleChange('game_name')}\n                                            helperText={this.state.msg_game_name}\n                                            error={this.state.msg_game_name.length > 0}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} md={6} >\n                                        <TextField style={{ margin: '1vw', width: '90%' }}\n                                            label=\"Game Reqirement\"\n                                            margin=\"normal\"\n                                            value=\"ID\"\n                                            readonly={true}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} md={6} >\n                                        <TextField style={{ margin: '1vw', width: '90%' }}\n                                            id=\"standard-select-bets\"\n                                            select\n                                            label=\"Select Platform\"\n                                            value={this.state.game_platform}\n                                            onChange={this.handleChange('game_platform')}\n                                        >\n                                            {this.state.platform_values.map(option => (\n                                                <MenuItem key={option.value} value={option.value}>\n                                                    {option.text}\n                                                </MenuItem>\n                                            ))}\n                                        </TextField>\n                                    </Grid>\n                                    <Grid item xs={12} md={6}>\n                                        <Button style={{ margin: '1vw', width: '90%' }}>\n                                            <input type='file'\n                                                style={{ width: '100%', opacity: 0, position: 'absolute' }}\n                                                onChange={this.onFileUpload} />\n                                            <span><i className=\"fas fa-upload\"></i> Upload Game Image</span>\n                                        </Button>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Button type='submit' variant='outlined' style={{ margin: '1vw', width: '90%' }}>\n                                            <span><i className=\"fas fa-upload\"></i> Add Game</span>\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </form>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Paper style={{ margin: '20px', padding: '20px' }}>\n                            <h2>Game List</h2>\n                            <List style={{ width: '100%', margin: '20px', height: '32vh', overflowY: 'scorll' }}>\n\n                                {\n                                    this.state.games.map(g => (\n                                        <ListItem button key={g._id}>\n                                            <Avatar style={{ height: '60px', width: '60px' }}>\n                                                <img src={`${HostAddress}gameimg/${g.image}`} style={{ height: '100%' }} />\n                                            </Avatar>\n                                            <ListItemText\n                                                primary={<span> {g.name} </span>}\n                                                secondary={<span> {g.platform ? 'mobile game' : 'pc game'} </span>} />\n                                        </ListItem>\n                                    ))\n                                }\n                            </List>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </React.Fragment>\n        )\n    }\n}","import {createMuiTheme} from '@material-ui/core'\n\nconst colors = {\n    blackLight: '#334',\n    greenLight: '#76ff03',\n    green: '#aaa',\n}\n\nexport const myTheme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: {\n            light: '#bbb',\n            main: colors.greenLight,\n            dark: '#76ff03'\n         },\n         secondary: {\n           main: colors.greenLight,\n         },\n         textColor: \"#bdbdbd\",\n      },\n    typography: { \n        useNextVariants: true\n     },\n     appBar: {\n        \"textColor\": \"#33691e\"\n    },\n    card: {\n        \"titleColor\": \"rgba(118, 255, 3, 0.87)\",\n        \"subtitleColor\": \"rgba(224, 224, 224, 0.54)\"\n    },\n    overlay: {\n        \"backgroundColor\": \"rgba(0, 0, 0, 0.87)\"\n    },\n    paper: {\n        backgroundColor: \"rgba(33, 33, 33, 0.66)\"\n    },\n})\n\nexport const ColorPalate = colors;\n\n\nexport const  MainStyles = {\n    nav: {\n        backgroundColor: colors.blackLight,\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n        color: colors.greenLight\n    },\n    logo: {\n        width: 140\n    },\n    sideNav: {\n        width: 240,\n        height: '100%',\n        color: colors.greenLight,\n        backgroundColor: colors.blackLight,\n    },\n    sideNavList: {\n        backgroundColor: colors.blackLight,\n        padding: 8,\n        color: colors.greenLight,\n    },\n    block: {\n        backgroundColor: 'rgba(0, 0, 10, 0.1)',\n        color: colors.greenLight,\n    },\n    heading: {\n        color: colors.greenLight,\n        padding: 8,\n        fontSize: '1.3rem',\n        fontWeight: 'bolder'\n    },\n    text: {\n        color: colors.green,\n        padding: 8,\n        fontSize: '1.2rem',\n    },\n    paper: {\n        backgroundColor: colors.blackLight\n    },\n    boxChallenger: {\n        height: window.innerWidth < 600 ? 70 : 100,\n        width: window.innerWidth < 600 ? 70: 100,\n    },\n    boxGame : {\n        height: '140px',\n        clipPath: 'polygon(0% 0%, 60% 0, 60% 100%, 31% 71%, 0 100%)',\n       \n    },\n    expansion: {\n        padding: 10,\n        backgroundColor: 'rgba(0, 0, 10, 0.2)',\n        color: colors.green,\n    },\n    header: {\n        fontSize: '1.3rem',\n        fontWeight: 'bolder',\n        color: colors.greenLight\n    },\n    gameBtn: {\n        position: 'absolute',\n        zIndex: 4,\n        top: window.innerWidth < 600 ?'84vh' : '90vh',\n        right: window.innerWidth < 600 ? 20 : 40,\n        transform: 'scale(1.2)'\n    },\n    gridList: {\n        minWidth: 500,\n        maxHeight: 450,\n    },\n    centerContainer: {\n        display: 'grid',\n        alignItems: 'center',\n        justifyContent: 'center',\n        textAlign: 'center',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n}\n\n","import React, { Component } from 'react';\nimport { ColorPalate, myTheme } from '../Components/MainStyles';\nimport { MuiThemeProvider } from '@material-ui/core'\n\nimport { JsonQuery, SetCookie } from '../Services/Query'\nimport { Grid, Drawer, TextField, LinearProgress } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\n\nimport './Landing.css';\n\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            full_name: '',\n            email: '',\n            password: '',\n            confirm: '',\n            isCalling: false,\n            msg_full_name: '',\n            msg_email: '',\n            msg_password: '',\n            msg_confirm: '',\n        }\n    }\n    clearMsg = () => {\n        this.setState({\n            msg_full_name: '',\n            msg_email: '',\n            msg_password: '',\n            msg_confirm: '',\n        });\n    }\n    handleChange = name => event => {\n        this.setState({ [name]: event.target.value })\n    }\n    register = async e => {\n        e.preventDefault();\n        this.setState({ isCalling: true })\n        const { full_name, email, password, confirm } = this.state;\n        if (full_name === '' || full_name === undefined) {\n\n        }\n        const res = await JsonQuery('post', 'sign/register', { full_name, email, password, confirm });\n        this.setState({ isCalling: false })\n        this.clearMsg();\n        if (res.errors) {\n            res.errors.map(err => {\n                const fieldName = 'msg_' + err.param;\n                this.setState({ [fieldName]: err.msg })\n                return err\n            });\n        } else {\n            alert(`registration successful`)\n        }\n    }\n\n    render() {\n        return (\n            <div style={{ width: '80vw', height: '100%', display: 'grid', alignItems: 'center', justifyContent: 'center' }}>\n                <div style={{ margin: '2vw' }}>\n                    <h1>Register</h1>\n                    {this.state.isCalling ? <LinearProgress /> : ''}\n                    <form onSubmit={this.register}>\n                        <Grid container >\n                            <Grid item xs={12} md={6} >\n                                <TextField style={{ margin: '1vw', width: '90%' }}\n                                    id=\"standard-name\"\n                                    label=\"Name\"\n                                    margin=\"normal\"\n                                    value={this.state.full_name}\n                                    onChange={this.handleChange('full_name')}\n                                    helperText={this.state.msg_full_name}\n                                    error={this.state.msg_full_name.length > 0}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6} >\n                                <TextField style={{ margin: '1vw', width: '90%' }}\n                                    id=\"standard-email\"\n                                    label=\"Email Id\"\n                                    margin=\"normal\"\n                                    value={this.state.email}\n                                    onChange={this.handleChange('email')}\n                                    helperText={this.state.msg_email}\n                                    error={this.state.msg_email.length > 0}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6}>\n                                <TextField style={{ margin: '1vw', width: '90%' }}\n                                    id=\"standard-password\"\n                                    label=\"Password\"\n                                    margin=\"normal\"\n                                    type='password'\n                                    value={this.state.password}\n                                    onChange={this.handleChange('password')}\n                                    helperText={this.state.msg_password}\n                                    error={this.state.msg_password.length > 0}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6} >\n                                <TextField style={{ margin: '1vw', width: '90%' }}\n                                    id=\"standard-confirm-password\"\n                                    label=\"Confirm Password\"\n                                    margin=\"normal\"\n                                    type='password'\n                                    value={this.state.confirm}\n                                    onChange={this.handleChange('confirm')}\n                                    helperText={this.state.msg_confirm}\n                                    error={this.state.msg_confirm.length > 0}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6} >\n                                <Button type='submit' style={{ padding: 14, color: '#2af', }}>\n                                    Register\n                        </Button>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\nclass SignIn extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            isCalling: false,\n            msg_email: '',\n            msg_password: '',\n        }\n    }\n    clearMsg = () => {\n        this.setState({\n            msg_email: '',\n            msg_password: ''\n        });\n    }\n    handleChange = name => event => {\n        this.setState({ [name]: event.target.value })\n    }\n    signIn = async e => {\n        e.preventDefault();\n        this.setState({ isCalling: true })\n        const { email, password } = this.state;\n        const res = await JsonQuery('post', 'sign/login', { email, password });\n        this.setState({ isCalling: false })\n        this.clearMsg();\n        if (res.errors) {\n            res.errors.map(err => {\n                const fieldName = 'msg_' + err.param;\n                this.setState({ [fieldName]: err.msg });\n                return err\n            });\n        } else {\n            SetCookie('logauti', res.id);\n            SetCookie('logautx', this.state.email);\n            SetCookie('logauty', res.connection_string);\n            this.props.history.push('/dashboard')\n        }\n    }\n    render() {\n        return (\n            <div style={{ height: '80vh', display: 'grid', alignItems: 'center', justifyContent: 'center' }}>\n                <div style={{ margin: '2vw' }}>\n                    <h1>Sign In</h1>\n                    {this.state.isCalling ? <LinearProgress /> : ''}\n                    <form onSubmit={this.signIn}>\n                        <Grid container >\n                            <Grid item xs={12} md={6} >\n                                <TextField style={{ margin: '1vw', width: '90%' }}\n                                    id=\"standard-email\"\n                                    label=\"Email Id\"\n                                    margin=\"normal\"\n                                    value={this.state.email}\n                                    onChange={this.handleChange('email')}\n                                    helperText={this.state.msg_email}\n                                    error={this.state.msg_email.length > 0}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6}>\n                                <TextField style={{ margin: '1vw', width: '90%' }}\n                                    id=\"standard-password\"\n                                    label=\"Password\"\n                                    margin=\"normal\"\n                                    type='password'\n                                    value={this.state.password}\n                                    onChange={this.handleChange('password')}\n                                    helperText={this.state.msg_password}\n                                    error={this.state.msg_password.length > 0}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6} >\n                                <Button type='submit' style={{ padding: 14, color: '#2af', }}>\n                                    Sign In\n                        </Button>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\nexport class Landing extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isRegister: false,\n            isSignIn: false\n        }\n    }\n    toggleRegister = () => {\n        this.setState({\n            isRegister: !this.state.isRegister\n        })\n    }\n    toggleSignIn = () => {\n        this.setState({\n            isSignIn: !this.state.isSignIn\n        })\n    }\n    redrt = async () => {\n       // const res = await JsonQueryAuth('POST', 'info/getUser', { });\n    }\n    componentDidMount() {\n        document.body.className=\"body-a\" \n    }\n    render() {\n        return (\n            <React.Fragment>\n                <div className='body1'>\n                    <Drawer open={this.state.isRegister} onClose={this.toggleRegister}>\n                        <Register />\n                    </Drawer>\n                    <Drawer anchor=\"top\" open={this.state.isSignIn} onClose={this.toggleSignIn}>\n                        <SignIn history={this.props.history} />\n                    </Drawer>\n                    <div className='Page'>\n                        <div id=\"title\" className=\"slide header\">\n                            <div>\n                                <Grid container alignItems='center' justify='center'>\n                                    <Grid item xs={12}>\n                                        <h1 style={{ color: ColorPalate.greenLight, fontSize: '2.4rem' }}>Virtual Battle Ground</h1>\n                                        <h1 style={{ color: '#bbb', fontSize: '1.4rem' }}>Start making money through competetive gaming</h1>\n                                    </Grid>\n                                    <br /><br />\n                                    <Grid item xs={12} spacing={16} container alignItems='center' justify='center'>\n                                        <Grid item xs={12} md={6} container alignItems='center' justify='center'>\n                                            <Button style={{ color: ColorPalate.greenLight }}\n                                                onClick={this.toggleRegister}\n                                            ><div className=\"boton\">\n\n                                                    <svg viewBox=\"0 0 290 70\" width=\"100%\" heigth=\"100%\" >\n                                                        <line className=\"L-T\" x1=\"0\" y1=\"-15\" x2=\"0\" y2=\"20\" />\n                                                        <line className=\"L-B\" x1=\"0\" y1=\"50\" x2=\"0\" y2=\"85\" />\n\n                                                        <line className=\"R-T\" x1=\"290\" y1=\"-15\" x2=\"290\" y2=\"20\" />\n                                                        <line className=\"R-B\" x1=\"290\" y1=\"50\" x2=\"290\" y2=\"85\" />\n\n                                                        <line className=\"T-L\" x1=\"-125\" y1=\"0\" x2=\"20\" y2=\"0\" />\n                                                        <line className=\"T-R\" x1=\"270\" y1=\"0\" x2=\"415\" y2=\"0\" />\n\n                                                        <line className=\"B-R\" x1=\"270\" y1=\"70\" x2=\"415\" y2=\"70\" />\n                                                        <line className=\"B-L\" x1=\"-125\" y1=\"70\" x2=\"20\" y2=\"70\" />\n                                                    </svg>\n                                                    <span>Register</span>\n                                                </div>\n                                            </Button>\n                                        </Grid>\n                                        <Grid item xs={12} md={6} container alignItems='center' justify='center'>\n                                            <Button style={{ color: ColorPalate.greenLight }}\n                                                onClick={this.toggleSignIn}\n                                            ><div className=\"boton\"\n                                            >\n\n                                                    <svg viewBox=\"0 0 290 70\" width=\"100%\" heigth=\"100%\" >\n                                                        <line className=\"L-T\" x1=\"0\" y1=\"-15\" x2=\"0\" y2=\"20\" />\n                                                        <line className=\"L-B\" x1=\"0\" y1=\"50\" x2=\"0\" y2=\"85\" />\n\n                                                        <line className=\"R-T\" x1=\"290\" y1=\"-15\" x2=\"290\" y2=\"20\" />\n                                                        <line className=\"R-B\" x1=\"290\" y1=\"50\" x2=\"290\" y2=\"85\" />\n\n                                                        <line className=\"T-L\" x1=\"-125\" y1=\"0\" x2=\"20\" y2=\"0\" />\n                                                        <line className=\"T-R\" x1=\"270\" y1=\"0\" x2=\"415\" y2=\"0\" />\n\n                                                        <line className=\"B-R\" x1=\"270\" y1=\"70\" x2=\"415\" y2=\"70\" />\n                                                        <line className=\"B-L\" x1=\"-125\" y1=\"70\" x2=\"20\" y2=\"70\" />\n                                                    </svg>\n                                                    <span>Sign In</span>\n                                                </div>\n                                            </Button>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </div>\n                        </div>\n\n                        <div id=\"slide1\" className=\"slide\">\n                            <div className=\"title-x\">\n                                <h1>How It Works</h1>\n                                <p>Compete in gaming tournaments and head-to-head challenges with gamers of every skill level on Mobile, Playstation, Xbox and PC. Participate in free-to-play or cash tournaments and Win Big at Virtual Battle Ground.</p>\n                            </div>\n                        </div>\n\n                        <div id=\"slide2\" className=\"slide\">\n                            <div className=\"title\">\n                                <h1>Participate in Live Tournaments To Earn More</h1>\n                                <p>Lorem ipsum dolor sit amet, in velit iudico mandamus sit, persius dolorum in per, postulant mnesarchum cu nam. Malis movet ornatus id vim, feugait detracto est ea, eam eruditi conceptam in. Ne sit explicari interesset. Labores perpetua cum at. Id viris docendi denique vim.</p>\n                            </div>\n\n                            <img src={require('../img/8ball.jpg')} alt='game'/>\n                            <img src={require('../img/chess.jpg')} alt='chess'/>\n                        </div>\n\n                        <div id=\"slide3\" className=\"slide\">\n                            <Grid container spacing={16}>\n                                <Grid item xs={12} md={6}>\n                                    <div className=\"title-y\">\n                                        <h1>CREATE ACCOUNT</h1>\n                                        <p>Login to Virtual Battle Ground and Add money to wallet</p>\n                                    </div>\n\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <div className=\"title-y\">\n                                        <h1>FIND YOUR GAME</h1>\n                                        <p>Search among the Listd game and add to your play list</p>\n                                    </div>\n\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <div className=\"title-y\">\n                                        <h1>CHALLENGE OTHERS</h1>\n                                        <p>Search for ohter players and challenge them for free or bet</p>\n                                    </div>\n\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <div className=\"title-y\">\n                                        <h1>WIN AND EARN</h1>\n                                        <p>beat other players in tournaments and matches to earn credits.</p>\n                                    </div>\n\n                                </Grid>\n                            </Grid>\n\n                        </div>\n\n                        <div id=\"slide4\" className=\"slide header\">\n                            <h1>The End</h1>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport { MainStyles, ColorPalate } from './MainStyles';\n\nimport { JsonQueryAuth, HostAddress, getCookie } from '../Services/Query'\n\nimport { AppBar, Toolbar } from '@material-ui/core';\nimport { Drawer, List, ListItem, ListItemIcon, ListItemText, Divider, Icon } from '@material-ui/core';\nimport { IconButton } from '@material-ui/core'\nimport { Sort, Dashboard, Person, AccountBalanceWallet, FeaturedPlayListTwoTone } from '@material-ui/icons';\nimport { Grid, Typography, Fab, Button } from '@material-ui/core';\nimport { GridList, GridListTile, GridListTileBar } from '@material-ui/core';\nimport { TextField, Avatar, MenuItem } from '@material-ui/core';\nimport { Dialog, DialogTitle, DialogContent } from '@material-ui/core';\nimport Slide from '@material-ui/core/Slide';\n\nimport styles from './Navigation.module.css';\n\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\n\nconst ChallengeBets = [\n    { text: 'Free', value: 0 },\n    { text: '10 BP', value: 10 },\n    { text: '20 BP', value: 20 },\n    { text: '50 BP', value: 50 },\n    { text: '100 BP', value: 100 },\n    { text: '500 BP', value: 500 },\n]\n\n\nconst Logo = () =>\n    (<img\n        src={require('../img/icons/vbg1.png')}\n        style={MainStyles.logo}\n        alt=\"VBG\"\n    >\n    </img>);\n\n\nexport class Navigation extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showGameBtn : false, \n            isOpen: false,\n            image: require('../img/default.jpg'),\n            name: 'palyer',\n            balance: 0,\n            data: {}\n        }\n        this.toggleDrawer = this.toggleDrawer.bind(this);\n    }\n    toggleDrawer() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        })\n    }\n    load = async () => {\n        const res = await JsonQueryAuth('POST', 'info/getUser', { x: 10 });\n        const image = `${HostAddress}user/${res.folder}/${res.image}`\n        const name = res.full_name\n        const balance = res.balance\n        this.setState({\n            name: name,\n            image: image,\n            balance: balance,\n            showGameBtn : this.props.active !== 'wallet' && this.props.active !== 'history'\n        })\n    }\n    componentDidMount() {\n        this.load();\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <AppBar position='sticky' style={MainStyles.nav}>\n                    <Toolbar>\n                        <IconButton\n                            style={MainStyles.menuButton}\n                            color=\"inherit\" aria-label=\"Menu\"\n                            onClick={this.toggleDrawer}>\n                            <Sort style={{ transform: 'scale(1.2)' }} />\n                        </IconButton>\n                        <Logo />\n                    </Toolbar>\n                    {\n                        this.state.showGameBtn? <GameBtn load={this.props.load} /> : ''\n                    }\n                </AppBar>\n                <Drawer open={this.state.isOpen} onClose={this.toggleDrawer}>\n                    <SideMenu\n                        active={this.props.active}\n                        image={this.state.image}\n                        name={this.state.name}\n                        balance={this.state.balance}\n                    />\n                </Drawer>\n            </React.Fragment>\n        );\n    }\n}\n\nclass GameBtn extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false,\n            stage: 'game',\n            bets: ChallengeBets,\n            nameHint: '',\n            bet: 0,\n            games: [],\n            game: '',\n            opponents: [],\n            opponent: {\n                _id: '',\n                name: '',\n                image: require('../img/default.jpg')\n            },\n            self: {\n                _id: '',\n                name: '',\n                image: require('../img/default.jpg')\n            }\n        }\n        this.toggleChallenge = this.toggleChallenge.bind(this);\n    }\n    toggleChallenge() {\n        this.setState({\n            isOpen: !this.state.isOpen,\n            stage: 'game'\n        })\n    }\n    handleChange = name => async event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n        if (name === 'nameHint') {\n            this.search(event.target.value)\n        }\n    } \n    async componentDidMount() {\n        const res = await JsonQueryAuth('POST', 'info/getGames', {})\n        this.setState({\n            games: res\n        });\n    }\n    search = async (name) => {\n        const res = await JsonQueryAuth('POST', 'info/getChallangerList', { name: name, game_id: this.state.game })\n        const opponents = res.list.filter(x => x._id !== getCookie('logauti'))\n        this.setState({\n            opponents: opponents,\n            stage: 'search',\n        })\n    }\n    selectOpponent = id => async  e => {\n        const res = await JsonQueryAuth('POST', 'info/getChallangerList', { name: this.state.nameHint, game_id: id })\n        const opponents = res.list.filter(x => x._id !== getCookie('logauti'))\n        this.setState({\n            opponents: opponents,\n            self: res.list.filter(x => x._id === getCookie('logauti'))[0],\n            stage: 'search',\n            game: id\n        })\n    }\n    openChallange = op => async e => {\n        this.setState({\n            opponent: op,\n            stage: 'challenge'\n        })\n    }\n    challenge = async e => {\n        const { opponent, bet, game, self } = this.state;\n        const res = await JsonQueryAuth('POST', 'dashboard/game/challange', {\n            challenger: self._id,\n            challenged: opponent._id,\n            balance: bet,\n            game_id: game\n        });\n        if (res.status === 'ok') {\n            this.toggleChallenge();\n            this.props.load()\n        } else {\n            alert(res.errors[0]);\n        }\n    }\n    render() {\n        let dialogContent, dialogTitle;\n        switch (this.state.stage) {\n            case 'game':\n                dialogTitle = 'Select Game';\n                dialogContent = (\n                    <React.Fragment>\n                        <GridList cellHeight={200} style={MainStyles.gridList}>\n                            {this.state.games.map(g => (\n                                <GridListTile key={g._id} onClick={this.selectOpponent(g._id)} cols={window.innerWidth < 600 ? 2 : 1}>\n                                    <img src={`${HostAddress}gameimg/${g.image}`} alt={'data.name'} />\n                                    <GridListTileBar\n                                        title={g.name}\n                                        subtitle={<span>Platform: {g.platform === 0 ? 'mobile' : 'PC'}</span>}\n                                    />\n                                </GridListTile>\n                            ))\n                            }\n                        </GridList>\n                    </React.Fragment>\n                )\n                break;\n            case 'search':\n                dialogTitle = 'Search Opponent';\n                dialogContent = (\n                    <React.Fragment>\n                        <div>\n                            <TextField\n                                autoComplete=\"off\"\n                                id=\"outlined-search\"\n                                label=\"Search Opponent\"\n                                type=\"search\"\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                                onChange={this.handleChange('nameHint')}\n                                style={{ width: window.innerWidth < 600 ? 'auto' : 400 }}\n                            />\n                        </div>\n                        <div>\n                            <List style={{ height: 300, overflowY: 'scroll' }}>\n                                {this.state.opponents.map(op => (\n                                    <ListItem key={op._id} onClick={this.openChallange(op)}>\n                                        <Avatar alt=\"Remy Sharp\" src={`${HostAddress}${op.image}`} />\n                                        <ListItemText primary={op.full_name} />\n                                    </ListItem>\n                                ))}\n                            </List>\n                        </div>\n                    </React.Fragment>\n                )\n                break;\n            case 'challenge':\n                dialogTitle = 'Challenge';\n                dialogContent = (\n                    <React.Fragment>\n                        <Grid container justify='center' alignItems='center' >\n                            <Grid item xs={12}>\n                                <Grid container spacing={16} justify=\"center\" alignItems=\"center\">\n                                    <Grid item xs={5} style={MainStyles.centerContainer}>\n                                        <Avatar \n                                            alt={this.state.self.full_name}\n                                            src={`${HostAddress}${this.state.self.image}`}\n                                            style={{ width: window.innerWidth < 600 ? 100 : 200, height: window.innerWidth < 600 ? 100 : 200 }} />\n                                        <span style={{ textAlign: 'center', color:'#aaa' }}>{this.state.self.full_name}</span>\n                                    </Grid>\n                                    <Grid item xs={2} style={{ textAlign: 'center', color: ColorPalate.greenLight, fontSize: '1.6rem' }} className='animated heartBeat infinite'>\n                                        <span > VS </span>\n                                    </Grid>\n                                    <Grid item xs={5} style={MainStyles.centerContainer}>\n                                        <Avatar\n                                            alt=\"Remy Sharp\"\n                                            src={`${HostAddress}${this.state.opponent.image}`}\n                                            style={{ width: window.innerWidth < 600 ? 100 : 200, height: window.innerWidth < 600 ? 100 : 200 }} />\n                                        <span style={{ textAlign: 'center', color:'#aaa' }}>{this.state.opponent.full_name}</span>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={12} md={6}>\n                                <TextField\n                                    id=\"standard-select-bets\"\n                                    select\n                                    label=\"Select Bet\"\n                                    value={this.state.bet}\n                                    style={{ width: '100%', marginTop: 20 }}\n                                    onChange={this.handleChange('bet')}\n                                >\n                                    {this.state.bets.map(option => (\n                                        <MenuItem key={option.value} value={option.value}>\n                                            {option.text}\n                                        </MenuItem>\n                                    ))}\n                                </TextField>\n                            </Grid>\n                            <Grid item xs={12} style={MainStyles.centerContainer}>\n                                <Button\n                                    style={{ marginTop: 30, width: '100%', padding: 20, fontSize: '1.3rem', color: ColorPalate.greenLight }}\n                                    onClick={this.challenge}\n                                >\n                                    <i className=\"fas fa-gamepad\"></i>{'\\u00A0'}Challenge\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </React.Fragment>\n                )\n                break;\n        }\n        return (\n            <div style={MainStyles.gameBtn}>\n                <Fab style={{ backgroundColor: '#00c853' }} onClick={this.toggleChallenge} className='animated rubberBand'>\n                    <img src={require('../img/icons/sword.svg')} alt=\"B\" style={{ width: 30 }} />\n                </Fab>\n                <Dialog\n                    open={this.state.isOpen}\n                    onClose={this.toggleChallenge}\n                    TransitionComponent={Transition}\n                    keepMounted>\n                    <DialogTitle>{dialogTitle}</DialogTitle>\n                    <DialogContent>\n                    <div>\n                    {dialogContent}\n                    </div>\n                    </DialogContent>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\n\nconst SideMenu = ({ active, image, name, balance }) => {\n    return (\n        <div style={MainStyles.sideNav}>\n            <div className={styles.NavProfileCard}>\n                <div>\n                    <img src={image} alt=\"Player\" />\n                </div>\n                <div>\n                    <h2>{name}</h2>\n                    <span>Balance : {balance} bp</span>\n                </div>\n            </div>\n            <List style={MainStyles.sideNavList}>\n                <Link to='/dashboard' style={{ textDecoration: 'none', color: ColorPalate.greenLight }}>\n                    <ListItem button >\n                        <ListItemIcon style={{ color: active === 'dashboard' ? ColorPalate.greenLight : ColorPalate.green }}>\n                            <Dashboard />\n                        </ListItemIcon>\n                        <ListItemText inset\n                            primary={<span style={{\n                                color:\n                                    active === 'dashboard' ? ColorPalate.greenLight : ColorPalate.green\n                            }}>\n                                Dashboard</span>} />\n                    </ListItem>\n                </Link>\n                <Link to='/tournament' style={{ textDecoration: 'none', color: ColorPalate.greenLight }}>\n                    <ListItem button>\n                        <ListItemIcon style={{ color: active === 'tournament' ? ColorPalate.greenLight : ColorPalate.green }}>\n                            <Icon className=\"fas fa-trophy\" style={{ marginLeft: -2, transform: 'scale(0.79)' }} />\n                        </ListItemIcon>\n                        <ListItemText inset\n                            primary={<span style={{\n                                color:\n                                    active === 'tournament' ? ColorPalate.greenLight : ColorPalate.green\n                            }}>\n                                Tournament</span>} />\n                    </ListItem>\n                </Link>\n                <Link to='/leaderboard' style={{ textDecoration: 'none', color: ColorPalate.greenLight }}>\n                    <ListItem button>\n                        <ListItemIcon style={{ color: active === 'leaderboard' ? ColorPalate.greenLight : ColorPalate.green }}>\n                            <Icon className=\"fab fa-fort-awesome\" style={{ marginLeft: 2, transform: 'scale(0.79)' }} />\n                        </ListItemIcon>\n                        <ListItemText inset\n                            primary={<span style={{\n                                color:\n                                    active === 'leaderboard' ? ColorPalate.greenLight : ColorPalate.green\n                            }}>\n                                Leaderboard</span>} />\n                    </ListItem>\n                </Link>\n                <Divider />\n                <Link to='/wallet' style={{ textDecoration: 'none', color: ColorPalate.greenLight }}>\n                    <ListItem button>\n                        <ListItemIcon style={{ color: active === 'wallet' ? ColorPalate.greenLight : ColorPalate.green }}>\n                            <AccountBalanceWallet />\n                        </ListItemIcon>\n                        <ListItemText inset\n                            primary={<span style={{\n                                color:\n                                    active === 'wallet' ? ColorPalate.greenLight : ColorPalate.green\n                            }}>\n                                Wallet</span>} />\n                    </ListItem>\n                </Link>\n                <Link to='/history' style={{ textDecoration: 'none', color: ColorPalate.greenLight }}>\n                    <ListItem button>\n                        <ListItemIcon style={{ color: active === 'history' ? ColorPalate.greenLight : ColorPalate.green }}>\n                            <Icon className=\"fas fa-scroll\" style={{ marginLeft: -2, transform: 'scale(0.79)' }} />\n                        </ListItemIcon>\n                        <ListItemText inset\n                            primary={<span style={{\n                                color:\n                                    active === 'history' ? ColorPalate.greenLight : ColorPalate.green\n                            }}>\n                                History</span>} />\n                    </ListItem>\n                </Link>\n                <Link to='/profile' style={{ textDecoration: 'none', color: ColorPalate.greenLight }}>\n                    <ListItem button>\n                        <ListItemIcon style={{ color: active === 'profile' ? ColorPalate.greenLight : ColorPalate.green }}>\n                            <Person />\n                        </ListItemIcon>\n                        <ListItemText inset\n                            primary={<span style={{\n                                color:\n                                    active === 'profile' ? ColorPalate.greenLight : ColorPalate.green\n                            }}>\n                                Profile</span>} />\n                    </ListItem>\n                </Link>\n                <Divider />\n                <Link to='/logout' style={{ textDecoration: 'none', color: ColorPalate.greenLight }}>\n                    <ListItem button>\n                        <ListItemIcon style={{ color: ColorPalate.green }}>\n                            <Icon className=\"fas fa-sign-out-alt\" style={{ marginLeft: 2, transform: 'scale(0.79)' }} />\n                        </ListItemIcon>\n                        <ListItemText inset\n                            primary={<span style={{ color: ColorPalate.green }}>\n                                Tournament</span>} />\n                    </ListItem>\n                </Link>\n            </List>\n        </div>\n    );\n}\n","import React, { Component } from 'react';\nimport { ColorPalate } from './MainStyles';\n\nimport { JsonQueryAuth, HostAddress } from '../Services/Query';\nimport { Grid, Button,TextField,Slide } from '@material-ui/core';\nimport { Dialog, DialogTitle, DialogContent, DialogActions } from '@material-ui/core';\nimport styles from './Cards.module.css';\n\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\nexport class ChallengeCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false,\n            opponent: this.props.opponent,\n            game: this.props.game,\n            bet: this.props.bet,\n            isChallenger: this.props.isChallenger\n        }\n    }\n    toggleChallenge = () => {\n        this.setState({\n            isOpen: !this.state.isOpen,\n        })\n    }\n    acceptChallenge = async () => {\n        const res = await JsonQueryAuth('POST', 'dashboard/game/challange/accept', { match_id: this.props.id })\n        console.log(res);\n        if (res.status === 'ok') {\n            this.props.load();\n            this.toggleChallenge();\n        }\n        else {\n            alert(res.errors[0]);\n        }\n    }\n    cancelChallenge = async () => {\n        const res = await JsonQueryAuth('POST', 'dashboard/game/challange/decline', { match_id: this.props.id })\n        if (res.status === 'ok') {\n            this.props.load();\n            this.toggleChallenge();\n        }\n        else {\n            alert(res.errors[0]);\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Grid item container xs={12} md={4} justify='center' alignItems='center' style={{ marginBottom: 8 }}>\n                    <div className={`${styles.bCard} animated bounceInRight`} onClick={this.toggleChallenge}>\n                        <div>\n                            <img src={`${HostAddress}gameimg/${this.state.game.image}`} alt='game'/>\n                            <h1>{this.state.game.name}</h1>\n                            <h2>Bet: {this.state.bet} BP</h2>\n                            <h2>{this.state.opponent.full_name}</h2>\n                        </div>\n                        <div>\n                            <img src={`${HostAddress}${this.state.opponent.image}`} alt='opponent' />\n                        </div>\n                    </div>\n                </Grid>\n                <Dialog open={this.state.isOpen} onClose={this.toggleChallenge}>\n                    <DialogTitle>I want to</DialogTitle>\n                    <DialogContent>\n                        Choose the type of action you want.\n                    </DialogContent>\n                    <DialogActions>\n                        {!this.state.isChallenger ? <Button onClick={this.acceptChallenge} style={{ color: 'green', fontWeight: 'bolder' }}>Accept Challenge</Button> : ''}\n                        <Button onClick={this.cancelChallenge} style={{ color: 'red', fontWeight: 'bolder' }}>Cancel Challenge</Button>\n                    </DialogActions>\n                </Dialog>\n            </React.Fragment>\n        )\n    }\n}\n\n\n\nexport class MatchCard extends Component {\n    redirect = id => async e => {\n        this.props.history.push(`/match/${id}`)\n    }\n    render() {\n        const { id, bet, game, opponent } = this.props\n        return (\n            <Grid item container xs={12} md={4} lg={3} justify='center' alignItems='center' style={{ marginBottom: 8 }} >\n                <div className={`${styles.cCard} animated bounceInLeft`} onClick={this.redirect(id)}>\n                    <div>\n                        <img src={`${HostAddress}gameimg/${game.image}`} />\n                    </div>\n                    <div>\n                        <img src={`${HostAddress}${opponent.image}`} />\n                    </div>\n                    <div>\n                        <h1> VS </h1>\n                        <h2>{opponent.full_name}</h2>\n                        <br />\n                        <h3>{game.name}</h3>\n                        <h3>{bet} BP</h3>\n                    </div>\n                </div>\n            </Grid>\n        )\n    }\n}\n\nexport class TournamentCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false,\n            game: this.props.game,\n            isParticipating: this.props.isParticipating,\n            player_count: this.props.player_count,\n            tournament_id: this.props.tournament_id,\n            image:this.props.image,\n            current_available:this.props.current_available,\n            entry_fee:this.props.entry_fee,\n            prize:this.props.prize,\n        }\n       \n    }\n    toggleJoin = () => {\n        if (!this.state.isParticipating)\n            this.setState({\n                isOpen: !this.state.isOpen,\n            })\n        else {\n            console.log(this.state.tournament_id)\n            this.props.enterTournament(this.state.tournament_id)\n        }\n    }\n    joinTournament = id => async e => {\n        console.log(id)\n        const res = await JsonQueryAuth('post', `tournament/join/`, { tournament_id: this.state.tournament_id })\n        if (res.status === 'ok') {\n            this.props.load()\n        } else {\n            this.toggleJoin();\n            alert(\"Tournament is not valid\");\n        }\n    }\n\n    render() {\n\n        // if(this.props.custom_fields) {\n        //     try {\n        //         var custom_fields = JSON.parse(this.props.custom_fields);\n        //     } catch(e) {\n        //         var custom_fields = [];\n        //     }\n        // } else {\n        //     var custom_fields = [];\n        // }\n        return (\n            <React.Fragment>\n                <Grid item container xs={12} md={4} lg={4} justify='center' alignItems='center' style={{ marginBottom: 8 }} >\n                    <div className={styles.gameCard} onClick={this.toggleJoin}>\n                        <div>\n                            <img src={(this.props.image && this.props.image!='') ? `${HostAddress}tournamentimg/${this.props.image}`:`${HostAddress}gameimg/${this.props.game.image}`} />\n                        </div>\n                        <h1>{this.props.game.name}  </h1>\n                        <h2>{this.props.game.platform ? 'mobile game' : 'pc game'}</h2>\n                        <h2>Slot : {this.props.current_available + '/' +this.props.player_count }</h2>\n                        <h2>Prize Amount : {this.props.prize }</h2>\n                        <h2>Entry Fees : {this.props.entry_fee }</h2>\n                        {/* {custom_fields.map((custom,index) =>\n                            <h2 key={custom.field_id}>{custom.label_name} : {custom.field_value }</h2>                        \n                        )} */}\n                    </div>\n                </Grid>\n                <Dialog open={this.state.isOpen} onClose={this.toggleJoin}>\n                    <DialogTitle>Join Tournament</DialogTitle>\n                    <DialogContent>\n                        Do you want to join this tournament?\n                    </DialogContent>\n                    <DialogActions>\n                        <Button style={{ color: ColorPalate.green, fontWeight: 'bolder' }} onClick={this.joinTournament(this.props.tournament_id)}>\n                            Join\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </React.Fragment>\n        )\n    }\n}\n\n\n\nexport class GameCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false,\n            game: this.props.game,\n            isAddGame:false,\n            contact_string:this.props.game.contact_string\n        };;\n    }\n    toggleGame = () => {\n        this.setState({\n            isOpen: !this.state.isOpen,\n        })\n    }\n    removeGame = id => async e => {\n        console.log(id)\n        const res = await JsonQueryAuth('get', `dashboard/game/remove/${id}`)\n        if (res.status === 'ok')\n            this.props.load()\n    }\n    toggleAddGame = () => {\n        this.toggleGame();\n        this.setState({\n            isAddGame: !this.state.isAddGame,\n        })\n    }\n    handleChange = name => e => {\n        this.setState({\n            [name]: e.target.value\n        })\n    }\n    addGameSubmit = async e =>{\n        e.preventDefault()\n        const {contact_string } = this.state;\n        var game_id = this.props.game._id;\n        const res = await JsonQueryAuth('post', 'dashboard/game/updateid', { game_id, contact_string})\n        if(res.errors) {\n            //console.log(res.errors)\n        }else if(res.status === 'ok') {\n            alert('gameid updated succenssfully')\n            this.setState({\n                isAddGame: !this.state.isAddGame,\n            });\n        }else if(res.status === 'fail') {\n            alert(res.msg);\n        }\n    }\n    render() {\n        let content;\n        console.log('-------------');\n        console.log(this.props.game);\n        content = (\n            <form onSubmit={this.addGameSubmit}>\n                <div>\n                    <TextField\n                        autoComplete=\"off\"\n                        id=\"outlined-search\"\n                        label={this.props.game.requirement}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        value={this.state.contact_string}\n                        onChange={this.handleChange('contact_string')}\n                        style={{ width: window.innerWidth < 600 ? 'auto' : 400 }}\n                    />\n                </div>\n                <Button style={{color: '#157'}} type='submit' onClick={this.addGameSubmit}>\n                    Update Id\n                </Button>\n            </form>\n        );\n        return (\n            <React.Fragment>\n                <Grid item container xs={12} md={4} lg={4} justify='center' alignItems='center' style={{ marginBottom: 8 }} >\n                    <div className={styles.gameCard} onClick={this.toggleGame}>\n                        <div>\n                            <img src={`${HostAddress}gameimg/${this.props.game.image}`} />\n                        </div>\n                        <h1>{this.props.game.name}</h1>\n                        <h2>{this.props.game.platform ? 'mobile game' : 'pc game'}</h2>\n                        {this.props.game.contact_string &&\n                            <h4> GameId : {this.props.game.contact_string}</h4>\n                        }\n                    </div>\n                </Grid>\n                <Dialog open={this.state.isOpen} onClose={this.toggleGame}>\n                    <DialogTitle>{this.props.game.name}</DialogTitle>\n                    <DialogContent>\n                        <h4>Game Type :  {this.props.game.platform ? 'mobile game' : 'pc game'}</h4>\n                        <h4>Game id :  {this.props.game.requirement}</h4>\n                        <h4>Player Count :  {this.props.game.player_count}</h4>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button style={{ color: 'green', fontWeight: 'bolder' }} onClick={this.toggleAddGame}>\n                            Change Id\n                        </Button>\n                        <Button style={{ color: 'red', fontWeight: 'bolder' }} onClick={this.removeGame(this.props.game._id)}>\n                            Remove Game\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.isAddGame}\n                    onClose={this.toggleAddGame}\n                    TransitionComponent={Transition}\n                    keepMounted>\n                    <DialogTitle>Games</DialogTitle>\n                    <DialogContent> \n                        <div>\n                            {content}\n                        </div>\n                    </DialogContent>\n                </Dialog>\n            </React.Fragment>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { MainStyles, myTheme } from '../Components/MainStyles';\nimport { MuiThemeProvider } from '@material-ui/core'\n\nimport { JsonQueryAuth, HostAddress, getCookie } from '../Services/Query'\nimport { Navigation } from '../Components/Navigation';\nimport { MatchCard, ChallengeCard, GameCard } from '../Components/Cards';\n\nimport { Grid, Typography, Button } from '@material-ui/core';\nimport { GridList, GridListTile, GridListTileBar } from '@material-ui/core';\nimport { TextField } from '@material-ui/core';\nimport { ExpansionPanel, ExpansionPanelDetails, ExpansionPanelSummary } from '@material-ui/core';\nimport { Dialog, DialogTitle, DialogContent} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Slide from '@material-ui/core/Slide';\nimport './Dashboard.css'\n\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\n\nexport class Dashboard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isgameSelect: false,\n            isAddGame: false,\n            addGames: [],\n            challenges: [],\n            gameList: [],\n            games: [],\n            matches: [],\n            tournamentMatches: [],\n            game_id: '',\n            game_requirement: '',\n            contact_string: ''\n        }\n    }\n    componentDidMount() {\n        document.body.classList.remove('body-a')\n        this.load()\n    }\n\n    handleChange = name => e => {\n        this.setState({\n            [name]: e.target.value\n        })\n    }\n    load = async () => {\n        const res = await JsonQueryAuth('POST', 'dashboard/', {});\n        let { gamePocket, gameList, challenges, matches, feeds } = res;\n        challenges = challenges.map(ch => {\n            return {\n                _id: ch._id,\n                opponent: ch.challenger._id === getCookie('logauti') ? ch.challenged : ch.challenger,\n                game: ch.game,\n                bet: ch.balance,\n                isChallenger: ch.challenger._id === getCookie('logauti')\n            }\n        });\n        matches = matches.map(ch => {\n            return {\n                _id: ch._id,\n                opponent: ch.challenger._id === getCookie('logauti') ? ch.challenged : ch.challenger,\n                game: ch.game,\n                bet: ch.balance,\n                isTournament: ch.is_tournament\n            }\n        });\n        this.setState({\n            challenges: challenges,\n            matches: matches.filter(m => !m.isTournament),\n            tournamentMatches: matches.filter(m => m.isTournament),\n            games: gamePocket,\n            gameList: gameList\n        });\n        console.log(this.state.games);\n    }\n    toggleAddGame = () => {\n        this.setState({\n            isAddGame: !this.state.isAddGame,\n            isgameSelect: true,\n        })\n    }\n    gameSelect = (id, r) => e => {\n        this.setState({\n            isgameSelect: false,\n            game_id: id,\n            game_requirement: r\n        })\n    }\n    addGameSubmit = async e =>{\n        e.preventDefault()\n        const { game_id, contact_string } = this.state\n        const res = await JsonQueryAuth('post', 'dashboard/game/add', { game_id, contact_string})\n        if(res.errors) {\n            //console.log(res.errors)\n        }else if(res.status === 'ok') {\n            //alert('game added succenssfully')\n            this.toggleAddGame()\n            this.load()\n        }else if(res.status === 'fail') {\n            alert(res.msg);\n        }\n    }\n    \n\n    render() {\n        let content;\n        if (this.state.isgameSelect) {\n            content = (<GridList cellHeight={200} style={MainStyles.gridList}>\n                {this.state.gameList.map(g => (\n                    <GridListTile key={g._id}\n                        cols={window.innerWidth < 600 ? 2 : 1}\n                        onClick={this.gameSelect(g._id, g.requirement)}>\n                        <img src={`${HostAddress}gameimg/${g.image}`} alt={'data.name'} />\n                        <GridListTileBar\n                            title={g.name}\n                            subtitle={<span>Platform: {g.platform === 0 ? 'mobile' : 'PC'}</span>}\n                        />\n                    </GridListTile>\n                ))\n                }\n            </GridList>)\n        } else {\n            content = (\n                <form onSubmit={this.addGameSubmit}>\n                    <div>\n                        <TextField\n                            autoComplete=\"off\"\n                            id=\"outlined-search\"\n                            label={this.state.game_requirement}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            onChange={this.handleChange('contact_string')}\n                            style={{ width: window.innerWidth < 600 ? 'auto' : 400 }}\n                        />\n                    </div>\n                    <Button style={{color: '#157'}} type='submit'>\n                        add Game\n                    </Button>\n                </form>\n            )\n        }\n\n        return (\n            <MuiThemeProvider theme={myTheme}>\n            <div className='Dashboard Page'>\n                <Navigation active='dashboard' load={this.load} />\n                <section className='ContainerCenter'>\n                    <ExpansionPanel style={MainStyles.expansion} defaultExpanded>\n                        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon style={MainStyles.header} />}>\n                            <Typography style={MainStyles.header}><i className=\"fas fa-puzzle-piece\"></i> Challenges</Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails >\n                            <Grid container spacing={16}>\n                                {this.state.challenges.map(clng => <ChallengeCard key={clng._id}\n                                    bet={clng.bet}\n                                    game={clng.game}\n                                    opponent={clng.opponent}\n                                    isChallenger={clng.isChallenger}\n                                    id={clng._id}\n                                    load={this.load}\n                                />)}\n                            </Grid>\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                    <ExpansionPanel style={MainStyles.expansion} defaultExpanded>\n                        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon style={MainStyles.header} />}>\n                            <Typography style={MainStyles.header}><i className=\"fas fa-gamepad\"></i> Challenge Matches</Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails>\n                            <Grid container spacing={16}>\n                                {this.state.matches.map(m => <MatchCard key={m._id}\n                                    bet={m.bet}\n                                    game={m.game}\n                                    opponent={m.opponent}\n                                    id={m._id}\n                                    history={this.props.history}\n                                />)}\n                            </Grid>\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                    <ExpansionPanel style={MainStyles.expansion} defaultExpanded>\n                        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon style={MainStyles.header} />}>\n                            <Typography style={MainStyles.header}><i className=\"fas fa-gamepad\"></i> Tournament Matches</Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails>\n                            <Grid container spacing={16}>\n                                {this.state.tournamentMatches.map(m => <MatchCard key={m._id}\n                                    bet={m.bet}\n                                    game={m.game}\n                                    opponent={m.opponent}\n                                    image={m.image}\n                                    id={m._id}\n                                    image={m.image}\n                                    history={this.props.history}\n                                />)}\n                            </Grid>\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                    <ExpansionPanel style={MainStyles.expansion} defaultExpanded>\n                        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon style={MainStyles.header} />}>\n                            <Typography style={MainStyles.header}><i className=\"fas fa-dice\"></i> Game Librery</Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails>\n                            <Grid container spacing={16}>\n                                {this.state.games.map(game => <GameCard key={game._id} game={game} load={this.load} />)}\n                                <Grid item xs={12}>\n                                    <Button style={{ ...MainStyles.header, width: '100%' }} onClick={this.toggleAddGame}>\n                                        Add game\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                    <ExpansionPanel style={MainStyles.expansion} defaultExpanded>\n                        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon style={MainStyles.header} />}>\n                            <Typography style={MainStyles.header}><i className=\"fab fa-pushed\"></i> Feeds</Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails>\n                            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\n                            sit amet blandit leo lobortis eget.\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                </section>\n                <Dialog\n                    open={this.state.isAddGame}\n                    onClose={this.toggleAddGame}\n                    TransitionComponent={Transition}\n                    keepMounted>\n                    <DialogTitle>Games</DialogTitle>\n                    <DialogContent>\n                        <div>\n                            {content}\n                        </div>\n                    </DialogContent>\n                </Dialog>\n            </div>\n            </MuiThemeProvider>\n        );\n    }\n};","import React, { Component } from 'react';\n\nimport { JsonQueryAuth } from '../Services/Query'\n\nimport { Table, TableHead, TableBody, TableCell, TableRow, TablePagination } from '@material-ui/core';\n\n\nexport class MatchTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            columns: ['OPPONENT', 'GAME', 'BET', 'STATUS'],\n            page: 0,\n            rowsPerPage: 10,\n        }\n    }\n    componentDidMount() {\n        this.load()\n    }\n\n    load = async () => {\n        const res = await JsonQueryAuth('post','log', {})\n        console.log(res)\n        if(res.status === 'ok') {\n            this.setState({\n                data : res.match_results\n            })\n        }\n\n    }\n    handleChangePage = (event, page) => {\n        this.setState({ page });\n    };\n\n    handleChangeRowsPerPage = event => {\n        this.setState({ rowsPerPage: event.target.value });\n    };\n    render() {\n        return (\n            <React.Fragment>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            {this.state.columns.map(column =>\n                                <TableCell key={column}>\n                                    {column}\n                                </TableCell>\n                            )}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {this.state.data ? this.state.data\n                        .slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage)\n                        .map(row =>\n                            <TableRow key={row.id}>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {row.opponent.full_name}\n                                </TableCell>\n                                <TableCell>{row.game_name}</TableCell>\n                                <TableCell>{row.bet}</TableCell>\n                                <TableCell>{row.status > 0 ? <span style={{ color: 'GREEN' }}>WON</span> : <span style={{ color: 'red' }}>LOST</span>}</TableCell>\n                            </TableRow>\n                        ) : {}}\n                    </TableBody>\n                </Table>\n                <TablePagination\n                    rowsPerPageOptions={[5,10,20]}\n                    component=\"div\"\n                    count={this.state.data.length}\n                    rowsPerPage={this.state.rowsPerPage}\n                    page={this.state.page}\n                    backIconButtonProps={{\n                        'aria-label': 'Previous Page',\n                    }}\n                    nextIconButtonProps={{\n                        'aria-label': 'Next Page',\n                    }}\n                    onChangePage={this.handleChangePage}\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                />\n            </React.Fragment>\n        )\n    }\n}\n\n\nexport class WalletTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            transaction_log : [],\n            columns: ['BP', 'Date', 'Status'],\n            page: 0,\n            rowsPerPage: 10,\n        }\n    }\n\n    componentDidMount() {\n        this.load()\n    }\n\n    load = async () => {\n        const res = await JsonQueryAuth('post','wallet', {})\n        console.log(res)\n        if(res.status === 'ok') {\n            this.setState({\n                transaction_log : res.transaction_log\n            })\n        }\n\n    }\n\n    handleChangePage = (event, page) => {\n        this.setState({ page });\n    };\n\n    handleChangeRowsPerPage = event => {\n        this.setState({ rowsPerPage: event.target.value });\n    };\n    render() {\n        return (\n            <React.Fragment>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            {this.state.columns.map(column =>\n                                <TableCell key={column}>\n                                    {column}\n                                </TableCell>\n                            )}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {this.state.transaction_log ? this.state.transaction_log\n                        .slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage)\n                        .map(row =>\n                            <TableRow key={row._id}>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {row.bp}\n                                </TableCell>\n                                <TableCell>{row.date}</TableCell>\n                                <TableCell>{row.mode > 0 ? <span style={{ color: 'GREEN' }}>{row.text}</span> : <span style={{ color: 'red' }}>{row.text}</span>}</TableCell>\n                            </TableRow>\n                        ) : {}}\n                    </TableBody>\n                </Table>\n                <TablePagination\n                    rowsPerPageOptions={[5,10,20]}\n                    component=\"div\"\n                    count={this.state.transaction_log ? this.state.transaction_log.length : 0}\n                    rowsPerPage={this.state.rowsPerPage}\n                    page={this.state.page}\n                    backIconButtonProps={{\n                        'aria-label': 'Previous Page',\n                    }}\n                    nextIconButtonProps={{\n                        'aria-label': 'Next Page',\n                    }}\n                    onChangePage={this.handleChangePage}\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                />\n            </React.Fragment>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { myTheme, ColorPalate } from '../Components/MainStyles';\nimport { MuiThemeProvider } from '@material-ui/core'\n\nimport { Navigation } from '../Components/Navigation';\nimport { MatchTable } from '../Components/DataTable';\n\nimport { Paper } from '@material-ui/core';\n\nexport class History extends Component {\n\n    render() {\n        return (\n            <MuiThemeProvider theme={myTheme}>\n            <div className='History Page'>\n                <Navigation active='history' />\n                <section className='ContainerCenter'>\n                    <Paper className='Block'>\n                        <h1 style={{color: ColorPalate.green}}><i className=\"fas fa-chart-bar\"></i> History Log</h1>\n                        <div style={{ width: '100%', overflowX: 'scroll' }}>\n                            <MatchTable />\n                        </div>\n\n                    </Paper>\n                </section>\n            </div>\n            </MuiThemeProvider>\n        )\n    }\n}","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom'\nimport { MainStyles, ColorPalate, myTheme } from '../Components/MainStyles';\nimport { MuiThemeProvider } from '@material-ui/core'\n\nimport { JsonQueryAuth, HostAddress } from '../Services/Query'\n\nimport { Navigation } from '../Components/Navigation';\n\nimport { Grid } from '@material-ui/core'\nimport { List, ListItem, ListItemText, Avatar, ListSubheader } from '@material-ui/core'\n\n\nexport class Leaderboard extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            champions: [],\n            achieves: {}\n        }\n    }\n    componentDidMount() {\n        this.load()\n    }\n    load = async () => {\n        const res = await JsonQueryAuth('post', 'leaderboard', {})\n        const { champions, achieves } = res\n        this.setState({\n            champions, achieves\n        })\n    }\n    render() {\n        return (\n            <MuiThemeProvider theme={myTheme}>\n            <div className='Leaderboard Page'>\n                <Navigation active='leaderboard' load={this.load}/>\n                <section className='ContainerCenter'>\n                    <Grid container>\n                        <List  style={{ ...MainStyles.paper, width: '100%', margin: '20px' }}\n                    subheader={<ListSubheader component=\"div\" style={{ color: ColorPalate.greenLight }}>Top Rankings</ListSubheader>}\n                >\n                            {\n                                this.state.champions.map(champ => (\n                                    <Link to={`/profileOther/${champ._id}`} key={champ._id} style={{ textDecoration: 'none', color: ColorPalate.greenLight }}>\n                                    <ListItem button>\n                                        <Avatar\n                                            alt=\"Remy Sharp\"\n                                            src={`${HostAddress}${champ.img}`}\n                                            style={{ width: 50, height: 50 }} />\n                                        <ListItemText\n                                            primary={<span style={{ color: ColorPalate.green, fontSize: '1.4rem' }}>RANK {champ.rank} | {champ.full_name}</span>}\n                                            secondary={<span style={{ color: ColorPalate.greenLight, fontSize: '1.2rem' }}> ({champ.leader_point} bp)</span>} />\n                                    </ListItem>\n                                    </Link>\n                                ))\n                            }\n\n                        </List>\n\n                    </Grid>\n                </section>\n            </div>\n            </MuiThemeProvider>\n        );\n    }\n};","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport { MainStyles, ColorPalate, myTheme } from '../Components/MainStyles';\n\nimport { JsonQueryAuth, PostQueryAuth, HostAddress, getCookie } from '../Services/Query'\nimport openSocket from 'socket.io-client';\n\nimport { Grid, Paper } from '@material-ui/core'\nimport { TextField, Button, Fab } from '@material-ui/core'\nimport { Card, CardActionArea, CardMedia, CardContent } from '@material-ui/core'\nimport { List, ListItem, ListItemText, Avatar } from '@material-ui/core'\nimport { Dialog, DialogTitle, DialogContent, DialogActions, DialogContentText } from '@material-ui/core';\nimport { MuiThemeProvider } from '@material-ui/core'\n\nconst socket = openSocket(HostAddress);\n\nfunction LoadChats(chat_id, cb) {\n    const responseUrl = \"msgcame\" + chat_id;\n    socket.on(responseUrl, data => {\n        cb(data)\n    })\n}\n\nexport class Match extends Component {\n    constructor(props) {\n        super(props)\n        const urlFragments = window.location.href.split('/');\n        const match_id = urlFragments[urlFragments.length - 1];\n        this.state = {\n            match_id: match_id,\n            bet: '',\n            challenger: {},\n            challenged: {},\n            game: {},\n            time: '',\n            sender: '',\n            state: '',\n            chat_id: '',\n            contact_string: '',\n            chatVisible: false,\n            is_c : 0,\n            isAdmitDefeat : false,\n            isClaimVectory : false,\n            image:''\n        }\n    }\n    componentDidMount() {\n        this.load()\n    }\n    load = async e => {\n        \n        const res = await JsonQueryAuth('post', `match/m/${this.state.match_id}`, {})\n        if (res.status === 'ok') {\n            const { game, challenger, challenged, chat_id, sender, contact_string, time, bet,image } = res;\n            const myId = getCookie('logauti')\n            let is_c = 0\n            if(myId === challenger._id) is_c = 1;\n            this.setState({\n                game, challenger, challenged, chat_id, sender, contact_string, time, bet, is_c, chatVisible: true,image\n            });\n        }\n    }\n    toggleAdmitDefeat = () => {\n        this.setState({\n            isAdmitDefeat : !this.state.isAdmitDefeat\n        })\n    }\n    toggleClaimVictory = () => {\n        this.setState({\n            isClaimVectory : !this.state.isClaimVectory\n        })\n    }\n    claimVictory = async e => {\n        e.preventDefault()\n        const imageFile = e.target.files[0]\n        let x = imageFile.name.split('.');\n        x = x[x.length - 1]\n        let fd = new FormData()\n        fd.append('image', imageFile, `${this.state.match_id}.${x}`)\n        fd.append('m_id', this.state.match_id)\n        fd.append('is_c', this.state.is_c)\n        const res = await PostQueryAuth('match/claimVectory', fd)\n        if (res.status === 'ok') {\n            this.toggleClaimVictory();\n            alert(\"victory claimed successfully\");\n        }\n    }\n    admitDefeat = async () => {\n        const data = {\n            m_id : this.state.match_id,\n            is_c : this.state.is_c\n        }\n        const res = await JsonQueryAuth('post', 'match/admitDefeat', data)\n        if(res.status === 'ok') {\n            this.props.history.push('/dashboard')\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <MuiThemeProvider theme={myTheme}>\n                    <div className='Match Page'>\n                        <Grid container justify='center' alignItems='center' >\n                            <Grid item xs={12} md={4} container justify='center' alignItems='center' >\n                                <Card style={{ width: '100%', margin: '20px' }}>\n                                    <CardActionArea>\n                                        <CardMedia\n                                            style={{ height: 200 }}\n                                            image={(this.state.image && this.state.image!='') ? `${HostAddress}tournamentimg/${this.state.image}`:`${HostAddress}gameimg/${this.state.game.image}`}\n                                            title={this.state.game.name}\n                                        />\n                                        <CardContent style={{ ...MainStyles.paper, color: ColorPalate.greenLight }}>\n                                            <h2>{this.state.game.name}</h2>\n                                        </CardContent>\n                                    </CardActionArea>\n                                </Card>\n                                <List style={{ ...MainStyles.paper, width: '100%', margin: '20px' }}>\n                                    <ListItem button >\n                                        <ListItemText\n                                            primary={<span style={{ color: ColorPalate.green, fontSize: '1.4rem' }}> Match Id </span>}\n                                            secondary={<span style={{ color: ColorPalate.greenLight, fontSize: '1.2rem' }}> {this.state.match_id}</span>} />\n                                    </ListItem>\n                                    <ListItem button >\n                                        <ListItemText\n                                            primary={<span style={{ color: ColorPalate.green, fontSize: '1.4rem' }}> Opponent's  Contact</span>}\n                                            secondary={<span style={{ color: ColorPalate.greenLight, fontSize: '1.2rem' }}> {this.state.contact_string} </span>} />\n                                    </ListItem>\n                                    <Link to={`/profileOther/${this.state.challenged._id}`} style={{ textDecoration: 'none', color: ColorPalate.greenLight }}>\n                                    <ListItem button>\n                                        <Avatar\n                                            alt=\"Remy Sharp\"\n                                            src={`${HostAddress}user/${this.state.challenger.folder}/${this.state.challenger.image}`}\n                                            style={{ width: 50, height: 50 }} />\n                                        <ListItemText\n                                            primary={<span style={{ color: ColorPalate.green, fontSize: '1.4rem' }}> Challenger </span>}\n                                            secondary={<span style={{ color: ColorPalate.greenLight, fontSize: '1.2rem' }}> {this.state.challenger.full_name} </span>} />\n                                    </ListItem>\n                                    </Link>\n                                    <Link to={`/profileOther/${this.state.challenged._id}`} style={{ textDecoration: 'none', color: ColorPalate.greenLight }}>\n                                    <ListItem button>\n                                        <Avatar\n                                            alt=\"Remy Sharp\"\n                                            src={`${HostAddress}user/${this.state.challenged.folder}/${this.state.challenged.image}`}\n                                            style={{ width: 50, height: 50 }} />\n                                        <ListItemText\n                                            primary={<span style={{ color: ColorPalate.green, fontSize: '1.4rem' }}> challenged </span>}\n                                            secondary={<span style={{ color: ColorPalate.greenLight, fontSize: '1.2rem' }}> {this.state.challenged.full_name} </span>} />\n                                    </ListItem>\n                                    </Link>\n                                    <ListItem button>\n                                        <ListItemText\n                                            primary={<span style={{ color: ColorPalate.green, fontSize: '1.4rem' }}> bet </span>}\n                                            secondary={<span style={{ color: ColorPalate.greenLight, fontSize: '1.2rem' }}>{this.state.bet}  BP</span>} />\n                                    </ListItem>\n                                </List>\n                            </Grid>\n                            <Grid item xs={12} md={8} style={{ padding: 20 }}>\n                                <Paper style={{ ...MainStyles.paper, padding: 16 }}>\n                                    <h2 style={{ color: ColorPalate.green }}>Evaluation</h2>\n                                    <Button variant='outlined'  onClick={this.toggleClaimVictory} style={{ width: '40%', margin: '2.5%', padding: 16, color: ColorPalate.greenLight }}>Clain Victory</Button>\n                                    <Button variant='outlined' onClick={this.toggleAdmitDefeat} style={{ width: '40%', margin: '2.5%', padding: 16, color: ColorPalate.greenLight }}>Admit Defeat</Button>\n                                </Paper>\n                                <Paper style={{ ...MainStyles.paper, padding: 16, height: '60vh', marginTop: 20 }}>\n                                    <h2 style={{ color: ColorPalate.green }}>Chat</h2>{\n                                        this.state.chatVisible ?\n                                            <ChatBox chat_id={this.state.chat_id} chat_id={this.state.chat_id} sender={this.state.sender} />\n                                            : ''}\n                                </Paper>\n                            </Grid>\n                        </Grid>\n                    </div>\n                    <Dialog\n                        open={this.state.isClaimVectory}\n                        onClose={this.toggleClaimVictory}\n                        keepMounted>\n                        <DialogTitle>UPLOAD SCREENSHOT</DialogTitle>\n                        <DialogContent>\n                            <div>\n                                <form encType=\"multipart/form-data\">\n                                    <Button style={{ margin: '1vw', width: '90%' }}>\n                                        <input type='file'\n                                            style={{ width: '100%', opacity: 0, position: 'absolute' }}\n                                            onChange={this.claimVictory} />\n                                        <span><i className=\"fas fa-upload\"></i> upload screenShot</span>\n                                    </Button>\n                                </form>\n                            </div>\n                        </DialogContent>\n                    </Dialog>\n                    <Dialog open={this.state.isAdmitDefeat} onClose={this.toggleAdmitDefeat} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\">ADMIT DEFEAT</DialogTitle>\n                        <DialogContent>\n                        <DialogContentText>\n                            Do you really want to admit defeat?\n                        </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                        <Button onClick={this.admitDefeat} color='primary'>\n                            Ok\n                        </Button>\n                        <Button onClick={this.toggleAdmitDefeat} color='secondary'>\n                            Cancel\n                        </Button>\n                        </DialogActions>\n                    </Dialog>\n                </MuiThemeProvider>\n            </React.Fragment>\n        )\n    }\n}\n\nclass ChatBox extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            chat_id: this.props.chat_id,\n            messages: [],\n            message: ''\n        }\n        this.chatbox = React.createRef()\n    }\n\n    componentDidMount() {\n        this.load();\n    }\n    handleChange = name => e => {\n        this.setState({\n            [name]: e.target.value\n        })\n    }\n    load = async () => {\n        LoadChats(this.state.chat_id, (data) => {\n            this.setState({\n                messages: data.chat.log\n            })\n            const chatbox = this.chatbox.current\n            if(chatbox !== null && chatbox !== undefined)\n            chatbox.scrollTop = chatbox.scrollHeight\n        })\n        socket.emit('chatResponse', {\n            chatId: this.state.chat_id\n        })\n    }\n    sendMsg = async e => {\n        e.preventDefault();\n        if (this.state.message.length > 0) {\n            socket.emit('chatRequest', {\n                chatId: this.props.chat_id,\n                col: 1,\n                sender: this.props.sender,\n                text: this.state.message\n            })\n            this.setState({\n                message: ''\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Grid container>\n                    <Grid item xs={12}>\n                        <div ref={this.chatbox} style={{width: '100%', height: '40vh',overflowY: 'scroll', overflowX:'hidden'}}>\n                        <div>\n                        {this.state.messages.map(msg => {\n\n                                return (\n                                    <div key={msg._id} style={{margin: 10, display:'flex', width:'100%'\n                                     }}>\n                                     <div style={this.props.sender === msg.name._id? {width: '10%'} : {}}></div>\n                                        <Avatar\n                                            alt=\"Remy Sharp\"\n                                            src={`${HostAddress}user/${msg.name.folder}/${msg.name.image}`}\n                                            style={{ width: 50, height: 50 }} />\n                                        <div className='msgBubble' style={{width:'80%'}}>\n                                            <h4 style={{}}>{msg.name.full_name}</h4>\n                                            <h5 style={{}}>{msg.text}</h5>\n                                        </div>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                        </div>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <form onSubmit={this.sendMsg} className='kami'>\n                            <TextField className='kal' style={{ width: window.innerWidth < 600 ? '76%' : '84%' }}\n                                label='message'\n                                margin='dense'\n                                value={this.state.message}\n                                onChange={this.handleChange('message')}\n                                helperText={'write message'}\n\n                            />\n                            <Fab type='submit' style={{ fontSize: 24, color: ColorPalate.greenLight, backgroundColor: '#444' }}>\n                                <i className=\"fas fa-paper-plane\"></i>\n                            </Fab>\n                        </form>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n\n}","import React, { Component } from 'react';\nimport { MainStyles, ColorPalate, myTheme } from '../Components/MainStyles';\nimport { MuiThemeProvider } from '@material-ui/core'\nimport {  GameCard } from '../Components/Cards';\n\nimport { JsonQueryAuth, HostAddress, PostQueryAuth } from '../Services/Query'\n\nimport { Navigation } from '../Components/Navigation';\n\nimport { Paper, Grid, LinearProgress, TextField } from '@material-ui/core';\nimport { Card, CardMedia, CardActionArea, CardContent, CardActions, Typography, Button, Divider, CircularProgress } from '@material-ui/core';\nimport { Dialog, DialogTitle, DialogContent} from '@material-ui/core';\n\nexport class Profile extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isDataAvailable: false,\n            user: '',\n            image: require('../img/default.jpg'),\n            name: '',\n            match: {},\n            level: {},\n            isChangePassword : false,\n            password : '',\n            new_password: '',\n            msg_password : '',\n            msg_new_password: '',\n            games:[]\n        }\n    }\n    handleChange = name => e => {\n        this.setState({\n            [name]: e.target.value\n        })\n    } \n\n    componentDidMount() {\n        this.load()\n    }\n    load = async e => {\n        const res = await JsonQueryAuth('post', 'profile', {});\n        if (res.status === 'ok') {\n            this.setState({\n                isDataAvailable: true,\n                user: res.user,\n                name: res.user.full_name,\n                image: `${HostAddress}user/${res.user.folder}/${res.user.image}`,\n                match: res.match,\n                level: res.level\n            });\n            const res1 = await JsonQueryAuth('POST', 'info/getGames', {})\n            this.setState({\n                games: res1\n            });\n        }\n    }\n    toggleChangePassword = () => {\n        this.setState({\n            isChangePassword : !this.state.isChangePassword\n        })\n    }\n    clearMsg = () => {\n        this.setState({\n            msg_password: '',\n            msg_new_password: ''\n        });\n    }\n    changePassword = async e => {\n        e.preventDefault()\n        this.clearMsg()\n        const { password, new_password } = this.state\n        const res = await JsonQueryAuth('post', 'profile/update/password', { password, new_password })\n        if (res.errors) {\n            res.errors.map(err => {\n                const fieldName = 'msg_' + err.param;\n                this.setState({ [fieldName]: err.msg });\n                return err\n            });\n        }\n        if(res.status === 'ok' ) {\n            this.load()\n            this.setState({\n              password : '',\n              new_password: ''  \n            })\n            this.toggleChangePassword()\n        }\n    }\n\n    render() {\n        return (\n            <MuiThemeProvider theme={myTheme}>\n            <div className='Profile Page'>\n                <Navigation active='profile' load={this.load} />\n                <section className='ContainerCenter'>\n                    <Paper className='Block' style={MainStyles.block}>\n                        <h1><i className=\"fas fa-users\"></i> Profile</h1><br />\n                        <Grid container spacing={16}>\n                            <Grid item xs={12} md={3}>\n                                <ProfileCard\n                                    load={this.load}\n                                    image={this.state.image}\n                                    name={this.state.name}\n                                    isJenuine={true} />\n                            </Grid>\n                            <Grid item xs={12} md={9}>\n                                {\n                                    this.state.isDataAvailable ? <InfoCard match={this.state.match} level={this.state.level} user={this.state.user} isJenuine={true}/> : ''\n                                }\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                    <Paper className='Block' style={MainStyles.block}>\n                        <h1><i className=\"fas fa-dice\"></i>Game Library</h1>\n                        <br />\n                        <Grid container spacing={16}>\n                                {this.state.games.map(game => <GameCard key={game._id} game={game} load={this.load} />)} \n                        </Grid>\n                    </Paper>\n                    <Paper className='Block' style={MainStyles.block}>\n                        <h1><i className=\"fas fa-cogs\"></i> Profile Settings</h1>\n                        <br />\n                        <Button style={{color: ColorPalate.green}} onClick={this.toggleChangePassword}>\n                        <i className=\"fas fa-unlock\"></i> change password\n                        </Button>\n                    </Paper>\n                </section>\n                <Dialog\n                    open={this.state.isChangePassword}\n                    onClose={this.toggleChangePassword}\n                    keepMounted>\n                    <DialogTitle>Change password</DialogTitle>\n                    <DialogContent>\n                        <div>\n                            <form onSubmit={this.changePassword}>\n                                {//this.changeImageProgress ? <LinearProgress /> : ''\n                                }\n                                <TextField style={{ margin: '1vw', width: '90%' }}\n                                    label=\"Old Password\"\n                                    margin=\"normal\"\n                                    type='password'\n                                    value={this.state.password}\n                                    onChange={this.handleChange('password')}\n                                    helperText={this.state.msg_password}\n                                    error={this.state.msg_password.length > 0}\n                                />\n                                <TextField style={{ margin: '1vw', width: '90%' }}\n                                    label=\"New Password\"\n                                    margin=\"normal\"\n                                    value={this.state.new_password}\n                                    onChange={this.handleChange('new_password')}\n                                    helperText={this.state.msg_new_password}\n                                    error={this.state.msg_new_password.length > 0}\n                                />\n                                <Button type='submit' variant='outlined' style={{ margin: '1vw', width: '90%' }}>\n                                    <span><i className=\"fas fa-upload\"></i> Change Password</span>\n                                </Button>\n                            </form>\n                        </div>\n                    </DialogContent>\n                </Dialog>\n            </div>\n            </MuiThemeProvider>\n        );\n    }\n};\n\nexport class OtherProfile extends Component {\n    constructor(props) {\n        super(props)\n        const urlFragments = window.location.href.split('/');\n        const user_id = urlFragments[urlFragments.length - 1];\n        this.state = {\n            isDataAvailable: false,\n            user_id : user_id,\n            user: '',\n            image: require('../img/default.jpg'),\n            name: '',\n            match: {},\n            level: {},\n        }\n    }\n\n    componentDidMount() {\n        this.load()\n    }\n    load = async e => {\n        const res = await JsonQueryAuth('post', `profile/${this.state.user_id}`, {});\n        if (res.status === 'ok') {\n            this.setState({\n                isDataAvailable: true,\n                user: res.user,\n                name: res.user.full_name,\n                image: `${HostAddress}user/${res.user.folder}/${res.user.image}`,\n                match: res.match,\n                level: res.level\n            })\n            \n        }\n    }\n\n    render() {\n        return (\n            <div className='Profile Page'>\n                <Navigation active='profile' load={this.load} />\n                <section className='ContainerCenter'>\n                    <Paper className='Block' style={MainStyles.block}>\n                        <h1><i className=\"fas fa-users\"></i> Profile</h1><br />\n                        <Grid container spacing={16}>\n                            <Grid item xs={12} md={3}>\n                                <ProfileCard\n                                    load={this.load}\n                                    image={this.state.image}\n                                    name={this.state.name}\n                                    isJenuine={false} />\n                            </Grid>\n                            <Grid item xs={12} md={9}>\n                                {\n                                    this.state.isDataAvailable ? <InfoCard match={this.state.match} level={this.state.level} user={this.state.user} isJenuine={false}/> : ''\n                                }\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </section>\n            </div>\n        );\n    }\n}\n\nclass ProfileCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isChangeImage: false,\n            isChangeName: false,\n            changeImageProgress: false,\n            cahangeNameProgress: false,\n            newName: '',\n            msg_name: ''\n        }\n    }\n    handleChange = name => e => {\n        this.setState({\n            [name]: e.target.value\n        })\n    }\n    toggleChangeImage = () => {\n        this.setState({\n            isChangeImage: !this.state.isChangeImage\n        })\n    }\n    toggleChangeName = () => {\n        this.setState({\n            isChangeName: !this.state.isChangeName,\n            msg_name: ''\n        })\n    }\n    changeImage = async e => {\n        this.setState({\n            changeImageProgress: true\n        })\n        const imageFile = e.target.files[0]\n        let fd = new FormData()\n        fd.append('image', imageFile, 'image.jpg')\n        const res = await PostQueryAuth('profile/update/image', fd)\n        if (res.status === 'ok') {\n            this.setState({\n                changeImageProgress: false\n            })\n            window.location.reload()\n        }\n    }\n    changeName = async e => {\n        e.preventDefault()\n        this.setState({\n            changeNameProgress: true\n        })\n        const res = await JsonQueryAuth('post','profile/update/name', {name : this.state.newName})\n        if(res.errors) {\n            this.setState({\n                msg_name : res.errors[0].msg\n            })\n        }\n        if (res.status === 'ok') {\n            this.setState({\n                changeNameProgress: false,\n                newName : '',\n                msg_name : ''\n            })\n            this.props.load()\n            this.toggleChangeName()\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Card style={{ background: '#333' }}>\n                    <CardActionArea>\n                        <CardMedia\n                            style={{ height: 200 }}\n                            image={this.props.image}\n                            title={this.props.name}\n                        />\n                        <CardContent style={{ height: 20 }}>\n                            <Typography gutterBottom variant=\"h5\" component=\"h1\" style={{ color: ColorPalate.greenLight, fontSize: '1.2rem' }}>\n                                {this.props.name}\n                            </Typography>\n                        </CardContent>\n                    </CardActionArea>\n                    {this.props.isJenuine ?\n                        <CardActions >\n\n                            <Button size=\"small\"\n                                color=\"primary\"\n                                onClick={this.toggleChangeImage}\n                                style={{ color: ColorPalate.green, fontSize: '0.6rem' }}>\n                                Edit Image\n                    </Button>\n                            <Button size=\"small\"\n                                color=\"primary\"\n                                onClick={this.toggleChangeName}\n                                style={{ color: ColorPalate.green, fontSize: '0.6rem' }}>\n                                Edit Name\n                    </Button>\n                        </CardActions>\n                        : ''\n                    }\n                </Card>\n                <Dialog\n                    open={this.state.isChangeImage}\n                    onClose={this.toggleChangeImage}\n                    keepMounted>\n                    <DialogTitle>Change Image</DialogTitle>\n                    <DialogContent>\n                        <div>\n                            <form encType=\"multipart/form-data\">\n                                {this.changeImageProgress ? <LinearProgress /> : ''}\n                                <Button style={{ margin: '1vw', width: '90%' }}>\n                                    <input type='file'\n                                        style={{ width: '100%', opacity: 0, position: 'absolute' }}\n                                        onChange={this.changeImage} />\n                                    <span><i className=\"fas fa-upload\"></i> Upload new profile Image</span>\n                                </Button>\n                            </form>\n                        </div>\n                    </DialogContent>\n                </Dialog>\n                <Dialog\n                    open={this.state.isChangeName}\n                    onClose={this.toggleChangeName}\n                    keepMounted>\n                    <DialogTitle>Change Name</DialogTitle>\n                    <DialogContent>\n                        <div>\n                            <form onSubmit={this.changeName} encType=\"multipart/form-data\">\n                                {this.cahangeNameProgress ? <LinearProgress /> : ''}\n                                <TextField style={{ margin: '1vw', width: '90%' }}\n                                    label=\"New Name\"\n                                    margin=\"normal\"\n                                    value={this.state.newName}\n                                    onChange={this.handleChange('newName')}\n                                    helperText={this.state.msg_name}\n                                    error={this.state.msg_name.length > 0}\n                                />\n                                <Button type='submit' variant='outlined' style={{ margin: '1vw', width: '90%' }}>\n                                    <span><i className=\"fas fa-upload\"></i> change Name</span>\n                                </Button>\n                            </form>\n                        </div>\n                    </DialogContent>\n                </Dialog>\n            </React.Fragment>\n        );\n    }\n}\n\nconst InfoCard = ({ match, level, user, isJenuine }) => {\n    let Info = {\n        email: user.email,\n        Balance: user.balance,\n        level: level.m_level,\n        leader_points: user.leader_point,\n        next_level: level.m_next,\n        total_winning: user.total_bp_win,\n        total_wins: match.m_win,\n        total_matches: match.m_match\n    }\n    if(!isJenuine)\n        Info = {\n            level: level.m_level,\n        leader_points: user.leader_point,\n        next_level: level.m_next,\n        total_winning: user.total_bp_win,\n        total_wins: match.m_win,\n        total_matches: match.m_match\n        }\n    let Percents = {\n        next_level: level.m_levelExpPercent,\n        win_persentage: match.m_average\n    }\n\n    Info = Object.entries(Info);\n    //Percents = Object.entries(Percents);\n\n    return (\n        <Paper style={{ backgroundColor: '#444', padding: 16, color: ColorPalate.greenLight }}>\n            <Grid container>\n                {Info.map(inf => (\n                    <Grid item container xs={12} key={inf[0]}>\n                        <Grid item xs={12} md={5} style={MainStyles.heading}>{`${inf[0].replace(/_/g, \" \")} :`}</Grid>\n                        <Grid item xs={12} md={7} style={MainStyles.text}>{inf[1]}</Grid>\n                    </Grid>\n                ))}\n                <Divider />\n                <br />\n                <Grid item container xs={12} space={12} justify='center' alignItems='center'>\n                    <Grid item xs={6}>\n                        <CircularProgress thickness={12} className='animated jackInTheBox'\n                            variant=\"static\"\n                            value={Percents.win_persentage}\n                            size='80%'\n                            style={{\n                                color:\n                                    ColorPalate.greenLight\n                            }} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <CircularProgress thickness={16} className='animated jackInTheBox'\n                            variant=\"static\"\n                            value={Percents.next_level}\n                            size='80%' style={{\n                                color:\n                                    ColorPalate.greenLight\n                            }} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <span>win: {Percents.win_persentage}%</span>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <span>next level: {Percents.next_level}%</span>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n}\n","import React, { Component } from 'react';\nimport { MainStyles, ColorPalate, myTheme } from '../Components/MainStyles';\nimport { MuiThemeProvider } from '@material-ui/core'\n\nimport { JsonQueryAuth, HostAddress } from '../Services/Query'\nimport { Navigation } from '../Components/Navigation';\nimport { TournamentCard } from '../Components/Cards';\n\nimport SwipeableViews from 'react-swipeable-views';\nimport { Grid, Typography } from '@material-ui/core';\nimport { Paper, Card, CardMedia, CardContent, CardActionArea } from '@material-ui/core';\nimport { Tab, Tabs, AppBar } from '@material-ui/core';\nimport { Avatar } from '@material-ui/core';\nimport { List, ListItem, ListSubheader, } from '@material-ui/core';\nimport { ExpansionPanel, ExpansionPanelDetails, ExpansionPanelSummary } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nexport class Tournament extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isInTournament: false,\n            tournament_id: ''\n        }\n    }\n    enterTournament = id => {\n        this.setState({\n            isInTournament: true,\n            tournament_id: id\n        })\n    }\n    load = () => {\n        //do nothing\n    }\n    render() {\n        return (\n            <MuiThemeProvider theme={myTheme}>\n            <div className='Tournament Page'>\n                <Navigation active='tournament' load={this.load} />\n                <section className='ContainerCenter'>\n                    {\n                        this.state.isInTournament ? <TournamentInSide tournament_id={this.state.tournament_id} /> :\n                            <TournamentOutSide enterTournament={this.enterTournament} />\n                    }\n                </section>\n            </div>\n            </MuiThemeProvider>\n        )\n    }\n}\n\nclass TournamentOutSide extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            not_participating: [],\n            participating: []\n        }\n    }\n    componentDidMount() {\n        this.load()\n    }\n    load = async () => {\n        const res = await JsonQueryAuth('post', 'tournament', {})\n        this.setState({\n            not_participating: res.tournaments.not_participating,\n            participating: res.tournaments.participating\n        })\n        \n    }\n    render() {\n        return (\n            <React.Fragment>\n                <ExpansionPanel style={MainStyles.expansion} defaultExpanded>\n                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon style={MainStyles.header} />}>\n                        <Typography style={MainStyles.header}><i className=\"fas fa-puzzle-piece\"></i> Participating tournaments</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails >\n                        <Grid container spacing={16}>\n                            {\n                                this.state.participating.map(tour => <TournamentCard key={tour._id}\n                                    isParticipating={true}\n                                    player_count={tour.player_count}\n                                    load={this.load}\n                                    game={tour.game}\n                                    image={tour.image}\n                                    current_available={tour.players.length}\n                                    entry_fee={tour.entry_fee}\n                                    custom_fields={tour.custom_fields}\n                                    prize={tour.balance}\n                                    enterTournament={this.props.enterTournament}\n                                    tournament_id={tour._id} />)\n                            }\n                        </Grid>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n                <ExpansionPanel style={MainStyles.expansion} defaultExpanded>\n                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon style={MainStyles.header} />}>\n                        <Typography style={MainStyles.header}><i className=\"fas fa-gamepad\"></i> New Tournaments</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <Grid container spacing={16}>\n                            {\n                                this.state.not_participating.map(tour => <TournamentCard key={tour._id}\n                                    isParticipating={false}\n                                    player_count={tour.player_count}\n                                    image={tour.image}\n                                    load={this.load}\n                                    game={tour.game}\n                                    current_available={tour.players.length}\n                                    entry_fee={tour.entry_fee}\n                                    custom_fields={tour.custom_fields}\n                                    prize={tour.balance}\n                                    enterTournament={this.props.enterTournament}\n                                    tournament_id={tour._id} />)\n                            }\n                        </Grid>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n            </React.Fragment>\n        )\n    }\n}\n\nclass TournamentInSide extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            tournament_id: this.props.tournament_id,\n            game: {},\n            players: [],\n            prize1: '',\n            prize2: '',\n            bet: '',\n            rules: [],\n            capacity: '',\n            tabId: 0,\n            image:'',\n            custom_fields:[],\n            is_bracket_needed:false\n        }\n    }\n    componentDidMount() {\n        this.load()\n    }\n    load = async () => {\n        const res = await JsonQueryAuth('post', `tournament/${this.state.tournament_id}`, {})\n        if (res.status = 'ok') {\n            const { game, players, prize1, prize2, bet, capacity,image,is_bracket_needed} = res\n            let rules = res.rules.split('\\n')\n            this.setState({\n                game, players, prize1, prize2, bet, capacity, rules,image,is_bracket_needed\n            });\n            if(res.custom_fields) {\n                try {\n                    let custom_fields = JSON.parse(res.custom_fields);\n                    this.setState({custom_fields:custom_fields});\n                } catch(e) {\n                }  \n            }\n        }\n    }\n    changeTab = (event, value) => {\n        this.setState({ tabId: value })\n    }\n    handleChangeIndex = (index) => {\n        // if(index >= 0 && index <= 1)\n        this.setState({ tabId: index })\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <Grid container justify='center' alignItems='center' >\n                    <Grid item xs={12} md={4} container justify='center' alignItems='center' >\n                        <Card style={{ width: '100%', margin: '20px' }}>\n                            <CardActionArea>\n                                <CardMedia\n                                    style={{ height: 200 }}\n                                    image={(this.state.image && this.state.image!='') ? `${HostAddress}tournamentimg/${this.state.image}`:`${HostAddress}gameimg/${this.state.game.image}`}\n                                    title={this.state.game.name}\n                                />\n                                <CardContent style={{ ...MainStyles.paper, color: ColorPalate.greenLight }}>\n                                    <h2>{this.state.game.name}</h2>\n                                </CardContent>\n                            </CardActionArea>\n                        </Card>\n                        <TournamentPlayers players={this.state.players} />\n                    </Grid>\n                    <Grid item xs={12} md={8} style={{ padding: 20 }}>\n                        <Paper style={{ ...MainStyles.paper }}>\n                            <AppBar position=\"static\" style={{ backgroundColor: '#444' }}>\n                                <Tabs value={this.state.tabId} onChange={this.changeTab} indicatorColor='primary' textColor='primary'>\n                                    <Tab value={0} label=\"INFO\" style={{ color: this.state.tabId === 0 ? ColorPalate.greenLight : ColorPalate.green }} />\n                                    <Tab value={1} label=\"RULES\" style={{ color: this.state.tabId === 1 ? ColorPalate.greenLight : ColorPalate.green }} />\n                                    \n                                    {this.state.custom_fields.map((custom,index) => \n                                        <Tab key={custom.field_id} value={index + 2} label={custom.label_name} style={{ color: this.state.tabId === custom.field_id ? ColorPalate.greenLight : ColorPalate.green }} />\n                                    )}\n                                </Tabs>\n                            </AppBar>\n                            <SwipeableViews\n                                index={this.state.tabId}\n                                onChangeIndex={this.handleChangeIndex}\n                            >\n                            <Grid container style={{padding: 8}}>\n                                <Grid item xs={12} md={5} style={{color: ColorPalate.greenLight}}>Tournament Id</Grid>\n                                <Grid item xs={12} md={7} style={{color: ColorPalate.green}}>{this.state.tournament_id}</Grid>\n                                <Grid item xs={12} md={5} style={{color: ColorPalate.greenLight}}>Entry Fee</Grid>\n                                <Grid item xs={12} md={7} style={{color: ColorPalate.green}}>{this.state.bet} bp</Grid>\n                                <Grid item xs={12} md={5} style={{color: ColorPalate.greenLight}}>First Prize</Grid>\n                                <Grid item xs={12} md={7} style={{color: ColorPalate.green}}>{this.state.prize1} bp</Grid>\n                                <Grid item xs={12} md={5} style={{color: ColorPalate.greenLight}}>Second Prize</Grid>\n                                <Grid item xs={12} md={7} style={{color: ColorPalate.green}}>{this.state.prize2} bp</Grid>\n                                <Grid item xs={12} md={5} style={{color: ColorPalate.greenLight}}>Tournament Capacity</Grid>\n                                <Grid item xs={12} md={7} style={{color: ColorPalate.green}}>{this.state.capacity}</Grid>\n                                <Grid item xs={12} md={5} style={{color: ColorPalate.greenLight}}>Joined players</Grid>\n                                <Grid item xs={12} md={7} style={{color: ColorPalate.green}}>{this.state.players.length}</Grid>\n                            </Grid>\n                            <div style={{color: ColorPalate.green, padding: 8}}>\n                            {this.state.rules.map( (r, i) => (<div key={i}>{r}</div>))}\n                            </div>\n                            {this.state.custom_fields.map((custom,index) => \n                                <div style={{color: ColorPalate.green, padding: 8}}>\n                                {custom.field_value}\n                                </div>\n                             )}\n                               \n                            </SwipeableViews>\n                        </Paper>\n                        {this.state.is_bracket_needed !=false &&\n                        <Paper style={{\n                            ...MainStyles.paper, padding: 16, height: '60vh',\n                            marginTop: 20, overflowX: 'auto',\n                            display: 'flex', justifyContent: 'center', alignItems: 'center'\n                        }}>\n                        \n                            <TournamentBracket tournament_id={this.props.tournament_id} />\n                        \n                        </Paper>\n                        }\n                    </Grid>\n                </Grid>\n            </React.Fragment>\n        )\n    }\n}\n\n\nclass TournamentBracket extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            bracket: [],\n            rounds: []\n        }\n    }\n    componentDidMount() {\n        this.load()\n    }\n    load = async () => {\n        const res = await JsonQueryAuth('post', `tournament/bracket/${this.props.tournament_id}`, {})\n        this.setState({\n            bracket: res.bracket.tree,\n            rounds: res.bracket.rounds\n        })\n        window.$(\"#tournamentBracket\").brackets({\n            titles: this.state.rounds,\n            rounds: this.state.bracket,\n            color_title: 'white',\n            border_color: '#666',\n            color_player: 'red',\n            bg_player: '#666',\n            color_player_hover: 'white',\n            bg_player_hover: ColorPalate.green,\n            border_radius_player: '2px',\n            border_radius_lines: '4px',\n        });\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <div id='tournamentBracket'></div>\n            </React.Fragment>\n        );\n    }\n}\n\nclass TournamentPlayers extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <List style={{ ...MainStyles.paper, width: '100%', margin: '20px' }}\n                    subheader={<ListSubheader component=\"div\" style={{ color: ColorPalate.greenLight }}>Perticipating players</ListSubheader>}\n                >\n                    {this.props.players.map(player => (\n                        <ListItem button key={player._id}>\n                            <div style={{ display: 'flex', alignItems: 'center' }}>\n                                <Avatar\n                                    alt={player.full_name}\n                                    src={`${HostAddress}user/${player.folder}/${player.image}`}\n                                />\n                                <span style={{ textAlign: 'center', color: ColorPalate.green, marginLeft: 10 }}>{player.full_name}</span>\n                            </div>\n                        </ListItem>\n                    ))}\n                </List>\n            </React.Fragment>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { myTheme, ColorPalate } from '../Components/MainStyles';\nimport { MuiThemeProvider } from '@material-ui/core'\n\nimport { Paper } from '@material-ui/core';\n\nimport { WalletTable } from '../Components/DataTable'\nimport { Navigation } from '../Components/Navigation';\n\nexport class Wallet extends Component {\n    render() {\n        return(\n            <MuiThemeProvider theme={myTheme}>\n            <div className='Wallet Page'>\n                <Navigation active='wallet'/>\n                <section className='ContainerCenter'>\n                    <Paper className='Block' >\n                        <h1 style={{color: ColorPalate.green}}><i className=\"fas fa-chart-bar\"></i> Wallet Log</h1>\n                        <div style={{ width: '100%', overflowX: 'scroll'}}>\n                        <WalletTable />\n                        </div>\n                    </Paper>\n                </section>\n            </div>\n            </MuiThemeProvider>\n        )\n    }\n}","import React, { Component } from 'react'\n\nexport class NotFound extends Component {\n    render() {\n        return(\n            <div className='page'>\n                404 NotFound\n            </div>\n        )\n    }\n} ","import React,{ Component } from 'react'\nimport BracketStyle from './Bracket.module.css'\n\nconst StyleSheet = {\n    bracketContainer : {\n        width : '90%',\n        height : '40vh',\n        overflow : 'scroll',\n        display: 'flex',\n        alignItems : 'center'\n    },\n    column : {\n        width: '300px',\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent : 'space-between',\n        alignItems : 'center'\n    },\n    bracket : {\n        flex: 1,\n        width: '100%',\n        border: '1px solid black',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems : 'center',\n    },\n    match : {\n        backgroundColor : '#555',\n        color: '#bbb',\n        width: 100,\n        height: 50,\n        boxShadow: '0px 0px 10px 1px #222',\n    }\n}\n\nexport class TournamentBracket extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            data : [\n                [{x: 1, y :2}, {x:3 , y :2}, {x:3 , y :2}, {x:3 , y :2}],\n                [{x:2 , y :3}, {x:3 , y :2}],\n                [{x:2 , y :2}]\n            ]\n        }\n    }\n    render() {\n        return(\n        <div style={StyleSheet.bracketContainer}>\n           {/*  <div style={{position: \"relative\", zIndex: 1}}>\n            <div > \n            </div>\n            \n\n            </div>*/}\n            {\n                this.state.data.map( (round, j) => {\n                    return(\n                        <div style={StyleSheet.column} key={Math.random() * 10000 }>\n                            {\n                                round.map( (match, i) => {\n                                    return(\n                                        <div style={StyleSheet.bracket}>\n                                            <div style={StyleSheet.match} className={BracketStyle.Prev}>\n                                            {match.x} : {match.y}\n                                            </div>\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n                    )\n                })\n            }\n            <Bracket />\n        </div>\n        )\n    }\n}\n\nclass Bracket extends Component {\n    render() {\n        return(\n            <div className={BracketStyle.bracket}>\n\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport './App.css';\n\nimport { Admin } from './Pages/Admin';\nimport { Landing } from './Pages/Landing';\nimport { Dashboard } from './Pages/Dashboard';\nimport { History } from './Pages/History';\nimport { Leaderboard } from './Pages/Leaderboard';\nimport { Match } from './Pages/Match';\nimport { Profile, OtherProfile } from './Pages/Profile';\nimport { Tournament } from './Pages/Tournament';\nimport { Wallet } from './Pages/Wallet';\nimport { NotFound } from './Pages/NotFound'\nimport { TournamentBracket } from './Components/TournamentBracket'\n\nclass App extends Component {\n  render() {\n    return (\n      <Switch>\n        <Route exact path='/' component={Landing} />\n        <Route exact path='/admin' component={Admin} />\n        <Route path='/dashboard' component={Dashboard} />\n        <Route path='/history' component={History} />\n        <Route path='/leaderboard' component={Leaderboard} />\n        <Route path='/profile' component={Profile} />\n        <Route path='/profileOther/:id' component={OtherProfile} />\n        <Route path='/tournament' component={Tournament} />\n        <Route path='/wallet' component={Wallet} />\n        <Route Path='/match/:id' component={Match} />\n        <Route component={NotFound} />\n      </Switch>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render((\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  ), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/default.fd55f441.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cCard\":\"Cards_cCard__19KLI\",\"bCard\":\"Cards_bCard__1dVfm\",\"gameCard\":\"Cards_gameCard__aT-j6\"};"],"sourceRoot":""}