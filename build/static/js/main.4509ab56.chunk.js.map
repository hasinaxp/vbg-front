{"version":3,"sources":["Components/Bracket.module.css","Components/Navigation.module.css","Components/Cards.module.css","img/8ball.jpg","img/chess.jpg","img/icons/vbg1.png","img/icons/sword.svg","Services/Query.js","Services/config.js","Pages/Admin.jsx","Components/MainStyles.js","Components/Cards.jsx","Pages/Landing.jsx","Components/Navigation.jsx","Pages/Dashboard.jsx","Components/DataTable.jsx","Pages/History.jsx","Pages/Leaderboard.jsx","Pages/Match.jsx","Pages/Profile.jsx","Pages/Tournament.jsx","Pages/Wallet.jsx","Pages/NotFound.jsx","Components/TournamentBracket.jsx","App.js","serviceWorker.js","index.js","img/default.jpg"],"names":["module","exports","Prev","NavProfileCard","cCard","bCard","gameCard","priceConsole","firstpart","secondpart","torurmant","gameitem","vs","clearfix","torurmantBet","torurmantDes","gamename","gameCardOn","__webpack_require__","p","HostAddress","host","JsonQuery","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","type","url","info","settings","response","json","wrap","_context","prev","next","method","headers","Accept","Content-Type","credentials","body","JSON","stringify","fetch","concat","sent","status","console","log","abrupt","stop","this","_x","_x2","_x3","apply","arguments","PostQuery","_ref2","_callee2","_context2","_x4","_x5","JsonQueryAdmin","_ref3","_callee3","_context3","mode","cache","_x6","_x7","_x8","JsonQueryAuth","_ref4","_callee4","_context4","logautx","getCookie","logauty","logauti","_x9","_x10","_x11","PostQueryAuth","_ref5","_callee5","_context5","_x12","_x13","SetCookie","key","value","document","cookie","cname","name","ca","decodeURIComponent","split","i","length","c","charAt","substring","indexOf","Admin","_Component","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setActive","e","setState","active","state","inherits","createClass","panel","react_default","createElement","Admin_GameMenu","Admin_TournamentMenu","Admin_AssignMenu","Fragment","index_es","container","style","minHeight","item","md","width","inset","primary","onClick","Component","PlayerCounts","text","Balances","TournamentMenu","_this2","load","res","games","map","g","_id","tournaments_ongoing","tournaments_yet_to_start","clearMsg","msg_tournament_game_id","msg_tournament_player_count","msg_tournament_balance","msg_tournament_rules","msg_tournament_entry_fee","handleChange","defineProperty","is_bracket_needed","target","handleChangeCustomFields","field_id","custom_fields","onDrop","picture","tournament_image","onFileUpload","files","addTournament","fd","preventDefault","isCalling","FormData","append","rules","balance","player_count","entry_fee","game","tournament_name","errors","err","fieldName","param","msg","alert","addFields","push","Date","now","player_counts","balances","msg_tournament_tournament_name","_this3","alignItems","justify","xs","margin","padding","onSubmit","encType","label","onChange","helperText","error","select","option","checked","multiline","field","label_name","variant","className","opacity","position","height","overflowY","button","src","image","secondary","platform","AssignMenu","_this4","addPlayer","selected_players","selected_tournament","tournament_id","players","resetForm","t","loadUsers","userList","getUser","selected","users","full_name","email","msg_tournament_id","_this5","multiple","renderValue","disabled","user","PlatformSelection","GameMenu","_this6","msg_game_name","msg_game_platform","msg_game_requirement","game_image","_callee6","_context6","addGame","_ref7","_callee7","_context7","game_name","game_platform","game_requirement","message","platform_values","game_player_count","msg_game_image","gameName","readonly","id","colors","blackLight","greenLight","green","myTheme","createMuiTheme","palette","light","main","dark","textColor","typography","useNextVariants","appBar","card","titleColor","subtitleColor","overlay","backgroundColor","paper","ColorPalate","MainStyles","nav","menuButton","marginLeft","marginRight","color","logo","sideNav","sideNavList","block","heading","fontSize","fontWeight","boxChallenger","window","innerWidth","boxGame","clipPath","expansion","header","gameBtn","zIndex","top","right","transform","gridList","minWidth","maxHeight","centerContainer","_centerContainer","display","justifyContent","textAlign","Transition","assign","direction","ChallengeCard","toggleChallenge","isOpen","acceptChallenge","match_id","cancelChallenge","opponent","bet","isChallenger","marginBottom","styles","alt","open","onClose","MatchCard","_Component2","_getPrototypeOf2","_len","args","Array","_key","redirect","history","_this$props","lg","TournamentCard","_Component3","toggleJoin","isguest","isParticipating","enterTournament","viewTournament","joinTournament","current_available","prize","GameCard","_Component4","toggleGame","removeGame","toggleAddGame","isAddGame","addGameSubmit","_ref6","contact_string","game_id","content","autoComplete","requirement","TransitionComponent","keepMounted","Register","msg_full_name","msg_email","msg_password","msg_confirm","event","register","_this$state","password","confirm","SignIn","signIn","_this2$state","connection_string","Landing","toggleRegister","isRegister","toggleSignIn","isSignIn","redrt","limit","tournaments","Landing_Register","anchor","Landing_SignIn","spacing","viewBox","heigth","x1","y1","x2","y2","tour","Cards_TournamentCard","require","href","Slide_default","ChallengeBets","Logo","Navigation","x","folder","showGameBtn","data","toggleDrawer","bind","assertThisInitialized","aria-label","icons_index_es","Navigation_Logo","Navigation_GameBtn","Navigation_SideMenu","GameBtn","search","opponents","list","filter","stage","selectOpponent","nameHint","self","openChallange","op","challenge","challenger","challenged","bets","dialogContent","dialogTitle","cellHeight","cols","title","subtitle","marginTop","SideMenu","Link","to","textDecoration","Dashboard","gamePocket","gameList","challenges","matches","feeds","ch","isTournament","is_tournament","m","tournamentMatches","isgameSelect","gameSelect","r","addGames","classList","remove","theme","Navigation_Navigation","defaultExpanded","expandIcon","ExpandMore_default","clng","Cards_ChallengeCard","Cards_MatchCard","_React$createElement","Cards_GameCard","MatchTable","match_results","handleChangePage","page","handleChangeRowsPerPage","rowsPerPage","columns","column","slice","row","component","scope","rowsPerPageOptions","count","backIconButtonProps","nextIconButtonProps","onChangePage","onChangeRowsPerPage","WalletTable","transaction_log","bp","date","History","overflowX","DataTable_MatchTable","Leaderboard","champions","achieves","objectSpread","subheader","champ","rank","img","leader_point","socket","openSocket","LoadChats","chat_id","cb","responseUrl","on","Match","sender","time","myId","is_c","chatVisible","toggleAdmitDefeat","isAdmitDefeat","toggleClaimVictory","isClaimVectory","claimVictory","imageFile","admitDefeat","m_id","urlFragments","location","Match_ChatBox","aria-labelledby","ChatBox","messages","chat","chatbox","current","undefined","scrollTop","scrollHeight","emit","chatId","sendMsg","col","React","createRef","ref","Profile","res1","isDataAvailable","match","level","toggleChangePassword","isChangePassword","msg_new_password","changePassword","new_password","Profile_ProfileCard","isJenuine","Profile_InfoCard","OtherProfile","user_id","ProfileCard","toggleChangeImage","isChangeImage","toggleChangeName","isChangeName","msg_name","changeImage","changeImageProgress","reload","changeName","changeNameProgress","newName","cahangeNameProgress","background","gutterBottom","size","InfoCard","Info","Balance","m_level","leader_points","next_level","m_next","total_winning","total_bp_win","total_wins","m_win","total_matches","m_match","Percents","m_levelExpPercent","win_persentage","m_average","entries","inf","replace","space","thickness","Tournament","isInTournament","Tournament_TournamentInSide","Tournament_TournamentOutSide","TournamentOutSide","not_participating","participating","TournamentInSide","prize1","prize2","capacity","isPlaying","parse","changeTab","tabId","handleChangeIndex","index","Tournament_TournamentPlayers","indicatorColor","custom","react_swipeable_views_lib_default","onChangeIndex","blue","field_value","Tournament_TournamentBracket","TournamentBracket","bracket","tree","rounds","$","brackets","titles","color_title","border_color","color_player","bg_player","color_player_hover","bg_player_hover","border_radius_player","border_radius_lines","TournamentPlayers","player","Wallet","DataTable_WalletTable","NotFound","StyleSheet","bracketContainer","overflow","flexDirection","flex","border","boxShadow","Bracket","BracketStyle","App","Switch","Route","exact","path","Path","Boolean","hostname","ReactDOM","render","BrowserRouter","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,KAAA,4CCAlBF,EAAAC,QAAA,CAAkBE,eAAA,wDCAlBH,EAAAC,QAAA,CAAkBG,MAAA,qBAAAC,MAAA,qBAAAC,SAAA,wBAAAC,aAAA,4BAAAC,UAAA,yBAAAC,WAAA,0BAAAC,UAAA,yBAAAC,SAAA,wBAAAC,GAAA,kBAAAC,SAAA,wBAAAC,aAAA,4BAAAC,aAAA,4BAAAC,SAAA,wBAAAC,WAAA,8JCDlBjB,EAAAC,QAAiBiB,EAAAC,EAAuB,wDCAxCnB,EAAAC,QAAiBiB,EAAAC,EAAuB,wDCAxCnB,EAAAC,QAAiBiB,EAAAC,EAAuB,uDCAxCnB,EAAAC,QAAiBiB,EAAAC,EAAuB,qSCG3BC,ECCF,CACHC,KAAS,yBDFmBA,KAGvBC,EAAS,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,EAAOC,EAAMC,EAAKC,GAAlB,IAAAC,EAAAC,EAAAC,EAAA,OAAAT,EAAAC,EAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACfN,EAAW,CACbO,OAAQV,EACRW,QAAS,CACLC,OAAQ,mBACRC,eAAgB,oBAEpBC,YAAa,eAGJ,SAATd,IAAiBG,EAASY,KAAOC,KAAKC,UAAUf,IAV/BK,EAAAE,KAAA,EAYES,MAAK,GAAAC,OAAI7B,EAAJ,QAAA6B,OAAsBlB,GAAOE,GAZpC,UAaG,OADlBC,EAZeG,EAAAa,MAaRC,OAbQ,CAAAd,EAAAE,KAAA,eAcjBa,QAAQC,IAAR,mBAAAJ,OAA+BlB,IAddM,EAAAiB,OAAA,SAeV,CAAEH,OAAQ,MAfA,cAAAd,EAAAE,KAAA,GAiBFL,EAASC,OAjBP,eAiBfA,EAjBeE,EAAAa,KAAAb,EAAAiB,OAAA,SAkBdnB,GAlBc,yBAAAE,EAAAkB,SAAA1B,EAAA2B,SAAH,gBAAAC,EAAAC,EAAAC,GAAA,OAAApC,EAAAqC,MAAAJ,KAAAK,YAAA,GAqBTC,EAAS,eAAAC,EAAAvC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAoC,EAAOjC,EAAKc,GAAZ,IAAAZ,EAAAC,EAAAC,EAAA,OAAAT,EAAAC,EAAAS,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cACfN,EAAW,CACbO,OAAQ,OACRC,QAAS,GAETG,YAAa,cACbC,KAAMA,GANWoB,EAAA1B,KAAA,EAQES,MAAK,GAAAC,OAAI7B,EAAJ,QAAA6B,OAAsBlB,GAAOE,GARpC,UASG,OADlBC,EARe+B,EAAAf,MASRC,OATQ,CAAAc,EAAA1B,KAAA,eAUjBa,QAAQC,IAAR,mBAAAJ,OAA+BlB,IAVdkC,EAAAX,OAAA,SAWV,CAAEH,OAAQ,MAXA,cAAAc,EAAA1B,KAAA,EAaFL,EAASC,OAbP,cAafA,EAbe8B,EAAAf,KAAAe,EAAAX,OAAA,SAcdnB,GAdc,yBAAA8B,EAAAV,SAAAS,EAAAR,SAAH,gBAAAU,EAAAC,GAAA,OAAAJ,EAAAH,MAAAJ,KAAAK,YAAA,GAkBTO,EAAc,eAAAC,EAAA7C,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAA0C,EAAOxC,EAAMC,EAAKC,GAAlB,IAAAC,EAAAC,EAAAC,EAAA,OAAAT,EAAAC,EAAAS,KAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,cACpBN,EAAW,CACbO,OAAQV,EACR0C,KAAM,OACNC,MAAO,WACPhC,QAAS,CACLC,OAAQ,mBACRC,eAAgB,oBAEpBC,YAAa,cACbC,KAAMC,KAAKC,UAAUf,IAVCuC,EAAAhC,KAAA,EAaHS,MAAK,GAAAC,OAAI7B,EAAJ,QAAA6B,OAAsBlB,GAAOE,GAb/B,UAcF,OADlBC,EAboBqC,EAAArB,MAcbC,OAda,CAAAoB,EAAAhC,KAAA,eAetBa,QAAQC,IAAR,mBAAAJ,OAA+BlB,IAfTwC,EAAAjB,OAAA,SAgBf,CAAEH,OAAQ,MAhBK,cAAAoB,EAAAhC,KAAA,EAkBPL,EAASC,OAlBF,cAkBpBA,EAlBoBoC,EAAArB,KAAAqB,EAAAjB,OAAA,SAmBnBnB,GAnBmB,yBAAAoC,EAAAhB,SAAAe,EAAAd,SAAH,gBAAAkB,EAAAC,EAAAC,GAAA,OAAAP,EAAAT,MAAAJ,KAAAK,YAAA,GAuBdgB,EAAa,eAAAC,EAAAtD,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAmD,EAAOjD,EAAMC,EAAKC,GAAlB,IAAAC,EAAAC,EAAAC,EAAA,OAAAT,EAAAC,EAAAS,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,cACnBN,EAAW,CACbO,OAAQV,EACR0C,KAAM,OACNC,MAAO,WACPhC,QAAS,CACLC,OAAQ,mBACRuC,QAAA,GAAAhC,OAAeiC,EAAU,YACzBC,QAAA,GAAAlC,OAAeiC,EAAU,YACzBE,QAAA,GAAAnC,OAAeiC,EAAU,YACzBvC,eAAgB,oBAEpBC,YAAa,cACbC,KAAMC,KAAKC,UAAUf,IAbAgD,EAAAzC,KAAA,EAgBFS,MAAK,GAAAC,OAAI7B,EAAJ,QAAA6B,OAAsBlB,GAAOE,GAhBhC,UAiBD,OADlBC,EAhBmB8C,EAAA9B,MAiBZC,OAjBY,CAAA6B,EAAAzC,KAAA,eAkBrBa,QAAQC,IAAR,mBAAAJ,OAA+BlB,IAlBViD,EAAA1B,OAAA,SAmBd,CAAEH,OAAQ,MAnBI,cAAA6B,EAAAzC,KAAA,EAqBNL,EAASC,OArBH,cAqBnBA,EArBmB6C,EAAA9B,KAAA8B,EAAA1B,OAAA,SAsBlBnB,GAtBkB,yBAAA6C,EAAAzB,SAAAwB,EAAAvB,SAAH,gBAAA6B,EAAAC,EAAAC,GAAA,OAAAT,EAAAlB,MAAAJ,KAAAK,YAAA,GAyBb2B,EAAa,eAAAC,EAAAjE,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAA8D,EAAQ3D,EAAKc,GAAb,IAAAZ,EAAAC,EAAAC,EAAA,OAAAT,EAAAC,EAAAS,KAAA,SAAAuD,GAAA,cAAAA,EAAArD,KAAAqD,EAAApD,MAAA,cACnBN,EAAW,CACbO,OAAQ,OACRgC,KAAM,OACNC,MAAO,WACPhC,QAAS,CACLwC,QAAA,GAAAhC,OAAeiC,EAAU,YACzBC,QAAA,GAAAlC,OAAeiC,EAAU,YACzBE,QAAA,GAAAnC,OAAeiC,EAAU,aAE7BtC,YAAa,cACbC,KAAMA,GAXe8C,EAAApD,KAAA,EAcFS,MAAK,GAAAC,OAAI7B,EAAJ,QAAA6B,OAAsBlB,GAAOE,GAdhC,UAeD,OADlBC,EAdmByD,EAAAzC,MAeZC,OAfY,CAAAwC,EAAApD,KAAA,eAgBrBa,QAAQC,IAAR,mBAAAJ,OAA+BlB,IAhBV4D,EAAArC,OAAA,SAiBd,CAAEH,OAAQ,MAjBI,cAAAwC,EAAApD,KAAA,EAmBNL,EAASC,OAnBH,cAmBnBA,EAnBmBwD,EAAAzC,KAAAyC,EAAArC,OAAA,SAoBlBnB,GApBkB,yBAAAwD,EAAApC,SAAAmC,EAAAlC,SAAH,gBAAAoC,EAAAC,GAAA,OAAAJ,EAAA7B,MAAAJ,KAAAK,YAAA,GA+BbiC,EAAY,SAACC,EAAKC,GAC3BC,SAASC,OAAT,GAAAjD,OAAqB8C,EAArB,KAAA9C,OAA4B+C,EAA5B,MAESd,EAAY,SAACiB,GAItB,IAHA,IAAIC,EAAOD,EAAQ,IAEfE,EADgBC,mBAAmBL,SAASC,QACzBK,MAAM,KACpBC,EAAI,EAAGA,EAAIH,EAAGI,OAAQD,IAAK,CAEhC,IADA,IAAIE,EAAIL,EAAGG,GACW,KAAfE,EAAEC,OAAO,IACZD,EAAIA,EAAEE,UAAU,GAEpB,GAAuB,GAAnBF,EAAEG,QAAQT,GACV,OAAOM,EAAEE,UAAUR,EAAKK,OAAQC,EAAED,QAG1C,MAAO,WElIEK,WAAb,SAAAC,GACI,SAAAD,EAAYE,GAAO,IAAAC,EAAA,OAAAzF,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAAsD,IACfG,EAAAzF,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAAsF,GAAAO,KAAA7D,KAAMwD,KAKVM,UAAY,SAAAlB,GAAI,OAAI,SAAAmB,GAChBN,EAAKO,SAAS,CACVC,OAASrB,MANba,EAAKS,MAAQ,CACTD,OAAS,SAHER,EADvB,OAAAzF,OAAAmG,EAAA,EAAAnG,CAAAsF,EAAAC,GAAAvF,OAAAoG,EAAA,EAAApG,CAAAsF,EAAA,EAAAf,IAAA,SAAAC,MAAA,WAgBQ,IAAI6B,EACJ,OAAOrE,KAAKkE,MAAMD,QACd,IAAK,QACLI,EAAQC,EAAAnG,EAAAoG,cAACC,EAAD,MACR,MACA,IAAK,cACLH,EAAQC,EAAAnG,EAAAoG,cAACE,EAAD,MACR,MACA,IAAK,gBACLJ,EAAQC,EAAAnG,EAAAoG,cAACG,EAAD,MAIZ,OACIJ,EAAAnG,EAAAoG,cAACD,EAAAnG,EAAMwG,SAAP,KACIL,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAO,CAAEC,UAAW,UAChCT,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACI,GAAI,GACrBX,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAOE,MAAO,CAAEI,MAAO,SACnBZ,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KACIN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KACIN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAcO,OAAK,EAACC,QAAQ,QAAQC,QAASrF,KAAK8D,UAAU,YAEhEQ,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KACIN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAcO,OAAK,EAACC,QAAQ,cAAcC,QAASrF,KAAK8D,UAAU,kBAEtEQ,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KACIN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAcO,OAAK,EAACC,QAAQ,gBAAgBC,QAASrF,KAAK8D,UAAU,oBAExEQ,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KACIN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAcO,OAAK,EAACC,QAAQ,gBAEhCd,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KACIN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAcO,OAAK,EAACC,QAAQ,cAK5Cd,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACI,GAAI,GACpBZ,SAtDzBf,EAAA,CAA2BgC,cA8DrBC,EAAe,CACjB,CAAEC,KAAM,IAAKhD,MAAO,GACpB,CAAEgD,KAAM,IAAKhD,MAAO,GACpB,CAAEgD,KAAM,KAAMhD,MAAO,IACrB,CAAEgD,KAAM,KAAMhD,MAAO,KAEnBiD,EAAW,CAAC,GAAI,GAAI,GAAI,IAAK,IAAK,KAElCC,cACF,SAAAA,EAAYlC,GAAO,IAAAmC,EAAA,OAAA3H,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAA0F,IACfC,EAAA3H,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAA0H,GAAA7B,KAAA7D,KAAMwD,KA4BVoC,KA7BmB5H,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KA6BZ,SAAAC,IAAA,IAAAwH,EAAA,OAAA3H,EAAAC,EAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACe6B,EAAe,OAAQ,mBAAoB,IAD1D,OACGiF,EADHhH,EAAAa,KAEHE,QAAQC,IAAIgG,GACO,OAAfA,EAAIlG,QAEJgG,EAAK3B,SAAS,CACV8B,MAAOD,EAAIC,MAAMC,IAAI,SAAAC,GACjB,MAAO,CACHR,KAAMQ,EAAEpD,KACRJ,MAAOwD,EAAEC,OAGjBC,oBAAqBL,EAAIK,oBACzBC,yBAA0BN,EAAIM,2BAbnC,wBAAAtH,EAAAkB,SAAA1B,EAAA2B,SA7BY2F,EA8CnBS,SAAW,WACPT,EAAK3B,SAAS,CACVqC,uBAAwB,GACxBC,4BAA6B,GAC7BC,uBAAwB,GACxBC,qBAAsB,GACtBC,yBAA0B,MApDfd,EAuDnBe,aAAe,SAAA9D,GAAI,OAAI,SAAAmB,GACR,qBAARnB,EACC+C,EAAK3B,SAALhG,OAAA2I,EAAA,EAAA3I,CAAA,GACK4E,GAAQ+C,EAAKzB,MAAM0C,oBAGxBjB,EAAK3B,SAALhG,OAAA2I,EAAA,EAAA3I,CAAA,GACK4E,EAAOmB,EAAE8C,OAAOrE,UA9DVmD,EAkEnBmB,yBAA2B,SAAC/C,EAAEnB,EAAKmE,GAC/B,IAAI,IAAI/D,EAAE,EAAEA,EAAE2C,EAAKzB,MAAM8C,cAAc/D,OAAOD,IACvC2C,EAAKzB,MAAM8C,cAAchE,GAAG+D,UAAYA,IACvCpB,EAAKzB,MAAM8C,cAAchE,GAAGJ,GAAQmB,EAAE8C,OAAOrE,OAGrDmD,EAAK3B,SAAS,CACVgD,cAAerB,EAAKzB,MAAM8C,iBAzEfrB,EA4EnBsB,OAAS,SAAAC,GACLvB,EAAK3B,SAAS,CACVmD,iBAAkBD,IAEtBtH,QAAQC,IAAIqH,IAhFGvB,EAkFnByB,aAAe,SAAArD,GACX4B,EAAK3B,SAAS,CACVmD,iBAAkBpD,EAAE8C,OAAOQ,MAAM,MApFtB1B,EAuFnB2B,cAvFmB,eAAA/G,EAAAvC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAuFH,SAAAoC,EAAMuD,GAAN,IAAAwD,EAAA1B,EAAA,OAAA3H,EAAAC,EAAAS,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cACZgF,EAAEyD,iBACF7B,EAAK3B,SAAS,CAAEyD,WAAW,KAEvBF,EAAK,IAAIG,UACVC,OAAO,QAAShC,EAAKzB,MAAMiD,kBAC9BI,EAAGI,OAAO,QAAShC,EAAKzB,MAAM0D,OAC9BL,EAAGI,OAAO,UAAWhC,EAAKzB,MAAM2D,SAChCN,EAAGI,OAAO,eAAgBhC,EAAKzB,MAAM4D,cACrCP,EAAGI,OAAO,YAAahC,EAAKzB,MAAM6D,WAClCR,EAAGI,OAAO,UAAWhC,EAAKzB,MAAM8D,MAChCT,EAAGI,OAAO,gBAAgBrI,KAAKC,UAAUoG,EAAKzB,MAAM8C,gBACpDO,EAAGI,OAAO,oBAAoBhC,EAAKzB,MAAM0C,mBACzCW,EAAGI,OAAO,kBAAkBhC,EAAKzB,MAAM+D,iBAb3BxH,EAAA1B,KAAA,GAgBMuB,EAAU,0BAA2BiH,GAhB3C,QAgBN1B,EAhBMpF,EAAAf,KAqBZE,QAAQC,IAAI,kBACZ8F,EAAK3B,SAAS,CAAEyD,WAAW,IAC3B7H,QAAQC,IAAIgG,GACZF,EAAKS,WACDP,EAAIqC,OACJrC,EAAIqC,OAAOnC,IAAI,SAAAoC,GACX,IAAMC,EAAY,kBAAoBD,EAAIE,MAC1C1C,EAAK3B,SAALhG,OAAA2I,EAAA,EAAA3I,CAAA,GAAiBoK,EAAYD,EAAIG,SAGrCC,MAAM,mCACN5C,EAAK3B,SAAU,CACXgE,KAAM,GACNF,aAAc,EACdD,QAAS,EACTD,MAAO,GACPG,UAAU,GACVE,gBAAgB,KAEpBtC,EAAKC,QAxCG,yBAAAnF,EAAAV,SAAAS,EAAAR,SAvFG,gBAAAC,GAAA,OAAAM,EAAAH,MAAAJ,KAAAK,YAAA,GAAAsF,EAkInB6C,UAAY,SAAAzE,GACR4B,EAAKzB,MAAM8C,cAAcyB,KAAK,CAAC1B,SAAU2B,KAAKC,QAC9ChD,EAAK3B,SAAU,CACXgD,cAAcrB,EAAKzB,MAAM8C,iBAnI7BrB,EAAKzB,MAAQ,CACTuD,WAAW,EACXmB,cAAerD,EACfwC,UAAU,GACVc,SAAUpD,EACVK,MAAO,GACPI,oBAAqB,GACrBC,yBAA0B,GAC1B6B,KAAM,GACNF,aAAc,EACdD,QAAS,GACTD,MAAO,GACPK,gBAAgB,GAChB5B,uBAAwB,GACxBC,4BAA6B,GAC7BC,uBAAwB,GACxBC,qBAAsB,GACtBC,yBAA0B,GAC1BqC,+BAA+B,GAC/B3B,iBAAiB,GACjBH,cAAc,GACdJ,mBAAkB,GAvBPjB,mFA2Bf3F,KAAK4F,wCA8GA,IAAAmD,EAAA/I,KACL,OACIsE,EAAAnG,EAAAoG,cAACD,EAAAnG,EAAMwG,SAAP,KACIL,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMC,WAAS,EAACmE,WAAW,SAASC,QAAQ,UACxC3E,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,IACX5E,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAOE,MAAO,CAAEqE,OAAQ,OAAQC,QAAS,SACrC9E,EAAAnG,EAAAoG,cAAA,4BACCvE,KAAKkE,MAAMuD,UAAYnD,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,MAAqB,GAC7CN,EAAAnG,EAAAoG,cAAA,QAAM8E,SAAUrJ,KAAKsH,cAAegC,QAAQ,uBAExChF,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMC,WAAS,EAACmE,WAAW,SAASC,QAAQ,UAC5C3E,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,GACfX,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAWE,MAAO,CAAEqE,OAAQ,MAAOjE,MAAO,OACtCqE,MAAM,kBACN/G,MAAOxC,KAAKkE,MAAM+D,gBAClBuB,SAAUxJ,KAAK0G,aAAa,mBAC5B+C,WAAYzJ,KAAKkE,MAAM4E,+BACvBY,MAAO1J,KAAKkE,MAAM4E,+BAA+B7F,OAAS,KAKlEqB,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,GACnBX,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAWE,MAAO,CAAEqE,OAAQ,MAAOjE,MAAO,OACtCyE,QAAM,EACNJ,MAAM,cACN/G,MAAOxC,KAAKkE,MAAM8D,KAClBwB,SAAUxJ,KAAK0G,aAAa,QAC5B+C,WAAYzJ,KAAKkE,MAAMmC,uBACvBqD,MAAO1J,KAAKkE,MAAMmC,uBAAuBpD,OAAS,GAEjDjD,KAAKkE,MAAM4B,MAAMC,IAAI,SAAA6D,GAAM,OACxBtF,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAUrC,IAAKqH,EAAOpH,MAAOA,MAAOoH,EAAOpH,OACtCoH,EAAOpE,UAKxBlB,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,GACnBX,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAWE,MAAO,CAAEqE,OAAQ,MAAOjE,MAAO,OACtCyE,QAAM,EACNJ,MAAM,eACN/G,MAAOxC,KAAKkE,MAAM2D,QAClB2B,SAAUxJ,KAAK0G,aAAa,WAC5B+C,WAAYzJ,KAAKkE,MAAMqC,uBACvBmD,MAAO1J,KAAKkE,MAAMqC,uBAAuBtD,OAAS,GAEjDjD,KAAKkE,MAAM2E,SAAS9C,IAAI,SAAA6D,GAAM,OAC3BtF,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAUrC,IAAKqH,EAAQpH,MAAOoH,GACzBA,EADL,WAMZtF,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,GACnBX,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAWE,MAAO,CAAEqE,OAAQ,MAAOjE,MAAO,OACtCyE,QAAM,EACNJ,MAAM,eACN/G,MAAOxC,KAAKkE,MAAM4D,aAClB0B,SAAUxJ,KAAK0G,aAAa,gBAC5B+C,WAAYzJ,KAAKkE,MAAMoC,4BACvBoD,MAAO1J,KAAKkE,MAAMoC,4BAA4BrD,OAAS,GAEtDjD,KAAKkE,MAAM0E,cAAc7C,IAAI,SAAA6D,GAAM,OAChCtF,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAUrC,IAAKqH,EAAOpH,MAAOA,MAAOoH,EAAOpH,OACtCoH,EAAOpE,UAKxBlB,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,GACnBX,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAWE,MAAO,CAAEqE,OAAQ,MAAOjE,MAAO,OACtCqE,MAAM,YACN/G,MAAOxC,KAAKkE,MAAM6D,UAClByB,SAAUxJ,KAAK0G,aAAa,aAC5B+C,WAAYzJ,KAAKkE,MAAMuC,yBACvBiD,MAAO1J,KAAKkE,MAAMuC,yBAAyBxD,OAAS,KAK5DqB,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,GACnBX,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CACIiF,QAAS7J,KAAKkE,MAAM0C,kBACpB4C,SAAUxJ,KAAK0G,aAAa,uBAHpC,qBAOApC,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,IACnBX,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAWE,MAAO,CAAEqE,OAAQ,MAAOjE,MAAO,OACtC4E,WAAS,EACTP,MAAM,QACNJ,OAAO,SACP3G,MAAOxC,KAAKkE,MAAM0D,MAClB4B,SAAUxJ,KAAK0G,aAAa,SAC5B+C,WAAYzJ,KAAKkE,MAAMsC,qBACvBkD,MAAO1J,KAAKkE,MAAMsC,qBAAqBvD,OAAS,KAGvDjD,KAAKkE,MAAM8C,cAAcjB,IAAI,SAAAgE,GAAK,OAC/BzF,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,GAAI1C,IAAKwH,EAAMhD,UAClCzC,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAWE,MAAO,CAAEqE,OAAQ,MAAOjE,MAAO,OACtCqE,MAAM,cACN/G,MAAOuH,EAAMC,WACbR,SAAU,SAACzF,GAAD,OAAOgF,EAAKjC,yBAAyB/C,EAAE,aAAagG,EAAMhD,aAGxEzC,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAWE,MAAO,CAAEqE,OAAQ,MAAOjE,MAAO,OACtCqE,MAAM,cACN/G,MAAOuH,EAAMvH,MACbgH,SAAU,SAACzF,GAAD,OAAMgF,EAAKjC,yBAAyB/C,EAAE,cAAcgG,EAAMhD,gBAKhFzC,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,IACX5E,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAQS,QAAS,SAACtB,GAAD,OAAOgF,EAAKP,UAAUzE,IAAIkG,QAAQ,WAAWnF,MAAO,CAAEqE,OAAQ,MAAOjE,MAAO,QACzFZ,EAAAnG,EAAAoG,cAAA,gBAAOD,EAAAnG,EAAAoG,cAAA,KAAG2F,UAAU,gBAApB,uBAGR5F,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,GACnBX,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAQE,MAAO,CAAEqE,OAAQ,MAAOjE,MAAO,QACnCZ,EAAAnG,EAAAoG,cAAA,SAAOjG,KAAK,OACRwG,MAAO,CAAEI,MAAO,OAAQiF,QAAS,EAAGC,SAAU,YAC9CZ,SAAUxJ,KAAKoH,eACnB9C,EAAAnG,EAAAoG,cAAA,YAAMD,EAAAnG,EAAAoG,cAAA,KAAG2F,UAAU,kBAAnB,8BAIR5F,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,IACX5E,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAQtG,KAAK,SAAS2L,QAAQ,WAAWnF,MAAO,CAAEqE,OAAQ,MAAOjE,MAAO,QACpEZ,EAAAnG,EAAAoG,cAAA,YAAMD,EAAAnG,EAAAoG,cAAA,KAAG2F,UAAU,kBAAnB,yBAOxB5F,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,IACX5E,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAOE,MAAO,CAAEqE,OAAQ,OAAQC,QAAS,SACrC9E,EAAAnG,EAAAoG,cAAA,6BACAD,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAME,MAAO,CAAEI,MAAO,OAAQiE,OAAQ,OAAQkB,OAAQ,OAAQC,UAAW,WAGjEtK,KAAKkE,MAAMiC,yBAAyBJ,IAAI,SAAAC,GAAC,OACrC1B,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAU2F,QAAM,EAAChI,IAAKyD,EAAEC,KACpB3B,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAQE,MAAO,CAAEuF,OAAQ,OAAQnF,MAAO,SACpCZ,EAAAnG,EAAAoG,cAAA,OAAKiG,IAAG,GAAA/K,OAAK7B,EAAL,YAAA6B,OAA2BuG,EAAEgC,KAAKyC,OAAS3F,MAAO,CAAEuF,OAAQ,WAExE/F,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CACIQ,QAASd,EAAAnG,EAAAoG,cAAA,gBAAQyB,EAAEgC,KAAKpF,KAAf,KAAuBoD,EAAE8B,aAAzB,cACT4C,UAAWpG,EAAAnG,EAAAoG,cAAA,gBAAQyB,EAAEgC,KAAK2C,SAAW,cAAgB,UAA1C,sBAjS9BrF,aAgTvBsF,cACF,SAAAA,EAAYpH,GAAO,IAAAqH,EAAA,OAAA7M,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAA4K,IACfC,EAAA7M,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAA4M,GAAA/G,KAAA7D,KAAMwD,KA+BVsH,UAhCmB,eAAAjK,EAAA7C,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAgCP,SAAA0C,EAAMiD,GAAN,IAAA8B,EAAA,OAAA3H,EAAAC,EAAAS,KAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,UACRgF,EAAEyD,iBACuC,GAAtCqD,EAAK3G,MAAM6G,iBAAiB9H,OAFvB,CAAAlC,EAAAhC,KAAA,eAGJwJ,MAAM,yBAHFxH,EAAAjB,OAAA,sBAML+K,EAAK3G,MAAM8G,oBAAoBlD,aAAe+C,EAAK3G,MAAM6G,iBAAiB9H,QANrE,CAAAlC,EAAAhC,KAAA,eAOJwJ,MAAM,+CAA+CsC,EAAK3G,MAAM8G,oBAAoBlD,cAPhF/G,EAAAjB,OAAA,UAQG,GARH,cAUR+K,EAAKzE,WACLyE,EAAK7G,SAAS,CAAEyD,WAAW,IAXnB1G,EAAAhC,KAAA,GAYU6B,EAAe,OAAD,kBAA4B,CAAEqK,cAAeJ,EAAK3G,MAAM+G,cAAcC,QAAQL,EAAK3G,MAAM6G,mBAZjH,QAYFlF,EAZE9E,EAAArB,KAaRmL,EAAK7G,SAAS,CACVyD,WAAW,IAEX5B,EAAIqC,OACJrC,EAAIqC,OAAOnC,IAAI,SAAAoC,GACX,IAAMC,EAAY,OAASD,EAAIE,MAC/BwC,EAAK7G,SAALhG,OAAA2I,EAAA,EAAA3I,CAAA,GAAiBoK,EAAYD,EAAIG,QAGlB,OAAfzC,EAAIlG,QACJ4I,MAAM1C,EAAIyC,KACVuC,EAAKM,aAGL5C,MAAM,4CA3BN,yBAAAxH,EAAAhB,SAAAe,EAAAd,SAhCO,gBAAAE,GAAA,OAAAW,EAAAT,MAAAJ,KAAAK,YAAA,GAAAwK,EA+DnBnE,aAAe,SAAA9D,GAAI,OAAI,SAAAmB,GACnB,GAAW,iBAARnB,EAAyB,CACxBiI,EAAK7G,SAAS,CAAC+G,iBAAiB,GAAGC,oBAAoB,KACvD,IAAI,IAAII,EAAE,EAAEA,EAAEP,EAAK3G,MAAMiC,yBAAyBlD,OAAOmI,IACpD,GAAGP,EAAK3G,MAAMiC,yBAAyBiF,GAAGnF,KAAOlC,EAAE8C,OAAOrE,MAAO,CAC7DqI,EAAK7G,SAAS,CAACgH,oBAAoBH,EAAK3G,MAAMiC,yBAAyBiF,KACpEP,EAAK3G,MAAMiC,yBAAyBiF,GAAGF,QAAQjI,OAAQ,GACtD4H,EAAK7G,SAAS,CAAC+G,iBAAiBF,EAAK3G,MAAMiC,yBAAyBiF,GAAGF,UAE5E,OAIZL,EAAK7G,SAALhG,OAAA2I,EAAA,EAAA3I,CAAA,GACK4E,EAAOmB,EAAE8C,OAAOrE,UA7ENqI,EAgFnBjF,KAhFmB5H,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAgFZ,SAAAmD,IAAA,IAAAsE,EAAA,OAAA3H,EAAAC,EAAAS,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,cAAAyC,EAAAzC,KAAA,EACe6B,EAAe,OAAQ,mBAAoB,IAD1D,OACGiF,EADHrE,EAAA9B,KAEHE,QAAQC,IAAIgG,GACO,OAAfA,EAAIlG,QAEJkL,EAAK7G,SAAS,CACXmC,yBAA0BN,EAAIM,2BANlC,wBAAA3E,EAAAzB,SAAAwB,EAAAvB,SAhFY6K,EA0FnBQ,UA1FmBrN,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KA0FP,SAAA8D,IAAA,IAAA2D,EAAA,OAAA3H,EAAAC,EAAAS,KAAA,SAAAuD,GAAA,cAAAA,EAAArD,KAAAqD,EAAApD,MAAA,cAAAoD,EAAApD,KAAA,EACU6B,EAAe,MAAO,mBADhC,OACFiF,EADE1D,EAAAzC,KAERE,QAAQC,IAAIgG,GACZgF,EAAK7G,SAAS,CACVsH,SAAUzF,IAJN,wBAAA1D,EAAApC,SAAAmC,EAAAlC,SA1FO6K,EAkGnBU,QAAU,SAAAC,GAEN,IADA,IAAIC,EAAQ,GACJzI,EAAE,EAAEA,EAAE6H,EAAK3G,MAAMoH,SAASrI,OAAOD,IAClCwI,EAASnI,QAAQwH,EAAK3G,MAAMoH,SAAStI,GAAGiD,MAAQ,IAC/CwF,GAAUZ,EAAK3G,MAAMoH,SAAStI,GAAG0I,UAAU,IAAIb,EAAK3G,MAAMoH,SAAStI,GAAG2I,MAAM,MAGpF,OAAOF,GAvGPZ,EAAK3G,MAAQ,CACTuD,WAAW,EACXsD,iBAAiB,GACjBO,SAAS,GACTnF,yBAA0B,GAC1B8E,cAAc,GACdW,kBAAmB,GACnBhJ,KAAO,GACPoI,oBAAoB,IAVTH,2EAcf7K,KAAKgE,SAAS,CACVyD,WAAW,EACXsD,iBAAiB,GACjB5E,yBAA0B,GAC1B8E,cAAc,GACdW,kBAAmB,GACnBhJ,KAAO,GACPoI,oBAAoB,KAExBhL,KAAK4F,mDAGN5F,KAAK4F,OACL5F,KAAKqL,+CAGJrL,KAAKgE,SAAS,CAAE4H,kBAAkB,sCA8E7B,IAAAC,EAAA7L,KAEL,OACIsE,EAAAnG,EAAAoG,cAACD,EAAAnG,EAAMwG,SAAP,KACIL,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMC,WAAS,EAACmE,WAAW,SAASC,QAAQ,UACxC3E,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,IACX5E,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAOE,MAAO,CAAEqE,OAAQ,OAAQC,QAAS,SACrC9E,EAAAnG,EAAAoG,cAAA,wBACCvE,KAAKkE,MAAMuD,UAAYnD,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,MAAqB,GAC7CN,EAAAnG,EAAAoG,cAAA,QAAM8E,SAAUrJ,KAAK8K,WAEjBxG,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMC,WAAS,EAACmE,WAAW,SAASC,QAAQ,UACxC3E,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,IACnBX,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAWE,MAAO,CAAEqE,OAAQ,MAAOjE,MAAO,OACtCyE,QAAM,EACNJ,MAAM,oBACN/G,MAAOxC,KAAKkE,MAAM+G,cAClBzB,SAAUxJ,KAAK0G,aAAa,iBAC5B+C,WAAYzJ,KAAKkE,MAAM0H,kBACvBlC,MAAO1J,KAAKkE,MAAM0H,kBAAkB3I,OAAS,GAE5CjD,KAAKkE,MAAMiC,yBAAyBJ,IAAI,SAAA6D,GAAM,OAC3CtF,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAUrC,IAAKqH,EAAO3D,IAAKzD,MAAOoH,EAAO3D,KACpC2D,EAAO3B,iBAAmB2B,EAAO5B,KAAKpF,SAIlD5C,KAAKkE,MAAM8G,qBAAuBhL,KAAKkE,MAAM8G,oBAAoB/E,KAC9D3B,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KACIN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CACIQ,QAASd,EAAAnG,EAAAoG,cAAA,gBAAQ,gBAAgBvE,KAAKkE,MAAM8G,oBAAoBE,QAAQjI,OAAQ,MAAQjD,KAAKkE,MAAM8G,oBAAoBlD,aAA9G,KACT4C,UAAWpG,EAAAnG,EAAAoG,cAAA,YAAO,QAAUvE,KAAKkE,MAAM8G,oBAAoBhD,KAAKpF,UAIhF0B,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,IACnBX,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KACQN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CACIQ,QAASd,EAAAnG,EAAAoG,cAAA,gBAAQ,iBAAR,QAGrBD,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAQE,MAAO,CAAEqE,OAAQ,MAAOjE,MAAO,OACnC4G,UAAQ,EACRtJ,MAAOxC,KAAKkE,MAAM6G,iBAClBvB,SAAUxJ,KAAK0G,aAAa,oBAC5BqF,YAAa,SAAAP,GAAQ,OAAIK,EAAKN,QAAQC,KAE1ClH,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAUoH,UAAQ,EAACxJ,MAAM,IACrB8B,EAAAnG,EAAAoG,cAAA,6BAECvE,KAAKkE,MAAMoH,SAASvF,IAAI,SAAAkG,GAAI,OACzB3H,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAUrC,IAAK0J,EAAKhG,IAAKzD,MAAOyJ,EAAKhG,KACjC3B,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAUiF,QAASgC,EAAK3H,MAAM6G,iBAAiB1H,QAAQ4I,EAAKhG,MAAQ,IACpE3B,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAcQ,QAASd,EAAAnG,EAAAoG,cAAA,gBAAQ0H,EAAKP,UAAY,IAAKO,EAAKN,MAAM,IAAzC,WAIlC3L,KAAKkE,MAAM6G,kBAAoB/K,KAAKkE,MAAM6G,iBAAiB9H,OAAS,GACjEqB,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KACIN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CACIQ,QAASd,EAAAnG,EAAAoG,cAAA,gBAAQ,kBAAkBvE,KAAKkE,MAAM6G,iBAAiB9H,OAAtD,SAMzBqB,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,IACX5E,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAQtG,KAAK,SAAS2L,QAAQ,WAAWnF,MAAO,CAAEqE,OAAQ,MAAOjE,MAAO,QACpEZ,EAAAnG,EAAAoG,cAAA,YAAMD,EAAAnG,EAAAoG,cAAA,KAAG2F,UAAU,kBAAnB,gCAjLnB5E,aAiMnB4G,EAAoB,CACtB,CAAE1G,KAAM,SAAUhD,MAAO,GACzB,CAAEgD,KAAM,KAAMhD,MAAO,IAGnB2J,cACF,SAAAA,EAAY3I,GAAO,IAAA4I,EAAA,OAAApO,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAAmM,IACfC,EAAApO,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAAmO,GAAAtI,KAAA7D,KAAMwD,KAiBV4C,SAAW,WACPgG,EAAKpI,SAAS,CACVqI,cAAe,GACfC,kBAAmB,GACnBC,qBAAsB,MAtBXH,EAyBnB1F,aAAe,SAAA9D,GAAI,OAAI,SAAAmB,GAEnBqI,EAAKpI,SAALhG,OAAA2I,EAAA,EAAA3I,CAAA,GACK4E,EAAOmB,EAAE8C,OAAOrE,UA5BN4J,EA+BnBnF,OAAS,SAAAC,GACLkF,EAAKpI,SAAS,CACVwI,WAAYtF,IAEhBtH,QAAQC,IAAIqH,IAnCGkF,EAqCnBhF,aAAe,SAAArD,GACXqI,EAAKpI,SAAS,CACVwI,WAAYzI,EAAE8C,OAAOQ,MAAM,MAvChB+E,EA0CnBxG,KA1CmB5H,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KA0CZ,SAAAqO,IAAA,IAAA5G,EAAA,OAAA3H,EAAAC,EAAAS,KAAA,SAAA8N,GAAA,cAAAA,EAAA5N,KAAA4N,EAAA3N,MAAA,cAAA2N,EAAA3N,KAAA,EACe6B,EAAe,OAAQ,aAAc,IADpD,OACGiF,EADH6G,EAAAhN,KAEH0M,EAAKpI,SAAS,CACV8B,MAAOD,EAAIC,QAEflG,QAAQC,IAAIgG,EAAIC,OALb,wBAAA4G,EAAA3M,SAAA0M,EAAAzM,SA1CYoM,EAoDnBO,QApDmB,eAAAC,EAAA5O,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAoDT,SAAAyO,EAAM9I,GAAN,IAAAwD,EAAA1B,EAAA,OAAA3H,EAAAC,EAAAS,KAAA,SAAAkO,GAAA,cAAAA,EAAAhO,KAAAgO,EAAA/N,MAAA,cACNgF,EAAEyD,iBACF4E,EAAKpI,SAAS,CAAEyD,WAAW,KACvBF,EAAK,IAAIG,UACVC,OAAO,QAASyE,EAAKlI,MAAMsI,WAAY,aAC1CjF,EAAGI,OAAO,OAAQyE,EAAKlI,MAAM6I,WAC7BxF,EAAGI,OAAO,WAAYyE,EAAKlI,MAAM8I,eACjCzF,EAAGI,OAAO,cAAeyE,EAAKlI,MAAM+I,kBAP9BH,EAAA/N,KAAA,EAUYuB,EAAU,iBAAkBiH,GAVxC,OAUA1B,EAVAiH,EAAApN,KAWNE,QAAQC,IAAI,kBACZuM,EAAKpI,SAAS,CAAEyD,WAAW,IAC3B7H,QAAQC,IAAIgG,GACZuG,EAAKhG,WACDP,EAAIqC,OACJrC,EAAIqC,OAAOnC,IAAI,SAAAoC,GACX,IAAMC,EAAY,YAAcD,EAAIE,MACpC+D,EAAKpI,SAALhG,OAAA2I,EAAA,EAAA3I,CAAA,GAAiBoK,EAAYD,EAAIG,QAGrB,GAAbzC,EAAI6D,MACHnB,MAAM1C,EAAIqH,UAEV3E,MAAM,2BACN6D,EAAKxG,QAzBP,yBAAAkH,EAAA/M,SAAA8M,EAAA7M,SApDS,gBAAAG,GAAA,OAAAyM,EAAAxM,MAAAJ,KAAAK,YAAA,GAEf+L,EAAKlI,MAAQ,CACTuD,WAAW,EACX0F,gBAAiBjB,EACjBpG,MAAO,GACPiH,UAAW,GACXC,cAAe,EACfC,iBAAkB,GAClBT,WAAY,GACZY,kBAAmB,EACnBf,cAAe,GACfC,kBAAmB,GACnBC,qBAAsB,GACtBc,eAAgB,IAdLjB,mFAkDfpM,KAAK4F,wCAiCL,OACItB,EAAAnG,EAAAoG,cAACD,EAAAnG,EAAMwG,SAAP,KACIL,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMC,WAAS,EAACmE,WAAW,SAASC,QAAQ,UACxC3E,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,IACX5E,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAOE,MAAO,CAAEqE,OAAQ,OAAQC,QAAS,SACrC9E,EAAAnG,EAAAoG,cAAA,sBACCvE,KAAKkE,MAAMuD,UAAYnD,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,MAAqB,GAC7CN,EAAAnG,EAAAoG,cAAA,QAAM8E,SAAUrJ,KAAK2M,SACjBrI,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMC,WAAS,EAACmE,WAAW,SAASC,QAAQ,UACxC3E,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,GACnBX,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAWE,MAAO,CAAEqE,OAAQ,MAAOjE,MAAO,OACtCqE,MAAM,YACNJ,OAAO,SACP3G,MAAOxC,KAAKkE,MAAMoJ,SAClB9D,SAAUxJ,KAAK0G,aAAa,aAC5B+C,WAAYzJ,KAAKkE,MAAMmI,cACvB3C,MAAO1J,KAAKkE,MAAMmI,cAAcpJ,OAAS,KAGjDqB,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,GACnBX,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAWE,MAAO,CAAEqE,OAAQ,MAAOjE,MAAO,OACtCqE,MAAM,kBACNJ,OAAO,SACP3G,MAAM,KACN+K,UAAU,KAGlBjJ,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,GAEnBX,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAWE,MAAO,CAAEqE,OAAQ,MAAOjE,MAAO,OACtCsI,GAAG,uBACH7D,QAAM,EACNJ,MAAM,kBACN/G,MAAOxC,KAAKkE,MAAM8I,cAClBxD,SAAUxJ,KAAK0G,aAAa,kBAE3B1G,KAAKkE,MAAMiJ,gBAAgBpH,IAAI,SAAA6D,GAAM,OAClCtF,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAUrC,IAAKqH,EAAOpH,MAAOA,MAAOoH,EAAOpH,OACtCoH,EAAOpE,UAKxBlB,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,GACnBX,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAQE,MAAO,CAAEqE,OAAQ,MAAOjE,MAAO,QACnCZ,EAAAnG,EAAAoG,cAAA,SAAOjG,KAAK,OACRwG,MAAO,CAAEI,MAAO,OAAQiF,QAAS,EAAGC,SAAU,YAC9CZ,SAAUxJ,KAAKoH,eACnB9C,EAAAnG,EAAAoG,cAAA,YAAMD,EAAAnG,EAAAoG,cAAA,KAAG2F,UAAU,kBAAnB,wBAGR5F,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,IACX5E,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAQtG,KAAK,SAAS2L,QAAQ,WAAWnF,MAAO,CAAEqE,OAAQ,MAAOjE,MAAO,QACpEZ,EAAAnG,EAAAoG,cAAA,YAAMD,EAAAnG,EAAAoG,cAAA,KAAG2F,UAAU,kBAAnB,mBAOxB5F,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,IACX5E,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAOE,MAAO,CAAEqE,OAAQ,OAAQC,QAAS,SACrC9E,EAAAnG,EAAAoG,cAAA,uBACAD,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAME,MAAO,CAAEI,MAAO,OAAQiE,OAAQ,OAAQkB,OAAQ,OAAQC,UAAW,WAGjEtK,KAAKkE,MAAM4B,MAAMC,IAAI,SAAAC,GAAC,OAClB1B,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAU2F,QAAM,EAAChI,IAAKyD,EAAEC,KACpB3B,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAQE,MAAO,CAAEuF,OAAQ,OAAQnF,MAAO,SACpCZ,EAAAnG,EAAAoG,cAAA,OAAKiG,IAAG,GAAA/K,OAAK7B,EAAL,YAAA6B,OAA2BuG,EAAEyE,OAAS3F,MAAO,CAAEuF,OAAQ,WAEnE/F,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CACIQ,QAASd,EAAAnG,EAAAoG,cAAA,gBAAQyB,EAAEpD,KAAV,KACT8H,UAAWpG,EAAAnG,EAAAoG,cAAA,gBAAQyB,EAAE2E,SAAW,cAAgB,UAArC,sBA7JpCrF,qBCpkBjBmI,EAAS,CACXC,WAAY,OACZC,WAAY,UACZC,MAAO,QAGEC,EAAUC,yBAAe,CAClCC,QAAS,CACLzP,KAAM,OACN8G,QAAS,CACL4I,MAAO,OACPC,KAAMR,EAAOE,WACbO,KAAM,WAETxD,UAAW,CACTuD,KAAMR,EAAOE,YAEfQ,UAAW,WAEhBC,WAAY,CACRC,iBAAiB,GAEpBC,OAAQ,CACLH,UAAa,WAEjBI,KAAM,CACFC,WAAc,0BACdC,cAAiB,6BAErBC,QAAS,CACLC,gBAAmB,uBAEvBC,MAAO,CACHD,gBAAiB,4BAIZE,EAAcpB,EAGbqB,EAAa,CACvBC,IAAK,CACDJ,gBAAiBlB,EAAOC,YAE5BsB,WAAY,CACRC,YAAa,GACbC,YAAa,GACbC,MAAO1B,EAAOE,YAElByB,KAAM,CACFlK,MAAO,KAEXmK,QAAS,CACLnK,MAAO,IACPmF,OAAQ,OACR8E,MAAO1B,EAAOE,WACdgB,gBAAiBlB,EAAOC,YAE5B4B,YAAa,CACTX,gBAAiBlB,EAAOC,WACxBtE,QAAS,EACT+F,MAAO1B,EAAOE,YAElB4B,MAAO,CACHZ,gBAAiB,sBACjBQ,MAAO1B,EAAOE,YAElB6B,QAAS,CACLL,MAAO1B,EAAOE,WACdvE,QAAS,EACTqG,SAAU,SACVC,WAAY,UAEhBlK,KAAM,CACF2J,MAAO1B,EAAOG,MACdxE,QAAS,EACTqG,SAAU,UAEdb,MAAO,CACHD,gBAAiBlB,EAAOC,YAE5BiC,cAAe,CACXtF,OAAQuF,OAAOC,WAAa,IAAM,GAAK,IACvC3K,MAAO0K,OAAOC,WAAa,IAAM,GAAI,KAEzCC,QAAU,CACNzF,OAAQ,QACR0F,SAAU,oDAGdC,UAAW,CACP5G,QAAS,GACTuF,gBAAiB,sBACjBQ,MAAO1B,EAAOG,OAElBqC,OAAQ,CACJR,SAAU,SACVC,WAAY,SACZP,MAAO1B,EAAOE,YAElBuC,QAAS,CACL9F,SAAU,WACV+F,OAAQ,EACRC,IAAKR,OAAOC,WAAa,IAAK,OAAS,OACvCQ,MAAOT,OAAOC,WAAa,IAAM,GAAK,GACtCS,UAAW,cAEfC,SAAU,CACNC,SAAU,IACVC,UAAW,KAEfC,iBAAeC,EAAA,CACXC,QAAS,OACT5H,WAAY,SACZ6H,eAAgB,SAChBC,UAAW,UAJA9S,OAAA2I,EAAA,EAAA3I,CAAA2S,EAAA,UAKF,QALE3S,OAAA2I,EAAA,EAAA3I,CAAA2S,EAAA,gBAMI,UANJA,qBCzGnB,SAASI,EAAWvN,GAChB,OAAOc,EAAAnG,EAAAoG,cAACK,EAAA,EAAD5G,OAAAgT,OAAA,CAAOC,UAAU,MAASzN,IAE9B,IAAM0N,EAAb,SAAA3N,GACI,SAAA2N,EAAY1N,GAAO,IAAAC,EAAA,OAAAzF,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAAkR,IACfzN,EAAAzF,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAAkT,GAAArN,KAAA7D,KAAMwD,KASV2N,gBAAkB,WACd1N,EAAKO,SAAS,CACVoN,QAAS3N,EAAKS,MAAMkN,UAZT3N,EAenB4N,gBAfmBrT,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAeD,SAAAC,IAAA,IAAAwH,EAAA,OAAA3H,EAAAC,EAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACIsC,EAAc,OAAQ,kCAAmC,CAAEiQ,SAAU7N,EAAKD,MAAMgK,KADpF,OACR3H,EADQhH,EAAAa,KAEdE,QAAQC,IAAIgG,GACO,OAAfA,EAAIlG,QACJ8D,EAAKD,MAAMoC,OACXnC,EAAK0N,mBAGL5I,MAAM1C,EAAIqC,OAAO,IARP,wBAAArJ,EAAAkB,SAAA1B,EAAA2B,SAfCyD,EA0BnB8N,gBA1BmBvT,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KA0BD,SAAAoC,IAAA,IAAAqF,EAAA,OAAA3H,EAAAC,EAAAS,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cAAA0B,EAAA1B,KAAA,EACIsC,EAAc,OAAQ,mCAAoC,CAAEiQ,SAAU7N,EAAKD,MAAMgK,KADrF,OAEK,QADb3H,EADQpF,EAAAf,MAENC,QACJ8D,EAAKD,MAAMoC,OACXnC,EAAK0N,mBAGL5I,MAAM1C,EAAIqC,OAAO,IAPP,wBAAAzH,EAAAV,SAAAS,EAAAR,SAxBdyD,EAAKS,MAAQ,CACTkN,QAAQ,EACRI,SAAU/N,EAAKD,MAAMgO,SACrBxJ,KAAMvE,EAAKD,MAAMwE,KACjByJ,IAAKhO,EAAKD,MAAMiO,IAChBC,aAAcjO,EAAKD,MAAMkO,cAPdjO,EADvB,OAAAzF,OAAAmG,EAAA,EAAAnG,CAAAkT,EAAA3N,GAAAvF,OAAAoG,EAAA,EAAApG,CAAAkT,EAAA,EAAA3O,IAAA,SAAAC,MAAA,WAuCQ,OACI8B,EAAAnG,EAAAoG,cAACD,EAAAnG,EAAMwG,SAAP,KACIL,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACqE,GAAI,GAAIjE,GAAI,EAAGgE,QAAQ,SAASD,WAAW,SAASlE,MAAO,CAAE6M,aAAc,IAC5FrN,EAAAnG,EAAAoG,cAAA,OAAK2F,UAAS,GAAAzK,OAAKmS,IAAOtU,aAAZ,2BAAmD+H,QAASrF,KAAKmR,iBAC3E7M,EAAAnG,EAAAoG,cAAA,OAAM2F,UAAS,GAAAzK,OAAKmS,IAAO1U,UAAZ,KAAAuC,OAAyBmS,IAAOvU,WAC3CiH,EAAAnG,EAAAoG,cAAA,OAAM2F,UAAS,GAAAzK,OAAKmS,IAAOzU,SAAZ,MACXmH,EAAAnG,EAAAoG,cAAA,OAAKiG,IAAG,GAAA/K,OAAK7B,EAAL,YAAA6B,OAA2BO,KAAKkE,MAAM8D,KAAKyC,OAASoH,IAAI,SAChEvN,EAAAnG,EAAAoG,cAAA,iBAEJD,EAAAnG,EAAAoG,cAAA,OAAM2F,UAAS,GAAAzK,OAAKmS,IAAOzU,SAAZ,KAAAsC,OAAwBmS,IAAOxU,KAC9CkH,EAAAnG,EAAAoG,cAAA,kBAEAD,EAAAnG,EAAAoG,cAAA,OAAM2F,UAAS,GAAAzK,OAAKmS,IAAOzU,SAAZ,MACXmH,EAAAnG,EAAAoG,cAAA,OAAKiG,IAAG,GAAA/K,OAAK7B,GAAL6B,OAAmBO,KAAKkE,MAAMsN,SAAS/G,OAASoH,IAAI,aAC5DvN,EAAAnG,EAAAoG,cAAA,UAAKvE,KAAKkE,MAAMsN,SAAS9F,aAGjCpH,EAAAnG,EAAAoG,cAAA,OAAK2F,UAAS,GAAAzK,OAAKmS,IAAOrU,eACrB+G,EAAAnG,EAAAoG,cAAA,UAAKvE,KAAKkE,MAAM8D,KAAKpF,MACrB0B,EAAAnG,EAAAoG,cAAA,kBAAUvE,KAAKkE,MAAMuN,IAArB,UAIbnN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAQkN,KAAM9R,KAAKkE,MAAMkN,OAAQW,QAAS/R,KAAKmR,iBAC3C7M,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,kBACAN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,4CAGAN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KACM5E,KAAKkE,MAAMwN,aAAmI,GAApHpN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAQS,QAASrF,KAAKqR,gBAAiBvM,MAAO,CAAEqK,MAAO,QAASO,WAAY,WAA5E,oBAC5BpL,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAQS,QAASrF,KAAKuR,gBAAiBzM,MAAO,CAAEqK,MAAO,MAAOO,WAAY,WAA1E,2BArExBwB,EAAA,CAAmC5L,aA+EtB0M,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAvM,EAAA3H,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAAgS,GAAA,QAAAG,EAAA9R,UAAA4C,OAAAmP,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAAjS,UAAAiS,GAAA,OAAA3M,EAAA3H,OAAA2F,EAAA,EAAA3F,CAAAgC,MAAAkS,EAAAlU,OAAA4F,EAAA,EAAA5F,CAAAgU,IAAAnO,KAAAzD,MAAA8R,EAAA,CAAAlS,MAAAP,OAAA2S,MACIG,SAAW,SAAA/E,GAAE,sBAAA3M,EAAA7C,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAI,SAAA0C,EAAMiD,GAAN,OAAA7F,EAAAC,EAAAS,KAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,OACb4G,EAAKnC,MAAMgP,QAAQ/J,KAAnB,UAAAhJ,OAAkC+N,IADrB,wBAAAzM,EAAAhB,SAAAe,EAAAd,SAAJ,gBAAAC,GAAA,OAAAY,EAAAT,MAAAJ,KAAAK,YAAA,IADjBsF,EAAA,OAAA3H,OAAAmG,EAAA,EAAAnG,CAAAgU,EAAAC,GAAAjU,OAAAoG,EAAA,EAAApG,CAAAgU,EAAA,EAAAzP,IAAA,SAAAC,MAAA,WAIa,IAAAiQ,EAC+BzS,KAAKwD,MAAjCgK,EADHiF,EACGjF,GAAIiE,EADPgB,EACOhB,IAAKzJ,EADZyK,EACYzK,KAAMwJ,EADlBiB,EACkBjB,SACvB,OACIlN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACqE,GAAI,GAAIjE,GAAI,EAAGyN,GAAI,EAAGzJ,QAAQ,SAASD,WAAW,SAASlE,MAAO,CAAE6M,aAAc,IACnGrN,EAAAnG,EAAAoG,cAAA,OAAK2F,UAAS,GAAAzK,OAAKmS,IAAOtU,aAAZ,0BAAkD+H,QAASrF,KAAKuS,SAAS/E,IACnFlJ,EAAAnG,EAAAoG,cAAA,OAAM2F,UAAS,GAAAzK,OAAKmS,IAAO1U,UAAZ,KAAAuC,OAAyBmS,IAAOvU,WAC3CiH,EAAAnG,EAAAoG,cAAA,OAAM2F,UAAS,GAAAzK,OAAKmS,IAAOzU,SAAZ,MACXmH,EAAAnG,EAAAoG,cAAA,OAAKiG,IAAG,GAAA/K,OAAK7B,EAAL,YAAA6B,OAA2BuI,EAAKyC,SACxCnG,EAAAnG,EAAAoG,cAAA,iBAEJD,EAAAnG,EAAAoG,cAAA,OAAM2F,UAAS,GAAAzK,OAAKmS,IAAOzU,SAAZ,KAAAsC,OAAwBmS,IAAOxU,KAC1CkH,EAAAnG,EAAAoG,cAAA,iBAEJD,EAAAnG,EAAAoG,cAAA,OAAK2F,UAAS,GAAAzK,OAAKmS,IAAOzU,SAAZ,MACVmH,EAAAnG,EAAAoG,cAAA,OAAKiG,IAAG,GAAA/K,OAAK7B,GAAL6B,OAAmB+R,EAAS/G,SACpCnG,EAAAnG,EAAAoG,cAAA,UAAKiN,EAAS9F,aAGtBpH,EAAAnG,EAAAoG,cAAA,OAAK2F,UAAS,GAAAzK,OAAKmS,IAAOrU,eACtB+G,EAAAnG,EAAAoG,cAAA,UAAKyD,EAAKpF,MACV0B,EAAAnG,EAAAoG,cAAA,mBAAWkN,EAAX,cAxBxBO,EAAA,CAA+B1M,aAgClBqN,EAAb,SAAAC,GACI,SAAAD,EAAYnP,GAAO,IAAAuF,EAAA,OAAA/K,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAA2S,IACf5J,EAAA/K,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAA2U,GAAA9O,KAAA7D,KAAMwD,KAgBVqP,WAAa,WACL9J,EAAK7E,MAAM4O,QASX/J,EAAKvF,MAAM6B,UARN0D,EAAK7E,MAAM6O,gBAKZhK,EAAKvF,MAAMwP,gBAAgBjK,EAAK7E,MAAM+G,eAJtClC,EAAK/E,SAAS,CACVoN,QAASrI,EAAK7E,MAAMkN,UArBjBrI,EA8BnBkK,eAAiB,SAAChI,GACdlC,EAAKvF,MAAMwP,gBAAgB/H,IA/BZlC,EAiCnBmK,eAAiB,SAAA1F,GAAE,sBAAAlM,EAAAtD,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAI,SAAAmD,EAAMwC,GAAN,OAAA7F,EAAAC,EAAAS,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,cACnBa,QAAQC,IAAI2N,GADOhM,EAAAzC,KAAA,EAEDsC,EAAc,OAAD,mBAA6B,CAAE4J,cAAelC,EAAK7E,MAAM+G,gBAFrE,OAGA,OAHAzJ,EAAA9B,KAGXC,OACJoJ,EAAKvF,MAAMoC,QAEXmD,EAAK8J,aACLtK,MAAM,4BAPS,wBAAA/G,EAAAzB,SAAAwB,EAAAvB,SAAJ,gBAAAE,GAAA,OAAAoB,EAAAlB,MAAAJ,KAAAK,YAAA,IA/Bf0I,EAAK7E,MAAQ,CACTkN,QAAQ,EACRpJ,KAAMe,EAAKvF,MAAMwE,KACjB+K,gBAAiBhK,EAAKvF,MAAMuP,gBAC5BjL,aAAciB,EAAKvF,MAAMsE,aACzBmD,cAAelC,EAAKvF,MAAMyH,cAC1BR,MAAM1B,EAAKvF,MAAMiH,MACjB0I,kBAAkBpK,EAAKvF,MAAM2P,kBAC7BpL,UAAUgB,EAAKvF,MAAMuE,UACrBqL,MAAMrK,EAAKvF,MAAM4P,MACjBnL,gBAAgBc,EAAKvF,MAAMyE,gBAC3B6K,QAAQ/J,EAAKvF,MAAMsP,UAAW,GAbnB/J,EADvB,OAAA/K,OAAAmG,EAAA,EAAAnG,CAAA2U,EAAAC,GAAA5U,OAAAoG,EAAA,EAAApG,CAAA2U,EAAA,EAAApQ,IAAA,SAAAC,MAAA,WA6Ca,IAAAqI,EAAA7K,KAWL,OACIsE,EAAAnG,EAAAoG,cAACD,EAAAnG,EAAMwG,SAAP,KACIL,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACqE,GAAI,GAAIjE,GAAI,EAAGyN,GAAI,EAAGzJ,QAAQ,SAASD,WAAW,SAASlE,MAAO,CAAE6M,aAAc,IACnGrN,EAAAnG,EAAAoG,cAAA,OAAK2F,UAAW0H,IAAO9U,SAAUuI,QAASrF,KAAK6S,YAC3CvO,EAAAnG,EAAAoG,cAAA,WACID,EAAAnG,EAAAoG,cAAA,OAAKiG,IAAMxK,KAAKwD,MAAMiH,OAA2B,IAAlBzK,KAAKwD,MAAMiH,MAAhC,GAAAhL,OAAgD7B,EAAhD,kBAAA6B,OAA4EO,KAAKwD,MAAMiH,OAAvF,GAAAhL,OAAkG7B,EAAlG,YAAA6B,OAAwHO,KAAKwD,MAAMwE,KAAKyC,OAAS3F,MAAO,CAACI,MAAO,OAAOuL,UAAU,IAAI1L,UAAU,QAE7MT,EAAAnG,EAAAoG,cAAA,OAAM2F,UAAW0H,IAAOnU,YACxB6G,EAAAnG,EAAAoG,cAAA,UAAKvE,KAAKwD,MAAMyE,iBAAmBjI,KAAKwD,MAAMwE,KAAKpF,KAAnD,MAEA0B,EAAAnG,EAAAoG,cAAA,MAAI2F,UAAS,GAAAzK,OAAKmS,IAAO7U,aAAZ,KAAA0C,OAA4BmS,IAAOvU,WAC5CiH,EAAAnG,EAAAoG,cAAA,OAAK2F,UAAW0H,IAAO5U,WACtBsH,EAAAnG,EAAAoG,cAAA,4BADD,KAC+BvE,KAAKwD,MAAMwE,KAAK2C,SAAW,eAAiB,WAE5ErG,EAAAnG,EAAAoG,cAAA,OAAK2F,UAAW0H,IAAO3U,YACbqH,EAAAnG,EAAAoG,cAAA,yBADV,IACoCvE,KAAKwD,MAAM2P,kBAAoB,IAAKnT,KAAKwD,MAAMsE,eAGtFxD,EAAAnG,EAAAoG,cAAA,MAAI2F,UAAS,GAAAzK,OAAKmS,IAAO7U,aAAZ,KAAA0C,OAA4BmS,IAAOvU,WAC5CiH,EAAAnG,EAAAoG,cAAA,OAAK2F,UAAW0H,IAAO5U,WACnBsH,EAAAnG,EAAAoG,cAAA,0BADJ,IAC+BvE,KAAKwD,MAAM4P,OAAS,OAEnD9O,EAAAnG,EAAAoG,cAAA,OAAK2F,UAAW0H,IAAO3U,YACvBqH,EAAAnG,EAAAoG,cAAA,0BADA,KAC4BvE,KAAKwD,MAAMuE,WAAa,YAShEzD,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAQkN,KAAM9R,KAAKkE,MAAMkN,OAAQW,QAAS/R,KAAK6S,YAC3CvO,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,wBACAN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,6CAGAN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KACIN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAQE,MAAO,CAAEqK,MAAON,EAAYjB,MAAO8B,WAAY,UAAYrK,QAASrF,KAAKkT,eAAelT,KAAKwD,MAAMyH,gBAA3G,QAGA3G,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAQE,MAAO,CAAEqK,MAAON,EAAYjB,MAAO8B,WAAY,UAAYrK,QAAS,SAACtB,GAAD,OAAO8G,EAAKoI,eAAepI,EAAKrH,MAAMyH,iBAAlH,uBAjGxB0H,EAAA,CAAoCrN,aA6GvB+N,EAAb,SAAAC,GACI,SAAAD,EAAY7P,GAAO,IAAAqI,EAAA,OAAA7N,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAAqT,IACfxH,EAAA7N,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAAqV,GAAAxP,KAAA7D,KAAMwD,KAQV+P,WAAa,WACT1H,EAAK7H,SAAS,CACVoN,QAASvF,EAAK3H,MAAMkN,UAXTvF,EAcnB2H,WAAa,SAAAhG,GAAE,sBAAAvL,EAAAjE,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAI,SAAA8D,EAAM6B,GAAN,OAAA7F,EAAAC,EAAAS,KAAA,SAAAuD,GAAA,cAAAA,EAAArD,KAAAqD,EAAApD,MAAA,cACfa,QAAQC,IAAI2N,GADGrL,EAAApD,KAAA,EAEGsC,EAAc,MAAD,yBAAA5B,OAAiC+N,IAFjD,OAGI,OAHJrL,EAAAzC,KAGPC,QACJkM,EAAKrI,MAAMoC,OAJA,wBAAAzD,EAAApC,SAAAmC,EAAAlC,SAAJ,gBAAAG,GAAA,OAAA8B,EAAA7B,MAAAJ,KAAAK,YAAA,IAdIwL,EAoBnB4H,cAAgB,WACZ5H,EAAK0H,aACL1H,EAAK7H,SAAS,CACV0P,WAAY7H,EAAK3H,MAAMwP,aAvBZ7H,EA0BnBnF,aAAe,SAAA9D,GAAI,OAAI,SAAAmB,GACnB8H,EAAK7H,SAALhG,OAAA2I,EAAA,EAAA3I,CAAA,GACK4E,EAAOmB,EAAE8C,OAAOrE,UA5BNqJ,EA+BnB8H,cA/BmB,eAAAC,EAAA5V,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KA+BH,SAAAqO,EAAM1I,GAAN,IAAA8P,EAAAC,EAAAjO,EAAA,OAAA3H,EAAAC,EAAAS,KAAA,SAAA8N,GAAA,cAAAA,EAAA5N,KAAA4N,EAAA3N,MAAA,cACZgF,EAAEyD,iBACKqM,EAAmBhI,EAAK3H,MAAxB2P,eACHC,EAAUjI,EAAKrI,MAAMwE,KAAK/B,IAHlByG,EAAA3N,KAAA,EAIMsC,EAAc,OAAQ,0BAA2B,CAAEyS,UAASD,mBAJlE,QAINhO,EAJM6G,EAAAhN,MAKLwI,SAEiB,OAAfrC,EAAIlG,QACT4I,MAAM,gCACNsD,EAAK7H,SAAS,CACV0P,WAAY7H,EAAK3H,MAAMwP,aAEP,SAAf7N,EAAIlG,QACT4I,MAAM1C,EAAIyC,MAbF,wBAAAoE,EAAA3M,SAAA0M,EAAAzM,SA/BG,gBAAAU,GAAA,OAAAkT,EAAAxT,MAAAJ,KAAAK,YAAA,GAEfwL,EAAK3H,MAAQ,CACTkN,QAAQ,EACRpJ,KAAM6D,EAAKrI,MAAMwE,KACjB0L,WAAU,EACVG,eAAehI,EAAKrI,MAAMwE,KAAK6L,gBANpBhI,EADvB,OAAA7N,OAAAmG,EAAA,EAAAnG,CAAAqV,EAAAC,GAAAtV,OAAAoG,EAAA,EAAApG,CAAAqV,EAAA,EAAA9Q,IAAA,SAAAC,MAAA,WAiDQ,IAAIuR,EAsBJ,OArBAnU,QAAQC,IAAI,iBACZD,QAAQC,IAAIG,KAAKwD,MAAMwE,MACvB+L,EACIzP,EAAAnG,EAAAoG,cAAA,QAAM8E,SAAUrJ,KAAK2T,eACjBrP,EAAAnG,EAAAoG,cAAA,WACID,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CACIoP,aAAa,MACbxG,GAAG,kBACHjE,MAAOvJ,KAAKwD,MAAMwE,KAAKiM,YACvB9K,OAAO,SACPc,QAAQ,WACRzH,MAAOxC,KAAKkE,MAAM2P,eAClBrK,SAAUxJ,KAAK0G,aAAa,kBAC5B5B,MAAO,CAAEI,MAAO0K,OAAOC,WAAa,IAAM,OAAS,QAG3DvL,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAQE,MAAO,CAACqK,MAAO,QAAS7Q,KAAK,SAAS+G,QAASrF,KAAK2T,eAA5D,cAMJrP,EAAAnG,EAAAoG,cAACD,EAAAnG,EAAMwG,SAAP,KACIL,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACqE,GAAI,GAAIjE,GAAI,EAAGyN,GAAI,EAAGzJ,QAAQ,SAASD,WAAW,SAASlE,MAAO,CAAE6M,aAAc,IACnGrN,EAAAnG,EAAAoG,cAAA,OAAK2F,UAAW0H,IAAO9U,SAAUuI,QAASrF,KAAKuT,YAC3CjP,EAAAnG,EAAAoG,cAAA,OAAK2F,UAAW0H,IAAOzU,UACnBmH,EAAAnG,EAAAoG,cAAA,OAAKiG,IAAG,GAAA/K,OAAK7B,EAAL,YAAA6B,OAA2BO,KAAKwD,MAAMwE,KAAKyC,UAEvDnG,EAAAnG,EAAAoG,cAAA,OAAK2F,UAAW0H,IAAOpU,UACvB8G,EAAAnG,EAAAoG,cAAA,UAAKvE,KAAKwD,MAAMwE,KAAKpF,MACrB0B,EAAAnG,EAAAoG,cAAA,UAAKvE,KAAKwD,MAAMwE,KAAK2C,SAAW,cAAgB,WAC/C3K,KAAKwD,MAAMwE,KAAK6L,gBACbvP,EAAAnG,EAAAoG,cAAA,uBAAevE,KAAKwD,MAAMwE,KAAK6L,mBAK3CvP,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAQkN,KAAM9R,KAAKkE,MAAMkN,OAAQW,QAAS/R,KAAKuT,YAC3CjP,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KAAc5E,KAAKwD,MAAMwE,KAAKpF,MAC9B0B,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KACIN,EAAAnG,EAAAoG,cAAA,0BAAkBvE,KAAKwD,MAAMwE,KAAK2C,SAAW,cAAgB,WAC7DrG,EAAAnG,EAAAoG,cAAA,wBAAgBvE,KAAKwD,MAAMwE,KAAKiM,aAChC3P,EAAAnG,EAAAoG,cAAA,6BAAqBvE,KAAKwD,MAAMwE,KAAKF,eAEzCxD,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KACIN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAQE,MAAO,CAAEqK,MAAO,QAASO,WAAY,UAAYrK,QAASrF,KAAKyT,eAAvE,aAGAnP,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAQE,MAAO,CAAEqK,MAAO,MAAOO,WAAY,UAAYrK,QAASrF,KAAKwT,WAAWxT,KAAKwD,MAAMwE,KAAK/B,MAAhG,iBAKR3B,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CACIkN,KAAM9R,KAAKkE,MAAMwP,UACjB3B,QAAS/R,KAAKyT,cACdS,oBAAqBnD,EACrBoD,aAAW,GACX7P,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,cACAN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KACIN,EAAAnG,EAAAoG,cAAA,WACKwP,UA/G7BV,EAAA,CAA8B/N,aC5NxB8O,uBACF,SAAAA,EAAY5Q,GAAO,IAAAC,EAAA,OAAAzF,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAAoU,IACf3Q,EAAAzF,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAAoW,GAAAvQ,KAAA7D,KAAMwD,KAaV4C,SAAW,WACP3C,EAAKO,SAAS,CACVqQ,cAAe,GACfC,UAAW,GACXC,aAAc,GACdC,YAAa,MAnBF/Q,EAsBnBiD,aAAe,SAAA9D,GAAI,OAAI,SAAA6R,GACnBhR,EAAKO,SAALhG,OAAA2I,EAAA,EAAA3I,CAAA,GAAiB4E,EAAO6R,EAAM5N,OAAOrE,UAvBtBiB,EAyBnBiR,SAzBmB,eAAA3W,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAyBR,SAAAC,EAAM0F,GAAN,IAAA4Q,EAAAjJ,EAAAC,EAAAiJ,EAAAC,EAAAhP,EAAA,OAAA3H,EAAAC,EAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACPgF,EAAEyD,iBACF/D,EAAKO,SAAS,CAAEyD,WAAW,IAFpBkN,EAGyClR,EAAKS,MAA7CwH,EAHDiJ,EAGCjJ,UAAWC,EAHZgJ,EAGYhJ,MAAOiJ,EAHnBD,EAGmBC,SAAUC,EAH7BF,EAG6BE,QAH7BhW,EAAAE,KAAA,EAOWjB,EAAU,OAAQ,gBAAiB,CAAE4N,YAAWC,QAAOiJ,WAAUC,YAP5E,OAODhP,EAPChH,EAAAa,KAQP+D,EAAKO,SAAS,CAAEyD,WAAW,IAC3BhE,EAAK2C,WACDP,EAAIqC,OACJrC,EAAIqC,OAAOnC,IAAI,SAAAoC,GACX,IAAMC,EAAY,OAASD,EAAIE,MAE/B,OADA5E,EAAKO,SAALhG,OAAA2I,EAAA,EAAA3I,CAAA,GAAiBoK,EAAYD,EAAIG,MAC1BH,IAGXI,MAAK,2BAjBF,yBAAA1J,EAAAkB,SAAA1B,EAAA2B,SAzBQ,gBAAAC,GAAA,OAAAlC,EAAAqC,MAAAJ,KAAAK,YAAA,GAEfoD,EAAKS,MAAQ,CACTwH,UAAW,GACXC,MAAO,GACPiJ,SAAU,GACVC,QAAS,GACTpN,WAAW,EACX4M,cAAe,GACfC,UAAW,GACXC,aAAc,GACdC,YAAa,IAXF/Q,wEA+Cf,OACIa,EAAAnG,EAAAoG,cAAA,OAAKO,MAAO,CAAEI,MAAO,OAAQmF,OAAQ,OAAQuG,QAAS,OAAQ5H,WAAY,SAAU6H,eAAgB,WAChGvM,EAAAnG,EAAAoG,cAAA,OAAKO,MAAO,CAAEqE,OAAQ,QAClB7E,EAAAnG,EAAAoG,cAAA,sBACCvE,KAAKkE,MAAMuD,UAAYnD,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,MAAqB,GAC7CN,EAAAnG,EAAAoG,cAAA,QAAM8E,SAAUrJ,KAAK0U,UACjBpQ,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMC,WAAS,GACXP,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,GACnBX,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAWE,MAAO,CAAEqE,OAAQ,MAAOjE,MAAO,OACtCsI,GAAG,gBACHjE,MAAM,OACNJ,OAAO,SACP3G,MAAOxC,KAAKkE,MAAMwH,UAClBlC,SAAUxJ,KAAK0G,aAAa,aAC5B+C,WAAYzJ,KAAKkE,MAAMmQ,cACvB3K,MAAO1J,KAAKkE,MAAMmQ,cAAcpR,OAAS,KAGjDqB,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,GACnBX,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAWE,MAAO,CAAEqE,OAAQ,MAAOjE,MAAO,OACtCsI,GAAG,iBACHjE,MAAM,WACNJ,OAAO,SACP3G,MAAOxC,KAAKkE,MAAMyH,MAClBnC,SAAUxJ,KAAK0G,aAAa,SAC5B+C,WAAYzJ,KAAKkE,MAAMoQ,UACvB5K,MAAO1J,KAAKkE,MAAMoQ,UAAUrR,OAAS,KAG7CqB,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,GACnBX,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAWE,MAAO,CAAEqE,OAAQ,MAAOjE,MAAO,OACtCsI,GAAG,oBACHjE,MAAM,WACNJ,OAAO,SACP7K,KAAK,WACLkE,MAAOxC,KAAKkE,MAAM0Q,SAClBpL,SAAUxJ,KAAK0G,aAAa,YAC5B+C,WAAYzJ,KAAKkE,MAAMqQ,aACvB7K,MAAO1J,KAAKkE,MAAMqQ,aAAatR,OAAS,KAGhDqB,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,GACnBX,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAWE,MAAO,CAAEqE,OAAQ,MAAOjE,MAAO,OACtCsI,GAAG,4BACHjE,MAAM,mBACNJ,OAAO,SACP7K,KAAK,WACLkE,MAAOxC,KAAKkE,MAAM2Q,QAClBrL,SAAUxJ,KAAK0G,aAAa,WAC5B+C,WAAYzJ,KAAKkE,MAAMsQ,YACvB9K,MAAO1J,KAAKkE,MAAMsQ,YAAYvR,OAAS,KAG/CqB,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,GACnBX,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAQtG,KAAK,SAASwG,MAAO,CAAEsE,QAAS,GAAI+F,MAAO,SAAnD,wBAtGT7J,cAiHjBwP,cACF,SAAAA,EAAYtR,GAAO,IAAAmC,EAAA,OAAA3H,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAA8U,IACfnP,EAAA3H,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAA8W,GAAAjR,KAAA7D,KAAMwD,KASV4C,SAAW,WACPT,EAAK3B,SAAS,CACVsQ,UAAW,GACXC,aAAc,MAbH5O,EAgBnBe,aAAe,SAAA9D,GAAI,OAAI,SAAA6R,GACnB9O,EAAK3B,SAALhG,OAAA2I,EAAA,EAAA3I,CAAA,GAAiB4E,EAAO6R,EAAM5N,OAAOrE,UAjBtBmD,EAmBnBoP,OAnBmB,eAAAxU,EAAAvC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAmBV,SAAAoC,EAAMuD,GAAN,IAAAiR,EAAArJ,EAAAiJ,EAAA/O,EAAA,OAAA3H,EAAAC,EAAAS,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cACLgF,EAAEyD,iBACF7B,EAAK3B,SAAS,CAAEyD,WAAW,IAFtBuN,EAGuBrP,EAAKzB,MAAzByH,EAHHqJ,EAGGrJ,MAAOiJ,EAHVI,EAGUJ,SAHVnU,EAAA1B,KAAA,EAIajB,EAAU,OAAQ,aAAc,CAAE6N,QAAOiJ,aAJtD,OAIC/O,EAJDpF,EAAAf,KAKLiG,EAAK3B,SAAS,CAAEyD,WAAW,IAC3B9B,EAAKS,WACDP,EAAIqC,OACJrC,EAAIqC,OAAOnC,IAAI,SAAAoC,GACX,IAAMC,EAAY,OAASD,EAAIE,MAE/B,OADA1C,EAAK3B,SAALhG,OAAA2I,EAAA,EAAA3I,CAAA,GAAiBoK,EAAYD,EAAIG,MAC1BH,KAGX7F,EAAU,UAAWuD,EAAI2H,IACzBlL,EAAU,UAAWqD,EAAKzB,MAAMyH,OAChCrJ,EAAU,UAAWuD,EAAIoP,mBACzBtP,EAAKnC,MAAMgP,QAAQ/J,KAAK,eAjBvB,wBAAAhI,EAAAV,SAAAS,EAAAR,SAnBU,gBAAAE,GAAA,OAAAK,EAAAH,MAAAJ,KAAAK,YAAA,GAEfsF,EAAKzB,MAAQ,CACTyH,MAAO,GACPiJ,SAAU,GACVnN,WAAW,EACX6M,UAAW,GACXC,aAAc,IAPH5O,wEAwCf,OACIrB,EAAAnG,EAAAoG,cAAA,OAAKO,MAAO,CAAEuF,OAAQ,OAAQuG,QAAS,OAAQ5H,WAAY,SAAU6H,eAAgB,WACjFvM,EAAAnG,EAAAoG,cAAA,OAAKO,MAAO,CAAEqE,OAAQ,QAClB7E,EAAAnG,EAAAoG,cAAA,qBACCvE,KAAKkE,MAAMuD,UAAYnD,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,MAAqB,GAC7CN,EAAAnG,EAAAoG,cAAA,QAAM8E,SAAUrJ,KAAK+U,QACjBzQ,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMC,WAAS,GACXP,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,GACnBX,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAWE,MAAO,CAAEqE,OAAQ,MAAOjE,MAAO,OACtCsI,GAAG,iBACHjE,MAAM,WACNJ,OAAO,SACP3G,MAAOxC,KAAKkE,MAAMyH,MAClBnC,SAAUxJ,KAAK0G,aAAa,SAC5B+C,WAAYzJ,KAAKkE,MAAMoQ,UACvB5K,MAAO1J,KAAKkE,MAAMoQ,UAAUrR,OAAS,KAG7CqB,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,GACnBX,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAWE,MAAO,CAAEqE,OAAQ,MAAOjE,MAAO,OACtCsI,GAAG,oBACHjE,MAAM,WACNJ,OAAO,SACP7K,KAAK,WACLkE,MAAOxC,KAAKkE,MAAM0Q,SAClBpL,SAAUxJ,KAAK0G,aAAa,YAC5B+C,WAAYzJ,KAAKkE,MAAMqQ,aACvB7K,MAAO1J,KAAKkE,MAAMqQ,aAAatR,OAAS,KAGhDqB,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,GACnBX,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAQtG,KAAK,SAASwG,MAAO,CAAEsE,QAAS,GAAI+F,MAAO,SAAnD,uBAxEX7J,aAmFR4P,EAAb,SAAAtC,GACI,SAAAsC,EAAY1R,GAAO,IAAAuF,EAAA,OAAA/K,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAAkV,IACfnM,EAAA/K,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAAkX,GAAArR,KAAA7D,KAAMwD,KAOV2R,eAAiB,WACbpM,EAAK/E,SAAS,CACVoR,YAAarM,EAAK7E,MAAMkR,cAVbrM,EAanBsM,aAAe,WACXtM,EAAK/E,SAAS,CACVsR,UAAWvM,EAAK7E,MAAMoR,YAfXvM,EAkBnBwM,MAlBmBvX,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAkBX,SAAA0C,IAAA,OAAA5C,EAAAC,EAAAS,KAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,wBAAAgC,EAAAhB,SAAAe,EAAAd,SAlBW+I,EAyBnBnD,KAzBmB5H,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAyBZ,SAAAmD,IAAA,IAAAsE,EAAA,OAAA3H,EAAAC,EAAAS,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,cAAAyC,EAAAzC,KAAA,EACesC,EAAc,OAAQ,2BAA4B,CAACmU,MAAM,KADxE,OACG3P,EADHrE,EAAA9B,KAEHqJ,EAAK/E,SAAS,CACVyR,YAAa5P,IAHd,wBAAArE,EAAAzB,SAAAwB,EAAAvB,SAvBH+I,EAAK7E,MAAQ,CACTkR,YAAY,EACZE,UAAU,EACVG,YAAY,IALD1M,EADvB,OAAA/K,OAAAmG,EAAA,EAAAnG,CAAAkX,EAAAtC,GAAA5U,OAAAoG,EAAA,EAAApG,CAAAkX,EAAA,EAAA3S,IAAA,oBAAAC,MAAA,WAuBQC,SAASpD,KAAK6K,UAAU,SACxBlK,KAAK4F,SAxBb,CAAArD,IAAA,SAAAC,MAAA,WAgCa,IAAAqI,EAAA7K,KAQL,OACIsE,EAAAnG,EAAAoG,cAACD,EAAAnG,EAAMwG,SAAP,KACIL,EAAAnG,EAAAoG,cAAA,OAAK2F,UAAU,SACX5F,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAQkN,KAAM9R,KAAKkE,MAAMkR,WAAYrD,QAAS/R,KAAKmV,gBAC/C7Q,EAAAnG,EAAAoG,cAACmR,EAAD,OAEJpR,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAQ+Q,OAAO,MAAM7D,KAAM9R,KAAKkE,MAAMoR,SAAUvD,QAAS/R,KAAKqV,cAC1D/Q,EAAAnG,EAAAoG,cAACqR,EAAD,CAAQpD,QAASxS,KAAKwD,MAAMgP,WAEhClO,EAAAnG,EAAAoG,cAAA,OAAK2F,UAAU,QACX5F,EAAAnG,EAAAoG,cAAA,OAAKiJ,GAAG,QAAQtD,UAAU,0BACtB5F,EAAAnG,EAAAoG,cAAA,WACID,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMC,WAAS,EAACmE,WAAW,SAASC,QAAQ,UACxC3E,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,IACX5E,EAAAnG,EAAAoG,cAAA,MAAIO,MAAO,CAAEqK,MAAON,EAAYlB,WAAY8B,SAAU,WAAtD,yBACAnL,EAAAnG,EAAAoG,cAAA,MAAIO,MAAO,CAAEqK,MAAO,OAAQM,SAAU,WAAtC,kDAEJnL,EAAAnG,EAAAoG,cAAA,WAAMD,EAAAnG,EAAAoG,cAAA,WACND,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAI2M,QAAS,GAAIhR,WAAS,EAACmE,WAAW,SAASC,QAAQ,UAClE3E,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,EAAGJ,WAAS,EAACmE,WAAW,SAASC,QAAQ,UAC5D3E,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAQE,MAAO,CAAEqK,MAAON,EAAYlB,YAChCtI,QAASrF,KAAKmV,gBACjB7Q,EAAAnG,EAAAoG,cAAA,OAAK2F,UAAU,SAER5F,EAAAnG,EAAAoG,cAAA,OAAKuR,QAAQ,aAAa5Q,MAAM,OAAO6Q,OAAO,QAC1CzR,EAAAnG,EAAAoG,cAAA,QAAM2F,UAAU,MAAM8L,GAAG,IAAIC,GAAG,MAAMC,GAAG,IAAIC,GAAG,OAChD7R,EAAAnG,EAAAoG,cAAA,QAAM2F,UAAU,MAAM8L,GAAG,IAAIC,GAAG,KAAKC,GAAG,IAAIC,GAAG,OAE/C7R,EAAAnG,EAAAoG,cAAA,QAAM2F,UAAU,MAAM8L,GAAG,MAAMC,GAAG,MAAMC,GAAG,MAAMC,GAAG,OACpD7R,EAAAnG,EAAAoG,cAAA,QAAM2F,UAAU,MAAM8L,GAAG,MAAMC,GAAG,KAAKC,GAAG,MAAMC,GAAG,OAEnD7R,EAAAnG,EAAAoG,cAAA,QAAM2F,UAAU,MAAM8L,GAAG,OAAOC,GAAG,IAAIC,GAAG,KAAKC,GAAG,MAClD7R,EAAAnG,EAAAoG,cAAA,QAAM2F,UAAU,MAAM8L,GAAG,MAAMC,GAAG,IAAIC,GAAG,MAAMC,GAAG,MAElD7R,EAAAnG,EAAAoG,cAAA,QAAM2F,UAAU,MAAM8L,GAAG,MAAMC,GAAG,KAAKC,GAAG,MAAMC,GAAG,OACnD7R,EAAAnG,EAAAoG,cAAA,QAAM2F,UAAU,MAAM8L,GAAG,OAAOC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QAEvD7R,EAAAnG,EAAAoG,cAAA,2BAIZD,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,EAAGJ,WAAS,EAACmE,WAAW,SAASC,QAAQ,UAC5D3E,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAQE,MAAO,CAAEqK,MAAON,EAAYlB,YAChCtI,QAASrF,KAAKqV,cACjB/Q,EAAAnG,EAAAoG,cAAA,OAAK2F,UAAU,SAGR5F,EAAAnG,EAAAoG,cAAA,OAAKuR,QAAQ,aAAa5Q,MAAM,OAAO6Q,OAAO,QAC1CzR,EAAAnG,EAAAoG,cAAA,QAAM2F,UAAU,MAAM8L,GAAG,IAAIC,GAAG,MAAMC,GAAG,IAAIC,GAAG,OAChD7R,EAAAnG,EAAAoG,cAAA,QAAM2F,UAAU,MAAM8L,GAAG,IAAIC,GAAG,KAAKC,GAAG,IAAIC,GAAG,OAE/C7R,EAAAnG,EAAAoG,cAAA,QAAM2F,UAAU,MAAM8L,GAAG,MAAMC,GAAG,MAAMC,GAAG,MAAMC,GAAG,OACpD7R,EAAAnG,EAAAoG,cAAA,QAAM2F,UAAU,MAAM8L,GAAG,MAAMC,GAAG,KAAKC,GAAG,MAAMC,GAAG,OAEnD7R,EAAAnG,EAAAoG,cAAA,QAAM2F,UAAU,MAAM8L,GAAG,OAAOC,GAAG,IAAIC,GAAG,KAAKC,GAAG,MAClD7R,EAAAnG,EAAAoG,cAAA,QAAM2F,UAAU,MAAM8L,GAAG,MAAMC,GAAG,IAAIC,GAAG,MAAMC,GAAG,MAElD7R,EAAAnG,EAAAoG,cAAA,QAAM2F,UAAU,MAAM8L,GAAG,MAAMC,GAAG,KAAKC,GAAG,MAAMC,GAAG,OACnD7R,EAAAnG,EAAAoG,cAAA,QAAM2F,UAAU,MAAM8L,GAAG,OAAOC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QAEvD7R,EAAAnG,EAAAoG,cAAA,8BAQ5BD,EAAAnG,EAAAoG,cAAA,OAAKiJ,GAAG,SAAStD,UAAU,SAC3B5F,EAAAnG,EAAAoG,cAAA,OAAK2F,UAAU,qBACP5F,EAAAnG,EAAAoG,cAAA,kCACAD,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMC,WAAS,EAACgR,QAAS,IAEjB7V,KAAKkE,MAAMuR,YAAY1P,IAAI,SAAAqQ,GAAI,OAAI9R,EAAAnG,EAAAoG,cAAC8R,EAAD,CAAgB9T,IAAK6T,EAAKnQ,IACzDZ,QAASwF,EAAKwK,aACdvC,SAAS,EACTC,iBAAiB,EACjBjL,aAAcsO,EAAKtO,aACnB2C,MAAO2L,EAAK3L,MACZ7E,KAAMiF,EAAKjF,KACXqC,gBAAiBmO,EAAKnO,gBACtBD,KAAMoO,EAAKpO,KACXmL,kBAAmBiD,EAAKlL,QAAQjI,OAChC8E,UAAWqO,EAAKrO,UAChBf,cAAeoP,EAAKpP,cACpBoM,MAAOgD,EAAKvO,QACZmL,gBAAiBnI,EAAKrH,MAAMwP,gBAC5B/H,cAAemL,EAAKnQ,WAKxC3B,EAAAnG,EAAAoG,cAAA,OAAKiJ,GAAG,SAAStD,UAAU,SACvB5F,EAAAnG,EAAAoG,cAAA,OAAK2F,UAAU,qBACX5F,EAAAnG,EAAAoG,cAAA,0BACAD,EAAAnG,EAAAoG,cAAA,oOAIRD,EAAAnG,EAAAoG,cAAA,OAAKiJ,GAAG,SAAStD,UAAU,SACvB5F,EAAAnG,EAAAoG,cAAA,OAAK2F,UAAU,aACX5F,EAAAnG,EAAAoG,cAAA,OAAK2F,UAAU,SACX5F,EAAAnG,EAAAoG,cAAA,0DACAD,EAAAnG,EAAAoG,cAAA,+RAGJD,EAAAnG,EAAAoG,cAAA,OAAKiG,IAAK8L,EAAQ,MAAqBzE,IAAI,SAC3CvN,EAAAnG,EAAAoG,cAAA,OAAKiG,IAAK8L,EAAQ,MAAqBzE,IAAI,YAInDvN,EAAAnG,EAAAoG,cAAA,OAAKiJ,GAAG,SAAStD,UAAU,SACvB5F,EAAAnG,EAAAoG,cAAA,OAAK2F,UAAU,aACZ5F,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMC,WAAS,EAACgR,QAAS,IACxBvR,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,GACnBX,EAAAnG,EAAAoG,cAAA,OAAK2F,UAAU,WACX5F,EAAAnG,EAAAoG,cAAA,4BACAD,EAAAnG,EAAAoG,cAAA,qEAIRD,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,GACnBX,EAAAnG,EAAAoG,cAAA,OAAK2F,UAAU,WACX5F,EAAAnG,EAAAoG,cAAA,4BACAD,EAAAnG,EAAAoG,cAAA,oEAIRD,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,GACnBX,EAAAnG,EAAAoG,cAAA,OAAK2F,UAAU,WACX5F,EAAAnG,EAAAoG,cAAA,8BACAD,EAAAnG,EAAAoG,cAAA,0EAIRD,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,GACnBX,EAAAnG,EAAAoG,cAAA,OAAK2F,UAAU,WACX5F,EAAAnG,EAAAoG,cAAA,0BACAD,EAAAnG,EAAAoG,cAAA,gFAQhBD,EAAAnG,EAAAoG,cAAA,OAAKiJ,GAAG,SAAStD,UAAU,gBAC3B5F,EAAAnG,EAAAoG,cAAA,UACGD,EAAAnG,EAAAoG,cAAA,cAAKD,EAAAnG,EAAAoG,cAAA,KAAGgS,KAAK,UAAR,aACJjS,EAAAnG,EAAAoG,cAAA,cAAKD,EAAAnG,EAAAoG,cAAA,KAAGgS,KAAK,UAAR,sBAAL,KACAjS,EAAAnG,EAAAoG,cAAA,cAAKD,EAAAnG,EAAAoG,cAAA,KAAGgS,KAAK,QAAR,OAAL,KACAjS,EAAAnG,EAAAoG,cAAA,cAAKD,EAAAnG,EAAAoG,cAAA,KAAGgS,KAAK,QAAR,cAAL,KACAjS,EAAAnG,EAAAoG,cAAA,UAAID,EAAAnG,EAAAoG,cAAA,KAAGgS,KAAK,YAAR,mBACJjS,EAAAnG,EAAAoG,cAAA,OAAK2F,UAAU,oBAjM3CgL,EAAA,CAA6B5P,8EC7L7B,SAASyL,GAAWvN,GAChB,OAAOc,EAAAnG,EAAAoG,cAACiS,GAAArY,EAADH,OAAAgT,OAAA,CAAOC,UAAU,MAASzN,IAGrC,IAAMiT,GAAgB,CAClB,CAAEjR,KAAM,OAAQhD,MAAO,GACvB,CAAEgD,KAAM,QAAShD,MAAO,IACxB,CAAEgD,KAAM,QAAShD,MAAO,IACxB,CAAEgD,KAAM,QAAShD,MAAO,IACxB,CAAEgD,KAAM,SAAUhD,MAAO,KACzB,CAAEgD,KAAM,SAAUhD,MAAO,MAIvBkU,GAAO,kBACRpS,EAAAnG,EAAAoG,cAAA,OACGiG,IAAK8L,EAAQ,MACbxR,MAAOgK,EAAWM,KAClByC,IAAI,SAKC8E,GAAb,SAAApT,GACI,SAAAoT,EAAYnT,GAAO,IAAAC,EAAA,OAAAzF,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAA2W,IACflT,EAAAzF,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAA2Y,GAAA9S,KAAA7D,KAAMwD,KAgBVoC,KAjBmB5H,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAiBZ,SAAAC,IAAA,IAAAwH,EAAA4E,EAAA7H,EAAAiF,EAAA,OAAA3J,EAAAC,EAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACesC,EAAc,OAAQ,eAAgB,CAAEuV,EAAG,KAD1D,OACG/Q,EADHhH,EAAAa,KAEG+K,EAFH,GAAAhL,OAEc7B,EAFd,SAAA6B,OAEiCoG,EAAIgR,OAFrC,KAAApX,OAE+CoG,EAAI4E,OAChD7H,EAAOiD,EAAI6F,UACX7D,EAAUhC,EAAIgC,QACpBpE,EAAKO,SAAS,CACVpB,KAAMA,EACN6H,MAAOA,EACP5C,QAASA,EACTiP,YAAoC,WAAtBrT,EAAKD,MAAMS,QAA6C,YAAtBR,EAAKD,MAAMS,SAT5D,wBAAApF,EAAAkB,SAAA1B,EAAA2B,SAfHyD,EAAKS,MAAQ,CACT4S,aAAc,EACd1F,QAAQ,EACR3G,MAAO6L,EAAQ,IACf1T,KAAM,SACNiF,QAAS,EACTkP,KAAM,IAEVtT,EAAKuT,aAAevT,EAAKuT,aAAaC,KAAlBjZ,OAAAkZ,EAAA,EAAAlZ,QAAAkZ,EAAA,EAAAlZ,CAAAyF,KAVLA,EADvB,OAAAzF,OAAAmG,EAAA,EAAAnG,CAAA2Y,EAAApT,GAAAvF,OAAAoG,EAAA,EAAApG,CAAA2Y,EAAA,EAAApU,IAAA,eAAAC,MAAA,WAcQxC,KAAKgE,SAAS,CACVoN,QAASpR,KAAKkE,MAAMkN,WAfhC,CAAA7O,IAAA,oBAAAC,MAAA,WA+BQxC,KAAK4F,SA/Bb,CAAArD,IAAA,SAAAC,MAAA,WAkCQ,OACI8B,EAAAnG,EAAAoG,cAACD,EAAAnG,EAAMwG,SAAP,KACIL,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAQwF,SAAS,SAAStF,MAAOgK,EAAWC,KACxCzK,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KACIN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CACIE,MAAOgK,EAAWE,WAClBG,MAAM,UAAUgI,aAAW,OAC3B9R,QAASrF,KAAKgX,cACd1S,EAAAnG,EAAAoG,cAAC6S,EAAA,EAAD,CAAMtS,MAAO,CAAEwL,UAAW,iBAE9BhM,EAAAnG,EAAAoG,cAAC8S,GAAD,OAGArX,KAAKkE,MAAM4S,YAAaxS,EAAAnG,EAAAoG,cAAC+S,GAAD,CAAS1R,KAAM5F,KAAKwD,MAAMoC,OAAW,IAGrEtB,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAQkN,KAAM9R,KAAKkE,MAAMkN,OAAQW,QAAS/R,KAAKgX,cAC3C1S,EAAAnG,EAAAoG,cAACgT,GAAD,CACItT,OAAQjE,KAAKwD,MAAMS,OACnBwG,MAAOzK,KAAKkE,MAAMuG,MAClB7H,KAAM5C,KAAKkE,MAAMtB,KACjBiF,QAAS7H,KAAKkE,MAAM2D,gBAvD5C8O,EAAA,CAAgCrR,aA+D1BkS,eACF,SAAAA,EAAYhU,GAAO,IAAAmC,EAAA,OAAA3H,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAAwX,IACf7R,EAAA3H,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAAwZ,GAAA3T,KAAA7D,KAAMwD,KA6BVkD,aAAe,SAAA9D,GAAI,sBAAArC,EAAAvC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAI,SAAAoC,EAAMiU,GAAN,OAAAvW,EAAAC,EAAAS,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,OACnB4G,EAAK3B,SAALhG,OAAA2I,EAAA,EAAA3I,CAAA,GACK4E,EAAO6R,EAAM5N,OAAOrE,QAEZ,aAATI,GACA+C,EAAK8R,OAAOhD,EAAM5N,OAAOrE,OALV,wBAAA/B,EAAAV,SAAAS,EAAAR,SAAJ,gBAAAC,GAAA,OAAAM,EAAAH,MAAAJ,KAAAK,YAAA,IA9BAsF,EA4CnB8R,OA5CmB,eAAA5W,EAAA7C,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KA4CV,SAAA0C,EAAO8B,GAAP,IAAAiD,EAAA6R,EAAA,OAAAxZ,EAAAC,EAAAS,KAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,cAAAgC,EAAAhC,KAAA,EACasC,EAAc,OAAQ,yBAA0B,CAAEuB,KAAMA,EAAMkR,QAASnO,EAAKzB,MAAM8D,OAD/F,OACCnC,EADD9E,EAAArB,KAECgY,EAAY7R,EAAI8R,KAAKC,OAAO,SAAAhB,GAAC,OAAIA,EAAE3Q,MAAQvE,EAAU,aAC3DiE,EAAK3B,SAAS,CACV0T,UAAWA,EACXG,MAAO,WALN,wBAAA9W,EAAAhB,SAAAe,EAAAd,SA5CU,gBAAAE,GAAA,OAAAW,EAAAT,MAAAJ,KAAAK,YAAA,GAAAsF,EAoDnBmS,eAAiB,SAAAtK,GAAE,sBAAAlM,EAAAtD,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAI,SAAAmD,EAAOwC,GAAP,IAAA8B,EAAA6R,EAAA,OAAAxZ,EAAAC,EAAAS,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,cAAAyC,EAAAzC,KAAA,EACDsC,EAAc,OAAQ,yBAA0B,CAAEuB,KAAM+C,EAAKzB,MAAM6T,SAAUjE,QAAStG,IADrF,OACb3H,EADarE,EAAA9B,KAEbgY,EAAY7R,EAAI8R,KAAKC,OAAO,SAAAhB,GAAC,OAAIA,EAAE3Q,MAAQvE,EAAU,aAC3DiE,EAAK3B,SAAS,CACV0T,UAAWA,EACXM,KAAMnS,EAAI8R,KAAKC,OAAO,SAAAhB,GAAC,OAAIA,EAAE3Q,MAAQvE,EAAU,aAAY,GAC3DmW,MAAO,SACP7P,KAAMwF,IAPS,wBAAAhM,EAAAzB,SAAAwB,EAAAvB,SAAJ,gBAAAG,GAAA,OAAAmB,EAAAlB,MAAAJ,KAAAK,YAAA,IApDAsF,EA8DnBsS,cAAgB,SAAAC,GAAE,sBAAAjW,EAAAjE,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAI,SAAA8D,EAAM6B,GAAN,OAAA7F,EAAAC,EAAAS,KAAA,SAAAuD,GAAA,cAAAA,EAAArD,KAAAqD,EAAApD,MAAA,OAClB4G,EAAK3B,SAAS,CACVwN,SAAU0G,EACVL,MAAO,cAHO,wBAAA1V,EAAApC,SAAAmC,EAAAlC,SAAJ,gBAAAU,GAAA,OAAAuB,EAAA7B,MAAAJ,KAAAK,YAAA,IA9DCsF,EAoEnBwS,UApEmB,eAAAvE,EAAA5V,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAoEP,SAAAqO,EAAM1I,GAAN,IAAAiR,EAAAxD,EAAAC,EAAAzJ,EAAAgQ,EAAAnS,EAAA,OAAA3H,EAAAC,EAAAS,KAAA,SAAA8N,GAAA,cAAAA,EAAA5N,KAAA4N,EAAA3N,MAAA,cAAAiW,EAC8BrP,EAAKzB,MAAnCsN,EADAwD,EACAxD,SAAUC,EADVuD,EACUvD,IAAKzJ,EADfgN,EACehN,KAAMgQ,EADrBhD,EACqBgD,KADrBtL,EAAA3N,KAAA,EAEUsC,EAAc,OAAQ,2BAA4B,CAChE+W,WAAYJ,EAAK/R,IACjBoS,WAAY7G,EAASvL,IACrB4B,QAAS4J,EACTqC,QAAS9L,IANL,OAQW,QANbnC,EAFE6G,EAAAhN,MAQAC,QACJgG,EAAKwL,kBACLxL,EAAKnC,MAAMoC,QAEX2C,MAAM1C,EAAIqC,OAAO,GAAGI,KAZhB,wBAAAoE,EAAA3M,SAAA0M,EAAAzM,SApEO,gBAAAW,GAAA,OAAAiT,EAAAxT,MAAAJ,KAAAK,YAAA,GAEfsF,EAAKzB,MAAQ,CACTkN,QAAQ,EACRyG,MAAO,OACPS,KAAM7B,GACNsB,SAAU,GACVtG,IAAK,EACL3L,MAAO,GACPkC,KAAM,GACN0P,UAAW,GACXlG,SAAU,CACNvL,IAAK,GACLrD,KAAM,GACN6H,MAAO6L,EAAQ,KAEnB0B,KAAM,CACF/R,IAAK,GACLrD,KAAM,GACN6H,MAAO6L,EAAQ,MAGvB3Q,EAAKwL,gBAAkBxL,EAAKwL,gBAAgB8F,KAArBjZ,OAAAkZ,EAAA,EAAAlZ,QAAAkZ,EAAA,EAAAlZ,CAAA2H,KAtBRA,iFAyBf3F,KAAKgE,SAAS,CACVoN,QAASpR,KAAKkE,MAAMkN,OACpByG,MAAO,mLAYOxW,EAAc,OAAQ,gBAAiB,WAAnDwE,SACN7F,KAAKgE,SAAS,CACV8B,MAAOD,uIA0CN,IACD0S,EAAeC,EADdzP,EAAA/I,KAEL,OAAQA,KAAKkE,MAAM2T,OACf,IAAK,OACDW,EAAc,cACdD,EACIjU,EAAAnG,EAAAoG,cAACD,EAAAnG,EAAMwG,SAAP,KACIL,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAU6T,WAAY,IAAK3T,MAAOgK,EAAWyB,UACxCvQ,KAAKkE,MAAM4B,MAAMC,IAAI,SAAAC,GAAC,OACnB1B,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAcrC,IAAKyD,EAAEC,IAAKZ,QAAS0D,EAAK+O,eAAe9R,EAAEC,KAAMyS,KAAM9I,OAAOC,WAAa,IAAM,EAAI,GAC/FvL,EAAAnG,EAAAoG,cAAA,OAAKiG,IAAG,GAAA/K,OAAK7B,EAAL,YAAA6B,OAA2BuG,EAAEyE,OAASoH,IAAK,cACnDvN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CACI+T,MAAO3S,EAAEpD,KACTgW,SAAUtU,EAAAnG,EAAAoG,cAAA,yBAAgC,IAAfyB,EAAE2E,SAAiB,SAAW,aAQjF,MACJ,IAAK,SACD6N,EAAc,kBACdD,EACIjU,EAAAnG,EAAAoG,cAACD,EAAAnG,EAAMwG,SAAP,KACIL,EAAAnG,EAAAoG,cAAA,WACID,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CACIoP,aAAa,MACbxG,GAAG,kBACHjE,MAAM,kBACNjL,KAAK,SACL6K,OAAO,SACPc,QAAQ,WACRT,SAAUxJ,KAAK0G,aAAa,YAC5B5B,MAAO,CAAEI,MAAO0K,OAAOC,WAAa,IAAM,OAAS,QAG3DvL,EAAAnG,EAAAoG,cAAA,WACID,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAME,MAAO,CAAEuF,OAAQ,IAAKC,UAAW,WAClCtK,KAAKkE,MAAMwT,UAAU3R,IAAI,SAAAmS,GAAE,OACxB5T,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAUrC,IAAK2V,EAAGjS,IAAKZ,QAAS0D,EAAKkP,cAAcC,IAC/C5T,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAQiN,IAAI,aAAarH,IAAG,GAAA/K,OAAK7B,GAAL6B,OAAmByY,EAAGzN,SAClDnG,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAcQ,QAAS8S,EAAGxM,kBAOlD,MACJ,IAAK,YACD8M,EAAc,YACdD,EACIjU,EAAAnG,EAAAoG,cAACD,EAAAnG,EAAMwG,SAAP,KACIL,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMC,WAAS,EAACoE,QAAQ,SAASD,WAAW,UACxC1E,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,IACX5E,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMC,WAAS,EAACgR,QAAS,GAAI5M,QAAQ,SAASD,WAAW,UACrD1E,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,EAAGpE,MAAOgK,EAAW4B,iBAChCpM,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CACIiN,IAAK7R,KAAKkE,MAAM8T,KAAKtM,UACrBlB,IAAG,GAAA/K,OAAK7B,GAAL6B,OAAmBO,KAAKkE,MAAM8T,KAAKvN,OACtC3F,MAAO,CAAEI,MAAO0K,OAAOC,WAAa,IAAM,IAAM,IAAKxF,OAAQuF,OAAOC,WAAa,IAAM,IAAM,OACjGvL,EAAAnG,EAAAoG,cAAA,QAAMO,MAAO,CAAEgM,UAAW,SAAU3B,MAAM,SAAWnP,KAAKkE,MAAM8T,KAAKtM,YAEzEpH,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,EAAGpE,MAAO,CAAEgM,UAAW,SAAU3B,MAAON,EAAYlB,WAAY8B,SAAU,UAAYvF,UAAU,+BAC3G5F,EAAAnG,EAAAoG,cAAA,qBAEJD,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,EAAGpE,MAAOgK,EAAW4B,iBAChCpM,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CACIiN,IAAI,aACJrH,IAAG,GAAA/K,OAAK7B,GAAL6B,OAAmBO,KAAKkE,MAAMsN,SAAS/G,OAC1C3F,MAAO,CAAEI,MAAO0K,OAAOC,WAAa,IAAM,IAAM,IAAKxF,OAAQuF,OAAOC,WAAa,IAAM,IAAM,OACjGvL,EAAAnG,EAAAoG,cAAA,QAAMO,MAAO,CAAEgM,UAAW,SAAU3B,MAAM,SAAWnP,KAAKkE,MAAMsN,SAAS9F,cAIrFpH,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,GACnBX,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CACI4I,GAAG,uBACH7D,QAAM,EACNJ,MAAM,aACN/G,MAAOxC,KAAKkE,MAAMuN,IAClB3M,MAAO,CAAEI,MAAO,OAAQ2T,UAAW,IACnCrP,SAAUxJ,KAAK0G,aAAa,QAE3B1G,KAAKkE,MAAMoU,KAAKvS,IAAI,SAAA6D,GAAM,OACvBtF,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAUrC,IAAKqH,EAAOpH,MAAOA,MAAOoH,EAAOpH,OACtCoH,EAAOpE,UAKxBlB,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIpE,MAAOgK,EAAW4B,iBACjCpM,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CACIE,MAAO,CAAE+T,UAAW,GAAI3T,MAAO,OAAQkE,QAAS,GAAIqG,SAAU,SAAUN,MAAON,EAAYlB,YAC3FtI,QAASrF,KAAKmY,WAEd7T,EAAAnG,EAAAoG,cAAA,KAAG2F,UAAU,mBAAsB,OAJvC,gBAYxB,OACI5F,EAAAnG,EAAAoG,cAAA,OAAKO,MAAOgK,EAAWoB,SACnB5L,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAKE,MAAO,CAAE6J,gBAAiB,WAAatJ,QAASrF,KAAKmR,gBAAiBjH,UAAU,uBACjF5F,EAAAnG,EAAAoG,cAAA,OAAKiG,IAAK8L,EAAQ,MAA2BzE,IAAI,IAAI/M,MAAO,CAAEI,MAAO,OAEzEZ,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CACIkN,KAAM9R,KAAKkE,MAAMkN,OACjBW,QAAS/R,KAAKmR,gBACd+C,oBAAqBnD,GACrBoD,aAAW,GACX7P,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KAAc4T,GACdlU,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KACAN,EAAAnG,EAAAoG,cAAA,WACCgU,aA3MCjT,aAqNhBwT,GAAW,SAAAlM,GAAsC,IAAnC3I,EAAmC2I,EAAnC3I,OAAQwG,EAA2BmC,EAA3BnC,MAAO7H,EAAoBgK,EAApBhK,KAAMiF,EAAc+E,EAAd/E,QACrC,OACIvD,EAAAnG,EAAAoG,cAAA,OAAKO,MAAOgK,EAAWO,SACnB/K,EAAAnG,EAAAoG,cAAA,OAAK2F,UAAW0H,KAAOjV,gBACnB2H,EAAAnG,EAAAoG,cAAA,WACID,EAAAnG,EAAAoG,cAAA,OAAKiG,IAAKC,EAAOoH,IAAI,YAEzBvN,EAAAnG,EAAAoG,cAAA,WACID,EAAAnG,EAAAoG,cAAA,UAAK3B,GACL0B,EAAAnG,EAAAoG,cAAA,yBAAiBsD,EAAjB,SAGRvD,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAME,MAAOgK,EAAWQ,aACpBhL,EAAAnG,EAAAoG,cAACwU,EAAA,EAAD,CAAMC,GAAG,aAAalU,MAAO,CAAEmU,eAAgB,OAAQ9J,MAAON,EAAYlB,aACtErJ,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAU2F,QAAM,GACZjG,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAcE,MAAO,CAAEqK,MAAkB,cAAXlL,EAAyB4K,EAAYlB,WAAakB,EAAYjB,QACxFtJ,EAAAnG,EAAAoG,cAAC6S,EAAA,EAAD,OAEJ9S,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAcO,OAAK,EACfC,QAASd,EAAAnG,EAAAoG,cAAA,QAAMO,MAAO,CAClBqK,MACe,cAAXlL,EAAyB4K,EAAYlB,WAAakB,EAAYjB,QAF7D,iBAOrBtJ,EAAAnG,EAAAoG,cAACwU,EAAA,EAAD,CAAMC,GAAG,cAAclU,MAAO,CAAEmU,eAAgB,OAAQ9J,MAAON,EAAYlB,aACvErJ,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAU2F,QAAM,GACZjG,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAcE,MAAO,CAAEqK,MAAkB,eAAXlL,EAA0B4K,EAAYlB,WAAakB,EAAYjB,QACzFtJ,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMsF,UAAU,gBAAgBpF,MAAO,CAAEmK,YAAa,EAAGqB,UAAW,kBAExEhM,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAcO,OAAK,EACfC,QAASd,EAAAnG,EAAAoG,cAAA,QAAMO,MAAO,CAClBqK,MACe,eAAXlL,EAA0B4K,EAAYlB,WAAakB,EAAYjB,QAF9D,kBAOrBtJ,EAAAnG,EAAAoG,cAACwU,EAAA,EAAD,CAAMC,GAAG,eAAelU,MAAO,CAAEmU,eAAgB,OAAQ9J,MAAON,EAAYlB,aACxErJ,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAU2F,QAAM,GACZjG,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAcE,MAAO,CAAEqK,MAAkB,gBAAXlL,EAA2B4K,EAAYlB,WAAakB,EAAYjB,QAC1FtJ,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMsF,UAAU,sBAAsBpF,MAAO,CAAEmK,WAAY,EAAGqB,UAAW,kBAE7EhM,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAcO,OAAK,EACfC,QAASd,EAAAnG,EAAAoG,cAAA,QAAMO,MAAO,CAClBqK,MACe,gBAAXlL,EAA2B4K,EAAYlB,WAAakB,EAAYjB,QAF/D,mBAOrBtJ,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,MACAN,EAAAnG,EAAAoG,cAACwU,EAAA,EAAD,CAAMC,GAAG,UAAUlU,MAAO,CAAEmU,eAAgB,OAAQ9J,MAAON,EAAYlB,aACnErJ,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAU2F,QAAM,GACZjG,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAcE,MAAO,CAAEqK,MAAkB,WAAXlL,EAAsB4K,EAAYlB,WAAakB,EAAYjB,QACrFtJ,EAAAnG,EAAAoG,cAAC6S,EAAA,EAAD,OAEJ9S,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAcO,OAAK,EACfC,QAASd,EAAAnG,EAAAoG,cAAA,QAAMO,MAAO,CAClBqK,MACe,WAAXlL,EAAsB4K,EAAYlB,WAAakB,EAAYjB,QAF1D,cAOrBtJ,EAAAnG,EAAAoG,cAACwU,EAAA,EAAD,CAAMC,GAAG,WAAWlU,MAAO,CAAEmU,eAAgB,OAAQ9J,MAAON,EAAYlB,aACpErJ,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAU2F,QAAM,GACZjG,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAcE,MAAO,CAAEqK,MAAkB,YAAXlL,EAAuB4K,EAAYlB,WAAakB,EAAYjB,QACtFtJ,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMsF,UAAU,gBAAgBpF,MAAO,CAAEmK,YAAa,EAAGqB,UAAW,kBAExEhM,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAcO,OAAK,EACfC,QAASd,EAAAnG,EAAAoG,cAAA,QAAMO,MAAO,CAClBqK,MACe,YAAXlL,EAAuB4K,EAAYlB,WAAakB,EAAYjB,QAF3D,eAOrBtJ,EAAAnG,EAAAoG,cAACwU,EAAA,EAAD,CAAMC,GAAG,WAAWlU,MAAO,CAAEmU,eAAgB,OAAQ9J,MAAON,EAAYlB,aACpErJ,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAU2F,QAAM,GACZjG,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAcE,MAAO,CAAEqK,MAAkB,YAAXlL,EAAuB4K,EAAYlB,WAAakB,EAAYjB,QACtFtJ,EAAAnG,EAAAoG,cAAC6S,EAAA,EAAD,OAEJ9S,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAcO,OAAK,EACfC,QAASd,EAAAnG,EAAAoG,cAAA,QAAMO,MAAO,CAClBqK,MACe,YAAXlL,EAAuB4K,EAAYlB,WAAakB,EAAYjB,QAF3D,eAOrBtJ,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,MACAN,EAAAnG,EAAAoG,cAACwU,EAAA,EAAD,CAAMC,GAAG,UAAUlU,MAAO,CAAEmU,eAAgB,OAAQ9J,MAAON,EAAYlB,aACnErJ,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAU2F,QAAM,GACZjG,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAcE,MAAO,CAAEqK,MAAON,EAAYjB,QACtCtJ,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMsF,UAAU,sBAAsBpF,MAAO,CAAEmK,WAAY,EAAGqB,UAAW,kBAE7EhM,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAcO,OAAK,EACfC,QAASd,EAAAnG,EAAAoG,cAAA,QAAMO,MAAO,CAAEqK,MAAON,EAAYjB,QAAlC,iDC/YrC,SAASmD,GAAWvN,GAChB,OAAOc,EAAAnG,EAAAoG,cAACiS,GAAArY,EAADH,OAAAgT,OAAA,CAAOC,UAAU,MAASzN,IAG9B,IAAM0V,GAAb,SAAA3V,GACI,SAAA2V,EAAY1V,GAAO,IAAAC,EAAA,OAAAzF,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAAkZ,IACfzV,EAAAzF,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAAkb,GAAArV,KAAA7D,KAAMwD,KAoBVkD,aAAe,SAAA9D,GAAI,OAAI,SAAAmB,GACnBN,EAAKO,SAALhG,OAAA2I,EAAA,EAAA3I,CAAA,GACK4E,EAAOmB,EAAE8C,OAAOrE,UAvBNiB,EA0BnBmC,KA1BmB5H,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KA0BZ,SAAAC,IAAA,IAAAwH,EAAAsT,EAAAC,EAAAC,EAAAC,EAAA,OAAApb,EAAAC,EAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACesC,EAAc,OAAQ,aAAc,IADnD,OACGwE,EADHhH,EAAAa,KAEGyZ,EAAqDtT,EAArDsT,WAAYC,EAAyCvT,EAAzCuT,SAAUC,EAA+BxT,EAA/BwT,WAAYC,EAAmBzT,EAAnByT,QAAmBzT,EAAV0T,MACjDF,EAAaA,EAAWtT,IAAI,SAAAyT,GACxB,MAAO,CACHvT,IAAKuT,EAAGvT,IACRuL,SAAUgI,EAAGpB,WAAWnS,MAAQvE,EAAU,WAAa8X,EAAGnB,WAAamB,EAAGpB,WAC1EpQ,KAAMwR,EAAGxR,KACTyJ,IAAK+H,EAAG3R,QACR6J,aAAc8H,EAAGpB,WAAWnS,MAAQvE,EAAU,cAGtD4X,EAAUA,EAAQvT,IAAI,SAAAyT,GAClB,MAAO,CACHvT,IAAKuT,EAAGvT,IACRuL,SAAUgI,EAAGpB,WAAWnS,MAAQvE,EAAU,WAAa8X,EAAGnB,WAAamB,EAAGpB,WAC1EpQ,KAAMwR,EAAGxR,KACTyJ,IAAK+H,EAAG3R,QACR4R,aAAcD,EAAGE,iBAGzBjW,EAAKO,SAAS,CACVqV,WAAYA,EACZC,QAASA,EAAQ1B,OAAO,SAAA+B,GAAC,OAAKA,EAAEF,eAChCG,kBAAmBN,EAAQ1B,OAAO,SAAA+B,GAAC,OAAIA,EAAEF,eACzC3T,MAAOqT,EACPC,SAAUA,IAEdxZ,QAAQC,IAAI4D,EAAKS,MAAM4B,OA5BpB,wBAAAjH,EAAAkB,SAAA1B,EAAA2B,SA1BYyD,EAwDnBgQ,cAAgB,WACZhQ,EAAKO,SAAS,CACV0P,WAAYjQ,EAAKS,MAAMwP,UACvBmG,cAAc,KA3DHpW,EA8DnBqW,WAAa,SAACtM,EAAIuM,GAAL,OAAW,SAAAhW,GACpBN,EAAKO,SAAS,CACV6V,cAAc,EACd/F,QAAStG,EACTP,iBAAkB8M,MAlEPtW,EAqEnBkQ,cArEmB,eAAApT,EAAAvC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAqEH,SAAAoC,EAAMuD,GAAN,IAAA4Q,EAAAb,EAAAD,EAAAhO,EAAA,OAAA3H,EAAAC,EAAAS,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cACZgF,EAAEyD,iBADUmN,EAEwBlR,EAAKS,MAAjC4P,EAFIa,EAEJb,QAASD,EAFLc,EAEKd,eAFLpT,EAAA1B,KAAA,EAGMsC,EAAc,OAAQ,qBAAsB,CAAEyS,UAASD,mBAH7D,QAGNhO,EAHMpF,EAAAf,MAILwI,SAEiB,OAAfrC,EAAIlG,QAET8D,EAAKgQ,gBACLhQ,EAAKmC,QACe,SAAfC,EAAIlG,QACT4I,MAAM1C,EAAIyC,MAXF,wBAAA7H,EAAAV,SAAAS,EAAAR,SArEG,gBAAAC,GAAA,OAAAM,EAAAH,MAAAJ,KAAAK,YAAA,GAEfoD,EAAKS,MAAQ,CACT2V,cAAc,EACdnG,WAAW,EACXsG,SAAU,GACVX,WAAY,GACZD,SAAU,GACVtT,MAAO,GACPwT,QAAS,GACTM,kBAAmB,GACnB9F,QAAS,GACT7G,iBAAkB,GAClB4G,eAAgB,IAbLpQ,EADvB,OAAAzF,OAAAmG,EAAA,EAAAnG,CAAAkb,EAAA3V,GAAAvF,OAAAoG,EAAA,EAAApG,CAAAkb,EAAA,EAAA3W,IAAA,oBAAAC,MAAA,WAkBQC,SAASpD,KAAK4a,UAAUC,OAAO,UAC/Bla,KAAK4F,SAnBb,CAAArD,IAAA,SAAAC,MAAA,WAsFa,IACDuR,EADCpO,EAAA3F,KAsCL,OAnCI+T,EADA/T,KAAKkE,MAAM2V,aACAvV,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAU6T,WAAY,IAAK3T,MAAOgK,EAAWyB,UACnDvQ,KAAKkE,MAAMkV,SAASrT,IAAI,SAAAC,GAAC,OACtB1B,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAcrC,IAAKyD,EAAEC,IACjByS,KAAM9I,OAAOC,WAAa,IAAM,EAAI,EACpCxK,QAASM,EAAKmU,WAAW9T,EAAEC,IAAKD,EAAEiO,cAClC3P,EAAAnG,EAAAoG,cAAA,OAAKiG,IAAG,GAAA/K,OAAK7B,EAAL,YAAA6B,OAA2BuG,EAAEyE,OAASoH,IAAK,cACnDvN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CACI+T,MAAO3S,EAAEpD,KACTgW,SAAUtU,EAAAnG,EAAAoG,cAAA,yBAAgC,IAAfyB,EAAE2E,SAAiB,SAAW,YAQrErG,EAAAnG,EAAAoG,cAAA,QAAM8E,SAAUrJ,KAAK2T,eACjBrP,EAAAnG,EAAAoG,cAAA,WACID,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CACIoP,aAAa,MACbxG,GAAG,kBACHjE,MAAOvJ,KAAKkE,MAAM+I,iBAClB9D,OAAO,SACPc,QAAQ,WACRT,SAAUxJ,KAAK0G,aAAa,kBAC5B5B,MAAO,CAAEI,MAAO0K,OAAOC,WAAa,IAAM,OAAS,QAG3DvL,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAQE,MAAO,CAACqK,MAAO,QAAS7Q,KAAK,UAArC,aAQRgG,EAAAnG,EAAAoG,cAACqN,EAAA,iBAAD,CAAkBuI,MAAOtM,GACzBvJ,EAAAnG,EAAAoG,cAAA,OAAK2F,UAAU,kBACX5F,EAAAnG,EAAAoG,cAAC6V,GAAD,CAAYnW,OAAO,YAAY2B,KAAM5F,KAAK4F,OAC1CtB,EAAAnG,EAAAoG,cAAA,WAAS2F,UAAU,mBACf5F,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAgBE,MAAOgK,EAAWkB,UAAWqK,iBAAe,GACxD/V,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAuB0V,WAAYhW,EAAAnG,EAAAoG,cAACgW,GAAApc,EAAD,CAAgB2G,MAAOgK,EAAWmB,UACjE3L,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAYE,MAAOgK,EAAWmB,QAAQ3L,EAAAnG,EAAAoG,cAAA,KAAG2F,UAAU,wBAAnD,gBAEJ5F,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KACIN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMC,WAAS,EAACgR,QAAS,IACpB7V,KAAKkE,MAAMmV,WAAWtT,IAAI,SAAAyU,GAAI,OAAIlW,EAAAnG,EAAAoG,cAACkW,EAAD,CAAelY,IAAKiY,EAAKvU,IACxDwL,IAAK+I,EAAK/I,IACVzJ,KAAMwS,EAAKxS,KACXwJ,SAAUgJ,EAAKhJ,SACfE,aAAc8I,EAAK9I,aACnBlE,GAAIgN,EAAKvU,IACTL,KAAMD,EAAKC,YAK3BtB,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAgBE,MAAOgK,EAAWkB,UAAWqK,iBAAe,GACxD/V,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAuB0V,WAAYhW,EAAAnG,EAAAoG,cAACgW,GAAApc,EAAD,CAAgB2G,MAAOgK,EAAWmB,UACjE3L,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAYE,MAAOgK,EAAWmB,QAAQ3L,EAAAnG,EAAAoG,cAAA,KAAG2F,UAAU,mBAAnD,uBAEJ5F,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KACIN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMC,WAAS,EAACgR,QAAS,IACpB7V,KAAKkE,MAAMoV,QAAQvT,IAAI,SAAA4T,GAAC,OAAIrV,EAAAnG,EAAAoG,cAACmW,EAAD,CAAWnY,IAAKoX,EAAE1T,IAC3CwL,IAAKkI,EAAElI,IACPzJ,KAAM2R,EAAE3R,KACRwJ,SAAUmI,EAAEnI,SACZhE,GAAImM,EAAE1T,IACNuM,QAAS7M,EAAKnC,MAAMgP,eAKpClO,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAgBE,MAAOgK,EAAWkB,UAAWqK,iBAAe,GACxD/V,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAuB0V,WAAYhW,EAAAnG,EAAAoG,cAACgW,GAAApc,EAAD,CAAgB2G,MAAOgK,EAAWmB,UACjE3L,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAYE,MAAOgK,EAAWmB,QAAQ3L,EAAAnG,EAAAoG,cAAA,KAAG2F,UAAU,mBAAnD,wBAEJ5F,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KACIN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMC,WAAS,EAACgR,QAAS,IACpB7V,KAAKkE,MAAM0V,kBAAkB7T,IAAI,SAAA4T,GAAC,IAAAgB,EAAA,OAAIrW,EAAAnG,EAAAoG,cAACmW,GAADC,EAAA,CAAWpY,IAAKoX,EAAE1T,IACrDwL,IAAKkI,EAAElI,IACPzJ,KAAM2R,EAAE3R,KACRwJ,SAAUmI,EAAEnI,SACZ/G,MAAOkP,EAAElP,MACT+C,GAAImM,EAAE1T,KAL6BjI,OAAA2I,EAAA,EAAA3I,CAAA2c,EAAA,QAM5BhB,EAAElP,OAN0BzM,OAAA2I,EAAA,EAAA3I,CAAA2c,EAAA,UAO1BhV,EAAKnC,MAAMgP,SAPemI,SAYnDrW,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAgBE,MAAOgK,EAAWkB,UAAWqK,iBAAe,GACxD/V,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAuB0V,WAAYhW,EAAAnG,EAAAoG,cAACgW,GAAApc,EAAD,CAAgB2G,MAAOgK,EAAWmB,UACjE3L,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAYE,MAAOgK,EAAWmB,QAAQ3L,EAAAnG,EAAAoG,cAAA,KAAG2F,UAAU,gBAAnD,kBAEJ5F,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KACIN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMC,WAAS,EAACgR,QAAS,IACpB7V,KAAKkE,MAAM4B,MAAMC,IAAI,SAAAiC,GAAI,OAAI1D,EAAAnG,EAAAoG,cAACqW,EAAD,CAAUrY,IAAKyF,EAAK/B,IAAK+B,KAAMA,EAAMpC,KAAMD,EAAKC,SAC9EtB,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIgB,UAAU,gBACzB5F,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAASsF,UAAU,UAAU7E,QAASrF,KAAKyT,eAA3C,gBAOhBnP,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAgBE,MAAOgK,EAAWkB,UAAWqK,iBAAe,GACxD/V,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAuB0V,WAAYhW,EAAAnG,EAAAoG,cAACgW,GAAApc,EAAD,CAAgB2G,MAAOgK,EAAWmB,UACjE3L,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAYE,MAAOgK,EAAWmB,QAAQ3L,EAAAnG,EAAAoG,cAAA,KAAG2F,UAAU,kBAAnD,WAEJ5F,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,uIAMRN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CACIkN,KAAM9R,KAAKkE,MAAMwP,UACjB3B,QAAS/R,KAAKyT,cACdS,oBAAqBnD,GACrBoD,aAAW,GACX7P,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,cACAN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KACIN,EAAAnG,EAAAoG,cAAA,WACKwP,WArN7BmF,EAAA,CAA+B5T,aCdlBuV,GAAb,SAAAtX,GACI,SAAAsX,EAAYrX,GAAO,IAAAC,EAAA,OAAAzF,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAA6a,IACfpX,EAAAzF,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAA6c,GAAAhX,KAAA7D,KAAMwD,KAYVoC,KAbmB5H,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAaZ,SAAAC,IAAA,IAAAwH,EAAA,OAAA3H,EAAAC,EAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACesC,EAAc,OAAO,MAAO,IAD3C,OACGwE,EADHhH,EAAAa,KAEHE,QAAQC,IAAIgG,GACM,OAAfA,EAAIlG,QACH8D,EAAKO,SAAS,CACV+S,KAAOlR,EAAIiV,gBALhB,wBAAAjc,EAAAkB,SAAA1B,EAAA2B,SAbYyD,EAuBnBsX,iBAAmB,SAACtG,EAAOuG,GACvBvX,EAAKO,SAAS,CAAEgX,UAxBDvX,EA2BnBwX,wBAA0B,SAAAxG,GACtBhR,EAAKO,SAAS,CAAEkX,YAAazG,EAAM5N,OAAOrE,SA1B1CiB,EAAKS,MAAQ,CACT6S,KAAM,GACNoE,QAAS,CAAC,WAAY,OAAQ,MAAO,UACrCH,KAAM,EACNE,YAAa,IANFzX,EADvB,OAAAzF,OAAAmG,EAAA,EAAAnG,CAAA6c,EAAAtX,GAAAvF,OAAAoG,EAAA,EAAApG,CAAA6c,EAAA,EAAAtY,IAAA,oBAAAC,MAAA,WAWQxC,KAAK4F,SAXb,CAAArD,IAAA,SAAAC,MAAA,WAgCQ,OACI8B,EAAAnG,EAAAoG,cAACD,EAAAnG,EAAMwG,SAAP,KACIL,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KACIN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KACIN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KACK5E,KAAKkE,MAAMiX,QAAQpV,IAAI,SAAAqV,GAAM,OAC1B9W,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAWrC,IAAK6Y,GACXA,OAKjB9W,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KACK5E,KAAKkE,MAAM6S,KAAO/W,KAAKkE,MAAM6S,KAC7BsE,MAAMrb,KAAKkE,MAAM8W,KAAOhb,KAAKkE,MAAMgX,YAAalb,KAAKkE,MAAM8W,KAAOhb,KAAKkE,MAAMgX,YAAclb,KAAKkE,MAAMgX,aACtGnV,IAAI,SAAAuV,GAAG,OACJhX,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAUrC,IAAK+Y,EAAI9N,IACflJ,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAW2W,UAAU,KAAKC,MAAM,OAC3BF,EAAI9J,SAAS9F,WAElBpH,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KAAY0W,EAAIvO,WAChBzI,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KAAY0W,EAAI7J,KAChBnN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KAAY0W,EAAI3b,OAAS,EAAI2E,EAAAnG,EAAAoG,cAAA,QAAMO,MAAO,CAAEqK,MAAO,UAAtB,OAA8C7K,EAAAnG,EAAAoG,cAAA,QAAMO,MAAO,CAAEqK,MAAO,QAAtB,YAE/E,KAGZ7K,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CACI6W,mBAAoB,CAAC,EAAE,GAAG,IAC1BF,UAAU,MACVG,MAAO1b,KAAKkE,MAAM6S,KAAK9T,OACvBiY,YAAalb,KAAKkE,MAAMgX,YACxBF,KAAMhb,KAAKkE,MAAM8W,KACjBW,oBAAqB,CACjBxE,aAAc,iBAElByE,oBAAqB,CACjBzE,aAAc,aAElB0E,aAAc7b,KAAK+a,iBACnBe,oBAAqB9b,KAAKib,+BAxE9CJ,EAAA,CAAgCvV,aAgFnByW,GAAb,SAAA9J,GACI,SAAA8J,EAAYvY,GAAO,IAAAmC,EAAA,OAAA3H,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAA+b,IACfpW,EAAA3H,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAA+d,GAAAlY,KAAA7D,KAAMwD,KAaVoC,KAdmB5H,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAcZ,SAAAoC,IAAA,IAAAqF,EAAA,OAAA3H,EAAAC,EAAAS,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cAAA0B,EAAA1B,KAAA,EACesC,EAAc,OAAO,SAAU,IAD9C,OACGwE,EADHpF,EAAAf,KAEHE,QAAQC,IAAIgG,GACM,OAAfA,EAAIlG,QACHgG,EAAK3B,SAAS,CACVgY,gBAAkBnW,EAAImW,kBAL3B,wBAAAvb,EAAAV,SAAAS,EAAAR,SAdY2F,EAyBnBoV,iBAAmB,SAACtG,EAAOuG,GACvBrV,EAAK3B,SAAS,CAAEgX,UA1BDrV,EA6BnBsV,wBAA0B,SAAAxG,GACtB9O,EAAK3B,SAAS,CAAEkX,YAAazG,EAAM5N,OAAOrE,SA5B1CmD,EAAKzB,MAAQ,CACT8X,gBAAkB,GAClBb,QAAS,CAAC,KAAM,OAAQ,UACxBH,KAAM,EACNE,YAAa,IANFvV,EADvB,OAAA3H,OAAAmG,EAAA,EAAAnG,CAAA+d,EAAA9J,GAAAjU,OAAAoG,EAAA,EAAApG,CAAA+d,EAAA,EAAAxZ,IAAA,oBAAAC,MAAA,WAYQxC,KAAK4F,SAZb,CAAArD,IAAA,SAAAC,MAAA,WAkCQ,OACI8B,EAAAnG,EAAAoG,cAACD,EAAAnG,EAAMwG,SAAP,KACIL,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KACIN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KACIN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KACK5E,KAAKkE,MAAMiX,QAAQpV,IAAI,SAAAqV,GAAM,OAC1B9W,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAWrC,IAAK6Y,GACXA,OAKjB9W,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KACK5E,KAAKkE,MAAM8X,gBAAkBhc,KAAKkE,MAAM8X,gBACxCX,MAAMrb,KAAKkE,MAAM8W,KAAOhb,KAAKkE,MAAMgX,YAAalb,KAAKkE,MAAM8W,KAAOhb,KAAKkE,MAAMgX,YAAclb,KAAKkE,MAAMgX,aACtGnV,IAAI,SAAAuV,GAAG,OACJhX,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAUrC,IAAK+Y,EAAIrV,KACf3B,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAW2W,UAAU,KAAKC,MAAM,OAC3BF,EAAIW,IAET3X,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KAAY0W,EAAIY,MAChB5X,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KAAY0W,EAAIta,KAAO,EAAIsD,EAAAnG,EAAAoG,cAAA,QAAMO,MAAO,CAAEqK,MAAO,UAAYmM,EAAI9V,MAAelB,EAAAnG,EAAAoG,cAAA,QAAMO,MAAO,CAAEqK,MAAO,QAAUmM,EAAI9V,UAExH,KAGZlB,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CACI6W,mBAAoB,CAAC,EAAE,GAAG,IAC1BF,UAAU,MACVG,MAAO1b,KAAKkE,MAAM8X,gBAAkBhc,KAAKkE,MAAM8X,gBAAgB/Y,OAAS,EACxEiY,YAAalb,KAAKkE,MAAMgX,YACxBF,KAAMhb,KAAKkE,MAAM8W,KACjBW,oBAAqB,CACjBxE,aAAc,iBAElByE,oBAAqB,CACjBzE,aAAc,aAElB0E,aAAc7b,KAAK+a,iBACnBe,oBAAqB9b,KAAKib,+BAzE9Cc,EAAA,CAAiCzW,aC9EpB6W,GAAb,SAAA5Y,GAAA,SAAA4Y,IAAA,OAAAne,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAAmc,GAAAne,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAAme,GAAA/b,MAAAJ,KAAAK,YAAA,OAAArC,OAAAmG,EAAA,EAAAnG,CAAAme,EAAA5Y,GAAAvF,OAAAoG,EAAA,EAAApG,CAAAme,EAAA,EAAA5Z,IAAA,SAAAC,MAAA,WAGQ,OACI8B,EAAAnG,EAAAoG,cAACqN,EAAA,iBAAD,CAAkBuI,MAAOtM,GACzBvJ,EAAAnG,EAAAoG,cAAA,OAAK2F,UAAU,gBACX5F,EAAAnG,EAAAoG,cAAC6V,GAAD,CAAYnW,OAAO,YACnBK,EAAAnG,EAAAoG,cAAA,WAAS2F,UAAU,mBACf5F,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAOsF,UAAU,SACb5F,EAAAnG,EAAAoG,cAAA,MAAIO,MAAO,CAACqK,MAAON,EAAYjB,QAAQtJ,EAAAnG,EAAAoG,cAAA,KAAG2F,UAAU,qBAApD,gBACA5F,EAAAnG,EAAAoG,cAAA,OAAKO,MAAO,CAAEI,MAAO,OAAQkX,UAAW,WACpC9X,EAAAnG,EAAAoG,cAAC8X,GAAD,eAX5BF,EAAA,CAA6B7W,sBCIhBgX,YAAb,SAAA/Y,GACI,SAAA+Y,EAAY9Y,GAAO,IAAAC,EAAA,OAAAzF,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAAsc,IACf7Y,EAAAzF,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAAse,GAAAzY,KAAA7D,KAAMwD,KASVoC,KAVmB5H,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAUZ,SAAAC,IAAA,IAAAwH,EAAA0W,EAAAC,EAAA,OAAAte,EAAAC,EAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACesC,EAAc,OAAQ,cAAe,IADpD,OACGwE,EADHhH,EAAAa,KAEK6c,EAAwB1W,EAAxB0W,UAAWC,EAAa3W,EAAb2W,SACnB/Y,EAAKO,SAAS,CACVuY,YAAWC,aAJZ,wBAAA3d,EAAAkB,SAAA1B,EAAA2B,SARHyD,EAAKS,MAAQ,CACTqY,UAAW,GACXC,SAAU,IAJC/Y,EADvB,OAAAzF,OAAAmG,EAAA,EAAAnG,CAAAse,EAAA/Y,GAAAvF,OAAAoG,EAAA,EAAApG,CAAAse,EAAA,EAAA/Z,IAAA,oBAAAC,MAAA,WASQxC,KAAK4F,SATb,CAAArD,IAAA,SAAAC,MAAA,WAmBQ,OACI8B,EAAAnG,EAAAoG,cAACqN,EAAA,iBAAD,CAAkBuI,MAAOtM,GACzBvJ,EAAAnG,EAAAoG,cAAA,OAAK2F,UAAU,oBACX5F,EAAAnG,EAAAoG,cAAC6V,GAAD,CAAYnW,OAAO,cAAc2B,KAAM5F,KAAK4F,OAC5CtB,EAAAnG,EAAAoG,cAAA,WAAS2F,UAAU,mBACf5F,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMC,WAAS,GACXP,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAOE,MAAK9G,OAAAye,GAAA,EAAAze,CAAA,GAAO8Q,EAAWF,MAAlB,CAAyB1J,MAAO,OAAQiE,OAAQ,SAChEuT,UAAWpY,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAe2W,UAAU,MAAMzW,MAAO,CAAEqK,MAAON,EAAYlB,aAA3D,iBADP,iBAEOrJ,EAAAnG,EAAAoG,cAAA,OAAK2F,UAAU,SAGdlK,KAAKkE,MAAMqY,UAAUxW,IAAI,SAAA4W,GAAK,OAE1BrY,EAAAnG,EAAAoG,cAACwU,EAAA,EAAD,CAAMC,GAAE,iBAAAvZ,OAAmBkd,EAAM1W,KAAO1D,IAAKoa,EAAM1W,IAAKnB,MAAO,CAAEmU,eAAgB,OAAQ9J,MAAON,EAAYlB,YAAczD,UAAU,aACpI5F,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAU2F,QAAM,GAChBjG,EAAAnG,EAAAoG,cAAA,OAAK2F,UAAU,mBACNyS,EAAMC,MAEXtY,EAAAnG,EAAAoG,cAAA,OAAK2F,UAAU,mBACX5F,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAQiN,IAAI,aAAarH,IAAG,GAAA/K,OAAK7B,GAAL6B,OAAmBkd,EAAME,KACrD/X,MAAO,CAAEI,MAAO,GAAImF,OAAQ,OAEhC/F,EAAAnG,EAAAoG,cAAA,OAAK2F,UAAU,yBACVyS,EAAMjR,WAIXpH,EAAAnG,EAAAoG,cAAA,OAAK2F,UAAU,oBACX5F,EAAAnG,EAAAoG,cAAA,QAAMO,MAAO,CAAEqK,MAAON,EAAYlB,WAAY8B,SAAU,WAAxD,KAAuEkN,EAAMG,aAA7E,SAGJxY,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,oBAlDxC0X,EAAA,CAAiChX,wBCC3ByX,UAASC,GAAWpf,GAE1B,SAASqf,GAAUC,EAASC,GACxB,IAAMC,EAAc,UAAYF,EAChCH,GAAOM,GAAGD,EAAa,SAAArG,GACnBoG,EAAGpG,KAIJ,IAAMuG,GAAb,SAAA/Z,GACI,SAAA+Z,EAAY9Z,GAAO,IAAAC,EAAAzF,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAAsd,IACf7Z,EAAAzF,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAAsf,GAAAzZ,KAAA7D,KAAMwD,KAwBVoC,KAzBmB,eAAA7H,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAyBZ,SAAAC,EAAM0F,GAAN,IAAA8B,EAAAmC,EAAAoQ,EAAAC,EAAA6E,EAAAK,EAAA1J,EAAA2J,EAAA/L,EAAAhH,EAAAgT,EAAAC,EAAA,OAAAxf,EAAAC,EAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEesC,EAAc,OAAD,WAAA5B,OAAoBgE,EAAKS,MAAMoN,UAAY,IAFvE,OAGgB,QADbzL,EAFHhH,EAAAa,MAGKC,SACIqI,EAAmFnC,EAAnFmC,KAAMoQ,EAA6EvS,EAA7EuS,WAAYC,EAAiExS,EAAjEwS,WAAY6E,EAAqDrX,EAArDqX,QAASK,EAA4C1X,EAA5C0X,OAAQ1J,EAAoChO,EAApCgO,eAAgB2J,EAAoB3X,EAApB2X,KAAM/L,EAAc5L,EAAd4L,IAAIhH,EAAU5E,EAAV4E,MAC3EgT,EAAO/b,EAAU,WACnBgc,EAAO,EACRD,IAASrF,EAAWnS,MAAKyX,EAAO,GACnCja,EAAKO,SAAS,CACVgE,OAAMoQ,aAAYC,aAAY6E,UAASK,SAAQ1J,iBAAgB2J,OAAM/L,MAAKiM,OAAMC,aAAa,EAAKlT,WATvG,wBAAA5L,EAAAkB,SAAA1B,EAAA2B,SAzBY,gBAAAC,GAAA,OAAAlC,EAAAqC,MAAAJ,KAAAK,YAAA,GAAAoD,EAsCnBma,kBAAoB,WAChBna,EAAKO,SAAS,CACV6Z,eAAiBpa,EAAKS,MAAM2Z,iBAxCjBpa,EA2CnBqa,mBAAqB,WACjBra,EAAKO,SAAS,CACV+Z,gBAAkBta,EAAKS,MAAM6Z,kBA7ClBta,EAgDnBua,aAhDmB,eAAAzd,EAAAvC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAgDJ,SAAAoC,EAAMuD,GAAN,IAAAka,EAAArH,EAAArP,EAAA,OAAArJ,EAAAC,EAAAS,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cACXgF,EAAEyD,iBACIyW,EAAYla,EAAE8C,OAAOQ,MAAM,GAEjCuP,GADIA,EAAIqH,EAAUrb,KAAKG,MAAM,MACvB6T,EAAE3T,OAAS,IACbsE,EAAK,IAAIG,UACVC,OAAO,QAASsW,EAAnB,GAAAxe,OAAiCgE,EAAKS,MAAMoN,SAA5C,KAAA7R,OAAwDmX,IACxDrP,EAAGI,OAAO,OAAQlE,EAAKS,MAAMoN,UAC7B/J,EAAGI,OAAO,OAAQlE,EAAKS,MAAMwZ,MARlBjd,EAAA1B,KAAA,GASOiD,EAAc,qBAAsBuF,GAT3C,QAUQ,OAVR9G,EAAAf,KAUHC,SACJ8D,EAAKqa,qBACLvV,MAAM,iCAZC,yBAAA9H,EAAAV,SAAAS,EAAAR,SAhDI,gBAAAE,GAAA,OAAAK,EAAAH,MAAAJ,KAAAK,YAAA,GAAAoD,EA+DnBya,YA/DmBlgB,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KA+DL,SAAA0C,IAAA,IAAAiW,EAAA,OAAA7Y,EAAAC,EAAAS,KAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,cACJgY,EAAO,CACToH,KAAO1a,EAAKS,MAAMoN,SAClBoM,KAAOja,EAAKS,MAAMwZ,MAHZ3c,EAAAhC,KAAA,EAKQsC,EAAc,OAAQ,oBAAqB0V,GALnD,OAMQ,OANRhW,EAAArB,KAMHC,QACH8D,EAAKD,MAAMgP,QAAQ/J,KAAK,cAPlB,wBAAA1H,EAAAhB,SAAAe,EAAAd,SA7DV,IAAMoe,EAAexO,OAAOyO,SAAS9H,KAAKxT,MAAM,KAC1CuO,EAAW8M,EAAaA,EAAanb,OAAS,GAHrC,OAIfQ,EAAKS,MAAQ,CACToN,SAAUA,EACVG,IAAK,GACL2G,WAAY,GACZC,WAAY,GACZrQ,KAAM,GACNwV,KAAM,GACND,OAAQ,GACRrZ,MAAO,GACPgZ,QAAS,GACTrJ,eAAgB,GAChB8J,aAAa,EACbD,KAAO,EACPG,eAAgB,EAChBE,gBAAiB,EACjBtT,MAAM,IAnBKhH,EADvB,OAAAzF,OAAAmG,EAAA,EAAAnG,CAAAsf,EAAA/Z,GAAAvF,OAAAoG,EAAA,EAAApG,CAAAsf,EAAA,EAAA/a,IAAA,oBAAAC,MAAA,WAwBQxC,KAAK4F,SAxBb,CAAArD,IAAA,SAAAC,MAAA,WA2Ea,IAAAmY,EACL,OACIrW,EAAAnG,EAAAoG,cAACD,EAAAnG,EAAMwG,SAAP,KACIL,EAAAnG,EAAAoG,cAACqN,EAAA,iBAAD,CAAkBuI,MAAOtM,GACrBvJ,EAAAnG,EAAAoG,cAAA,OAAK2F,UAAU,cACX5F,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMC,WAAS,EAACoE,QAAQ,SAASD,WAAW,UACxC1E,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,EAAGJ,WAAS,EAACoE,QAAQ,SAASD,WAAW,UAC5D1E,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAME,MAAO,CAAEI,MAAO,OAAQiE,OAAQ,SAClC7E,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KACIN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CACIE,MAAO,CAAEuF,OAAQ,KACjBI,MAAQzK,KAAKkE,MAAMuG,OAA2B,IAAlBzK,KAAKkE,MAAMuG,MAAhC,GAAAhL,OAAgD7B,EAAhD,kBAAA6B,OAA4EO,KAAKkE,MAAMuG,OAAvF,GAAAhL,OAAkG7B,EAAlG,YAAA6B,OAAwHO,KAAKkE,MAAM8D,KAAKyC,OAC/IkO,MAAO3Y,KAAKkE,MAAM8D,KAAKpF,OAE3B0B,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAaE,MAAK9G,OAAAye,GAAA,EAAAze,CAAA,GAAO8Q,EAAWF,MAAlB,CAAyBO,MAAON,EAAYlB,cAC1DrJ,EAAAnG,EAAAoG,cAAA,UAAKvE,KAAKkE,MAAM8D,KAAKpF,SAIjC0B,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAME,MAAK9G,OAAAye,GAAA,EAAAze,CAAA,GAAO8Q,EAAWF,MAAlB,CAAyB1J,MAAO,OAAQiE,OAAQ,UACvD7E,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAU2F,QAAM,GACZjG,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CACIQ,QAASd,EAAAnG,EAAAoG,cAAA,QAAMO,MAAO,CAAEqK,MAAON,EAAYjB,MAAO6B,SAAU,WAAnD,cACT/E,UAAWpG,EAAAnG,EAAAoG,cAAA,QAAMO,MAAO,CAAEqK,MAAON,EAAYlB,WAAY8B,SAAU,WAAxD,IAAsEzP,KAAKkE,MAAMoN,aAEpGhN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAU2F,QAAM,GACZjG,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CACIQ,QAASd,EAAAnG,EAAAoG,cAAA,QAAMO,MAAO,CAAEqK,MAAON,EAAYjB,MAAO6B,SAAU,WAAnD,wBACT/E,UAAWpG,EAAAnG,EAAAoG,cAAA,QAAMO,MAAO,CAAEqK,MAAON,EAAYlB,WAAY8B,SAAU,WAAxD,IAAsEzP,KAAKkE,MAAM2P,eAAjF,QAEnBvP,EAAAnG,EAAAoG,cAACwU,EAAA,EAAD,CAAMC,GAAE,iBAAAvZ,OAAmBO,KAAKkE,MAAMmU,WAAWpS,KAAOnB,MAAO,CAAEmU,eAAgB,OAAQ9J,MAAON,EAAYlB,aAC5GrJ,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAU2F,QAAM,GACZjG,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CACIiN,IAAI,aACJrH,IAAG,GAAA/K,OAAK7B,EAAL,SAAA6B,OAAwBO,KAAKkE,MAAMkU,WAAWvB,OAA9C,KAAApX,OAAwDO,KAAKkE,MAAMkU,WAAW3N,OACjF3F,MAAO,CAAEI,MAAO,GAAImF,OAAQ,MAChC/F,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CACIQ,QAASd,EAAAnG,EAAAoG,cAAA,QAAMO,MAAO,CAAEqK,MAAON,EAAYjB,MAAO6B,SAAU,WAAnD,gBACT/E,UAAWpG,EAAAnG,EAAAoG,cAAA,QAAMO,MAAO,CAAEqK,MAAON,EAAYlB,WAAY8B,SAAU,WAAxD,IAAsEzP,KAAKkE,MAAMkU,WAAW1M,UAA5F,SAGnBpH,EAAAnG,EAAAoG,cAACwU,EAAA,EAAD,CAAMC,GAAE,iBAAAvZ,OAAmBO,KAAKkE,MAAMmU,WAAWpS,KAAOnB,MAAO,CAAEmU,eAAgB,OAAQ9J,MAAON,EAAYlB,aAC5GrJ,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAU2F,QAAM,GACZjG,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CACIiN,IAAI,aACJrH,IAAG,GAAA/K,OAAK7B,EAAL,SAAA6B,OAAwBO,KAAKkE,MAAMmU,WAAWxB,OAA9C,KAAApX,OAAwDO,KAAKkE,MAAMmU,WAAW5N,OACjF3F,MAAO,CAAEI,MAAO,GAAImF,OAAQ,MAChC/F,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CACIQ,QAASd,EAAAnG,EAAAoG,cAAA,QAAMO,MAAO,CAAEqK,MAAON,EAAYjB,MAAO6B,SAAU,WAAnD,gBACT/E,UAAWpG,EAAAnG,EAAAoG,cAAA,QAAMO,MAAO,CAAEqK,MAAON,EAAYlB,WAAY8B,SAAU,WAAxD,IAAsEzP,KAAKkE,MAAMmU,WAAW3M,UAA5F,SAGnBpH,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAU2F,QAAM,GACZjG,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CACIQ,QAASd,EAAAnG,EAAAoG,cAAA,QAAMO,MAAO,CAAEqK,MAAON,EAAYjB,MAAO6B,SAAU,WAAnD,SACT/E,UAAWpG,EAAAnG,EAAAoG,cAAA,QAAMO,MAAO,CAAEqK,MAAON,EAAYlB,WAAY8B,SAAU,WAAazP,KAAKkE,MAAMuN,IAAhF,aAI3BnN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,EAAGH,MAAO,CAAEsE,QAAS,KACxC9E,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAOE,MAAK9G,OAAAye,GAAA,EAAAze,CAAA,GAAO8Q,EAAWF,MAAlB,CAAyBxF,QAAS,MAC1C9E,EAAAnG,EAAAoG,cAAA,MAAIO,MAAO,CAAEqK,MAAON,EAAYjB,QAAhC,cACAtJ,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAQqF,QAAQ,WAAY5E,QAASrF,KAAK8d,mBAAoBhZ,MAAO,CAAEI,MAAO,MAAOiE,OAAQ,OAAQC,QAAS,GAAI+F,MAAON,EAAYlB,aAArI,iBACArJ,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAQqF,QAAQ,WAAW5E,QAASrF,KAAK4d,kBAAmB9Y,MAAO,CAAEI,MAAO,MAAOiE,OAAQ,OAAQC,QAAS,GAAI+F,MAAON,EAAYlB,aAAnI,iBAEJrJ,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAOE,MAAK9G,OAAAye,GAAA,EAAAze,CAAA,GAAO8Q,EAAWF,MAAlB,CAAyBxF,QAAS,GAAIiB,OAAQ,OAAQwO,UAAW,MACzEvU,EAAAnG,EAAAoG,cAAA,MAAIO,MAAO,CAAEqK,MAAON,EAAYjB,QAAhC,QACI5N,KAAKkE,MAAMyZ,YACPrZ,EAAAnG,EAAAoG,cAAC+Z,IAAD3D,EAAA,CAASuC,QAASld,KAAKkE,MAAMgZ,SAA7Blf,OAAA2I,EAAA,EAAA3I,CAAA2c,EAAA,UAA+C3a,KAAKkE,MAAMgZ,SAA1Dlf,OAAA2I,EAAA,EAAA3I,CAAA2c,EAAA,SAA2E3a,KAAKkE,MAAMqZ,QAAtF5C,IACE,OAK1BrW,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CACIkN,KAAM9R,KAAKkE,MAAM6Z,eACjBhM,QAAS/R,KAAK8d,mBACd3J,aAAW,GACX7P,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,0BACAN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KACIN,EAAAnG,EAAAoG,cAAA,WACID,EAAAnG,EAAAoG,cAAA,QAAM+E,QAAQ,uBACVhF,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAQE,MAAO,CAAEqE,OAAQ,MAAOjE,MAAO,QACnCZ,EAAAnG,EAAAoG,cAAA,SAAOjG,KAAK,OACRwG,MAAO,CAAEI,MAAO,OAAQiF,QAAS,EAAGC,SAAU,YAC9CZ,SAAUxJ,KAAKge,eACnB1Z,EAAAnG,EAAAoG,cAAA,YAAMD,EAAAnG,EAAAoG,cAAA,KAAG2F,UAAU,kBAAnB,2BAMpB5F,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAQkN,KAAM9R,KAAKkE,MAAM2Z,cAAe9L,QAAS/R,KAAK4d,kBAAmBW,kBAAgB,qBACrFja,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAa4I,GAAG,qBAAhB,gBACAlJ,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KACAN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,6CAIAN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KACAN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAQS,QAASrF,KAAKke,YAAa/O,MAAM,WAAzC,MAGA7K,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAQS,QAASrF,KAAK4d,kBAAmBzO,MAAM,aAA/C,kBAlLxBmO,EAAA,CAA2BhY,aA6LrBkZ,eACF,SAAAA,EAAYhb,GAAO,IAAAmC,EAAA,OAAA3H,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAAwe,IACf7Y,EAAA3H,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAAwgB,GAAA3a,KAAA7D,KAAMwD,KAYVkD,aAAe,SAAA9D,GAAI,OAAI,SAAAmB,GACnB4B,EAAK3B,SAALhG,OAAA2I,EAAA,EAAA3I,CAAA,GACK4E,EAAOmB,EAAE8C,OAAOrE,UAfNmD,EAkBnBC,KAlBmB5H,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAkBZ,SAAAmD,IAAA,OAAArD,EAAAC,EAAAS,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,OACHke,GAAUtX,EAAKzB,MAAMgZ,QAAS,SAACnG,GAC3BpR,EAAK3B,SAAS,CACVya,SAAU1H,EAAK2H,KAAK7e,MAExB,IAAM8e,EAAUhZ,EAAKgZ,QAAQC,QACd,OAAZD,QAAgCE,IAAZF,IACvBA,EAAQG,UAAYH,EAAQI,gBAEhChC,GAAOiC,KAAK,eAAgB,CACxBC,OAAQtZ,EAAKzB,MAAMgZ,UAVpB,wBAAA1b,EAAAzB,SAAAwB,EAAAvB,SAlBY2F,EA+BnBuZ,QA/BmB,eAAAjd,EAAAjE,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KA+BT,SAAA8D,EAAM6B,GAAN,OAAA7F,EAAAC,EAAAS,KAAA,SAAAuD,GAAA,cAAAA,EAAArD,KAAAqD,EAAApD,MAAA,OACNgF,EAAEyD,iBACE7B,EAAKzB,MAAMgJ,QAAQjK,OAAS,IAC5B8Z,GAAOiC,KAAK,cAAe,CACvBC,OAAQtZ,EAAKnC,MAAM0Z,QACnBiC,IAAK,EACL5B,OAAQ5X,EAAKnC,MAAM+Z,OACnB/X,KAAMG,EAAKzB,MAAMgJ,UAErBvH,EAAK3B,SAAS,CACVkJ,QAAS,MAVX,wBAAA/K,EAAApC,SAAAmC,EAAAlC,SA/BS,gBAAAG,GAAA,OAAA8B,EAAA7B,MAAAJ,KAAAK,YAAA,GAEfsF,EAAKzB,MAAQ,CACTgZ,QAASvX,EAAKnC,MAAM0Z,QACpBuB,SAAU,GACVvR,QAAS,IAEbvH,EAAKgZ,QAAUS,IAAMC,YAPN1Z,mFAWf3F,KAAK4F,wCAmCA,IAAAmD,EAAA/I,KACL,OACIsE,EAAAnG,EAAAoG,cAAA,WACID,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMC,WAAS,GACXP,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,IACX5E,EAAAnG,EAAAoG,cAAA,OAAK+a,IAAKtf,KAAK2e,QAAS7Z,MAAO,CAACI,MAAO,OAAQmF,OAAQ,OAAOC,UAAW,SAAU8R,UAAU,WAC7F9X,EAAAnG,EAAAoG,cAAA,WACCvE,KAAKkE,MAAMua,SAAS1Y,IAAI,SAAAuC,GAEjB,OACIhE,EAAAnG,EAAAoG,cAAA,OAAKhC,IAAK+F,EAAIrC,IAAKnB,MAAO,CAACqE,OAAQ,GAAIyH,QAAQ,OAAQ1L,MAAM,SAE5DZ,EAAAnG,EAAAoG,cAAA,OAAKO,MAAOiE,EAAKvF,MAAM+Z,SAAWjV,EAAI1F,KAAKqD,IAAK,CAACf,MAAO,OAAS,KAC9DZ,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CACIiN,IAAI,aACJrH,IAAG,GAAA/K,OAAK7B,EAAL,SAAA6B,OAAwB6I,EAAI1F,KAAKiU,OAAjC,KAAApX,OAA2C6I,EAAI1F,KAAK6H,OACvD3F,MAAO,CAAEI,MAAO,GAAImF,OAAQ,MAChC/F,EAAAnG,EAAAoG,cAAA,OAAK2F,UAAU,YAAYpF,MAAO,CAACI,MAAM,QACrCZ,EAAAnG,EAAAoG,cAAA,MAAIO,MAAO,IAAKwD,EAAI1F,KAAK8I,WACzBpH,EAAAnG,EAAAoG,cAAA,MAAIO,MAAO,IAAKwD,EAAI9C,aAQ5ClB,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,IACX5E,EAAAnG,EAAAoG,cAAA,QAAM8E,SAAUrJ,KAAKkf,QAAShV,UAAU,QACpC5F,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAWsF,UAAU,MAAMpF,MAAO,CAAEI,MAAO0K,OAAOC,WAAa,IAAM,MAAQ,OACzEtG,MAAM,UACNJ,OAAO,QACP3G,MAAOxC,KAAKkE,MAAMgJ,QAClB1D,SAAUxJ,KAAK0G,aAAa,WAC5B+C,WAAY,kBAGhBnF,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAKtG,KAAK,SAASwG,MAAO,CAAE2K,SAAU,GAAIN,MAAON,EAAYlB,WAAYgB,gBAAiB,SACtFrK,EAAAnG,EAAAoG,cAAA,KAAG2F,UAAU,mCArFvB5E,aCvMTia,GAAb,SAAAhc,GACI,SAAAgc,EAAY/b,GAAO,IAAAC,EAAA,OAAAzF,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAAuf,IACf9b,EAAAzF,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAAuhB,GAAA1b,KAAA7D,KAAMwD,KAgBVkD,aAAe,SAAA9D,GAAI,OAAI,SAAAmB,GACnBN,EAAKO,SAALhG,OAAA2I,EAAA,EAAA3I,CAAA,GACK4E,EAAOmB,EAAE8C,OAAOrE,UAnBNiB,EA0BnBmC,KA1BmB,eAAA7H,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KA0BZ,SAAAC,EAAM0F,GAAN,IAAA8B,EAAA2Z,EAAA,OAAAthB,EAAAC,EAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACesC,EAAc,OAAQ,UAAW,IADhD,UAEgB,QADbwE,EADHhH,EAAAa,MAEKC,OAFL,CAAAd,EAAAE,KAAA,eAGC0E,EAAKO,SAAS,CACVyb,iBAAiB,EACjBxT,KAAMpG,EAAIoG,KACVrJ,KAAMiD,EAAIoG,KAAKP,UACfjB,MAAK,GAAAhL,OAAK7B,EAAL,SAAA6B,OAAwBoG,EAAIoG,KAAK4K,OAAjC,KAAApX,OAA2CoG,EAAIoG,KAAKxB,OACzDiV,MAAO7Z,EAAI6Z,MACXC,MAAO9Z,EAAI8Z,QAThB9gB,EAAAE,KAAA,EAWoBsC,EAAc,OAAQ,gBAAiB,IAX3D,OAWOme,EAXP3gB,EAAAa,KAYC+D,EAAKO,SAAS,CACV8B,MAAO0Z,IAbZ,wBAAA3gB,EAAAkB,SAAA1B,EAAA2B,SA1BY,gBAAAC,GAAA,OAAAlC,EAAAqC,MAAAJ,KAAAK,YAAA,GAAAoD,EA2CnBmc,qBAAuB,WACnBnc,EAAKO,SAAS,CACV6b,kBAAoBpc,EAAKS,MAAM2b,oBA7CpBpc,EAgDnB2C,SAAW,WACP3C,EAAKO,SAAS,CACVuQ,aAAc,GACduL,iBAAkB,MAnDPrc,EAsDnBsc,eAtDmB,eAAAxf,EAAAvC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAsDF,SAAAoC,EAAMuD,GAAN,IAAA4Q,EAAAC,EAAAoL,EAAAna,EAAA,OAAA3H,EAAAC,EAAAS,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cACbgF,EAAEyD,iBACF/D,EAAK2C,WAFQuO,EAGsBlR,EAAKS,MAAhC0Q,EAHKD,EAGLC,SAAUoL,EAHLrL,EAGKqL,aAHLvf,EAAA1B,KAAA,EAIKsC,EAAc,OAAQ,0BAA2B,CAAEuT,WAAUoL,iBAJlE,QAIPna,EAJOpF,EAAAf,MAKLwI,QACJrC,EAAIqC,OAAOnC,IAAI,SAAAoC,GACX,IAAMC,EAAY,OAASD,EAAIE,MAE/B,OADA5E,EAAKO,SAALhG,OAAA2I,EAAA,EAAA3I,CAAA,GAAiBoK,EAAYD,EAAIG,MAC1BH,IAGG,OAAftC,EAAIlG,SACH8D,EAAKmC,OACLnC,EAAKO,SAAS,CACZ4Q,SAAW,GACXoL,aAAc,KAEhBvc,EAAKmc,wBAlBI,wBAAAnf,EAAAV,SAAAS,EAAAR,SAtDE,gBAAAE,GAAA,OAAAK,EAAAH,MAAAJ,KAAAK,YAAA,GAEfoD,EAAKS,MAAQ,CACTub,iBAAiB,EACjBxT,KAAM,GACNxB,MAAO6L,EAAQ,IACf1T,KAAM,GACN8c,MAAO,GACPC,MAAO,GACPE,kBAAmB,EACnBjL,SAAW,GACXoL,aAAc,GACdzL,aAAe,GACfuL,iBAAkB,GAClBha,MAAM,IAdKrC,EADvB,OAAAzF,OAAAmG,EAAA,EAAAnG,CAAAuhB,EAAAhc,GAAAvF,OAAAoG,EAAA,EAAApG,CAAAuhB,EAAA,EAAAhd,IAAA,oBAAAC,MAAA,WAyBQxC,KAAK4F,SAzBb,CAAArD,IAAA,SAAAC,MAAA,WA6Ea,IAAAmD,EAAA3F,KACL,OACIsE,EAAAnG,EAAAoG,cAACqN,EAAA,iBAAD,CAAkBuI,MAAOtM,GACzBvJ,EAAAnG,EAAAoG,cAAA,OAAK2F,UAAU,gBACX5F,EAAAnG,EAAAoG,cAAC6V,GAAD,CAAYnW,OAAO,UAAU2B,KAAM5F,KAAK4F,OACxCtB,EAAAnG,EAAAoG,cAAA,WAAS2F,UAAU,mBACf5F,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAOsF,UAAU,QAAQpF,MAAOgK,EAAWS,OACvCjL,EAAAnG,EAAAoG,cAAA,UAAID,EAAAnG,EAAAoG,cAAA,KAAG2F,UAAU,iBAAjB,YAAiD5F,EAAAnG,EAAAoG,cAAA,WACjDD,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMC,WAAS,EAACgR,QAAS,IACrBvR,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,GACnBX,EAAAnG,EAAAoG,cAAC0b,GAAD,CACIra,KAAM5F,KAAK4F,KACX6E,MAAOzK,KAAKkE,MAAMuG,MAClB7H,KAAM5C,KAAKkE,MAAMtB,KACjBsd,WAAW,KAEnB5b,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,GAEfjF,KAAKkE,MAAMub,gBAAkBnb,EAAAnG,EAAAoG,cAAC4b,GAAD,CAAUT,MAAO1f,KAAKkE,MAAMwb,MAAOC,MAAO3f,KAAKkE,MAAMyb,MAAO1T,KAAMjM,KAAKkE,MAAM+H,KAAMiU,WAAW,IAAU,MAKrJ5b,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAOsF,UAAU,QAAQpF,MAAOgK,EAAWS,OACvCjL,EAAAnG,EAAAoG,cAAA,UAAID,EAAAnG,EAAAoG,cAAA,KAAG2F,UAAU,gBAAjB,gBACA5F,EAAAnG,EAAAoG,cAAA,WACAD,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMC,WAAS,EAACgR,QAAS,IAChB7V,KAAKkE,MAAM4B,MAAMC,IAAI,SAAAiC,GAAI,OAAI1D,EAAAnG,EAAAoG,cAACqW,EAAD,CAAUrY,IAAKyF,EAAK/B,IAAK+B,KAAMA,EAAMpC,KAAMD,EAAKC,WAG1FtB,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAOsF,UAAU,QAAQpF,MAAOgK,EAAWS,OACvCjL,EAAAnG,EAAAoG,cAAA,UAAID,EAAAnG,EAAAoG,cAAA,KAAG2F,UAAU,gBAAjB,qBACA5F,EAAAnG,EAAAoG,cAAA,WACAD,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAQE,MAAO,CAACqK,MAAON,EAAYjB,OAAQvI,QAASrF,KAAK4f,sBACzDtb,EAAAnG,EAAAoG,cAAA,KAAG2F,UAAU,kBADb,sBAKR5F,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CACIkN,KAAM9R,KAAKkE,MAAM2b,iBACjB9N,QAAS/R,KAAK4f,qBACdzL,aAAW,GACX7P,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,wBACAN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KACIN,EAAAnG,EAAAoG,cAAA,WACID,EAAAnG,EAAAoG,cAAA,QAAM8E,SAAUrJ,KAAK+f,gBAGjBzb,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAWE,MAAO,CAAEqE,OAAQ,MAAOjE,MAAO,OACtCqE,MAAM,eACNJ,OAAO,SACP7K,KAAK,WACLkE,MAAOxC,KAAKkE,MAAM0Q,SAClBpL,SAAUxJ,KAAK0G,aAAa,YAC5B+C,WAAYzJ,KAAKkE,MAAMqQ,aACvB7K,MAAO1J,KAAKkE,MAAMqQ,aAAatR,OAAS,IAE5CqB,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAWE,MAAO,CAAEqE,OAAQ,MAAOjE,MAAO,OACtCqE,MAAM,eACNJ,OAAO,SACP3G,MAAOxC,KAAKkE,MAAM8b,aAClBxW,SAAUxJ,KAAK0G,aAAa,gBAC5B+C,WAAYzJ,KAAKkE,MAAM4b,iBACvBpW,MAAO1J,KAAKkE,MAAM4b,iBAAiB7c,OAAS,IAEhDqB,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAQtG,KAAK,SAAS2L,QAAQ,WAAWnF,MAAO,CAAEqE,OAAQ,MAAOjE,MAAO,QACpEZ,EAAAnG,EAAAoG,cAAA,YAAMD,EAAAnG,EAAAoG,cAAA,KAAG2F,UAAU,kBAAnB,+BA/IpCqV,EAAA,CAA6Bja,aA2JhB8a,GAAb,SAAAnO,GACI,SAAAmO,EAAY5c,GAAO,IAAAuF,EAAA/K,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAAogB,IACfrX,EAAA/K,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAAoiB,GAAAvc,KAAA7D,KAAMwD,KAiBVoC,KAlBmB,eAAA/E,EAAA7C,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAkBZ,SAAA0C,EAAMiD,GAAN,IAAA8B,EAAA,OAAA3H,EAAAC,EAAAS,KAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,cAAAgC,EAAAhC,KAAA,EACesC,EAAc,OAAD,WAAA5B,OAAoBsJ,EAAK7E,MAAMmc,SAAW,IADtE,OAEgB,QADbxa,EADH9E,EAAArB,MAEKC,QACJoJ,EAAK/E,SAAS,CACVyb,iBAAiB,EACjBxT,KAAMpG,EAAIoG,KACVrJ,KAAMiD,EAAIoG,KAAKP,UACfjB,MAAK,GAAAhL,OAAK7B,EAAL,SAAA6B,OAAwBoG,EAAIoG,KAAK4K,OAAjC,KAAApX,OAA2CoG,EAAIoG,KAAKxB,OACzDiV,MAAO7Z,EAAI6Z,MACXC,MAAO9Z,EAAI8Z,QAThB,wBAAA5e,EAAAhB,SAAAe,EAAAd,SAlBY,gBAAAG,GAAA,OAAAU,EAAAT,MAAAJ,KAAAK,YAAA,GAEf,IAAM+d,EAAexO,OAAOyO,SAAS9H,KAAKxT,MAAM,KAC1Csd,EAAUjC,EAAaA,EAAanb,OAAS,GAHpC,OAIf8F,EAAK7E,MAAQ,CACTub,iBAAiB,EACjBY,QAAUA,EACVpU,KAAM,GACNxB,MAAO6L,EAAQ,IACf1T,KAAM,GACN8c,MAAO,GACPC,MAAO,IAXI5W,EADvB,OAAA/K,OAAAmG,EAAA,EAAAnG,CAAAoiB,EAAAnO,GAAAjU,OAAAoG,EAAA,EAAApG,CAAAoiB,EAAA,EAAA7d,IAAA,oBAAAC,MAAA,WAiBQxC,KAAK4F,SAjBb,CAAArD,IAAA,SAAAC,MAAA,WAmCQ,OACI8B,EAAAnG,EAAAoG,cAAA,OAAK2F,UAAU,gBACX5F,EAAAnG,EAAAoG,cAAC6V,GAAD,CAAYnW,OAAO,UAAU2B,KAAM5F,KAAK4F,OACxCtB,EAAAnG,EAAAoG,cAAA,WAAS2F,UAAU,mBACf5F,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAOsF,UAAU,QAAQpF,MAAOgK,EAAWS,OACvCjL,EAAAnG,EAAAoG,cAAA,UAAID,EAAAnG,EAAAoG,cAAA,KAAG2F,UAAU,iBAAjB,YAAiD5F,EAAAnG,EAAAoG,cAAA,WACjDD,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMC,WAAS,EAACgR,QAAS,IACrBvR,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,GACnBX,EAAAnG,EAAAoG,cAAC0b,GAAD,CACIra,KAAM5F,KAAK4F,KACX6E,MAAOzK,KAAKkE,MAAMuG,MAClB7H,KAAM5C,KAAKkE,MAAMtB,KACjBsd,WAAW,KAEnB5b,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,GAEfjF,KAAKkE,MAAMub,gBAAkBnb,EAAAnG,EAAAoG,cAAC4b,GAAD,CAAUT,MAAO1f,KAAKkE,MAAMwb,MAAOC,MAAO3f,KAAKkE,MAAMyb,MAAO1T,KAAMjM,KAAKkE,MAAM+H,KAAMiU,WAAW,IAAW,YAnD1KE,EAAA,CAAkC9a,aA8D5Bgb,eACF,SAAAA,EAAY9c,GAAO,IAAAqH,EAAA,OAAA7M,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAAsgB,IACfzV,EAAA7M,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAAsiB,GAAAzc,KAAA7D,KAAMwD,KAUVkD,aAAe,SAAA9D,GAAI,OAAI,SAAAmB,GACnB8G,EAAK7G,SAALhG,OAAA2I,EAAA,EAAA3I,CAAA,GACK4E,EAAOmB,EAAE8C,OAAOrE,UAbNqI,EAgBnB0V,kBAAoB,WAChB1V,EAAK7G,SAAS,CACVwc,eAAgB3V,EAAK3G,MAAMsc,iBAlBhB3V,EAqBnB4V,iBAAmB,WACf5V,EAAK7G,SAAS,CACV0c,cAAe7V,EAAK3G,MAAMwc,aAC1BC,SAAU,MAxBC9V,EA2BnB+V,YA3BmB,eAAAtf,EAAAtD,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KA2BL,SAAAmD,EAAMwC,GAAN,IAAAka,EAAA1W,EAAA,OAAArJ,EAAAC,EAAAS,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,cACV8L,EAAK7G,SAAS,CACV6c,qBAAqB,IAEnB5C,EAAYla,EAAE8C,OAAOQ,MAAM,IAC7BE,EAAK,IAAIG,UACVC,OAAO,QAASsW,EAAW,aANpBzc,EAAAzC,KAAA,EAOQiD,EAAc,uBAAwBuF,GAP9C,OAQS,OART/F,EAAA9B,KAQFC,SACJkL,EAAK7G,SAAS,CACV6c,qBAAqB,IAEzBjR,OAAOyO,SAASyC,UAZV,wBAAAtf,EAAAzB,SAAAwB,EAAAvB,SA3BK,gBAAAU,GAAA,OAAAY,EAAAlB,MAAAJ,KAAAK,YAAA,GAAAwK,EA0CnBkW,WA1CmB,eAAA9e,EAAAjE,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KA0CN,SAAA8D,EAAM6B,GAAN,IAAA8B,EAAA,OAAA3H,EAAAC,EAAAS,KAAA,SAAAuD,GAAA,cAAAA,EAAArD,KAAAqD,EAAApD,MAAA,cACTgF,EAAEyD,iBACFqD,EAAK7G,SAAS,CACVgd,oBAAoB,IAHf7e,EAAApD,KAAA,EAKSsC,EAAc,OAAO,sBAAuB,CAACuB,KAAOiI,EAAK3G,MAAM+c,UALxE,QAKHpb,EALG1D,EAAAzC,MAMFwI,QACH2C,EAAK7G,SAAS,CACV2c,SAAW9a,EAAIqC,OAAO,GAAGI,MAGd,OAAfzC,EAAIlG,SACJkL,EAAK7G,SAAS,CACVgd,oBAAoB,EACpBC,QAAU,GACVN,SAAW,KAEf9V,EAAKrH,MAAMoC,OACXiF,EAAK4V,oBAlBA,wBAAAte,EAAApC,SAAAmC,EAAAlC,SA1CM,gBAAAW,GAAA,OAAAsB,EAAA7B,MAAAJ,KAAAK,YAAA,GAEfwK,EAAK3G,MAAQ,CACTsc,eAAe,EACfE,cAAc,EACdG,qBAAqB,EACrBK,qBAAqB,EACrBD,QAAS,GACTN,SAAU,IARC9V,wEAiEf,OACIvG,EAAAnG,EAAAoG,cAACD,EAAAnG,EAAMwG,SAAP,KACIL,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAME,MAAO,CAAEqc,WAAY,SACvB7c,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KACIN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CACIE,MAAO,CAAEuF,OAAQ,KACjBI,MAAOzK,KAAKwD,MAAMiH,MAClBkO,MAAO3Y,KAAKwD,MAAMZ,OAEtB0B,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAaE,MAAO,CAAEuF,OAAQ,KAC1B/F,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAYwc,cAAY,EAACnX,QAAQ,KAAKsR,UAAU,KAAKzW,MAAO,CAAEqK,MAAON,EAAYlB,WAAY8B,SAAU,WAClGzP,KAAKwD,MAAMZ,QAIvB5C,KAAKwD,MAAM0c,UACR5b,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KAEIN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAQyc,KAAK,QACTlS,MAAM,UACN9J,QAASrF,KAAKugB,kBACdzb,MAAO,CAAEqK,MAAON,EAAYjB,MAAO6B,SAAU,WAHjD,cAMAnL,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAQyc,KAAK,QACTlS,MAAM,UACN9J,QAASrF,KAAKygB,iBACd3b,MAAO,CAAEqK,MAAON,EAAYjB,MAAO6B,SAAU,WAHjD,cAOF,IAGVnL,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CACIkN,KAAM9R,KAAKkE,MAAMsc,cACjBzO,QAAS/R,KAAKugB,kBACdpM,aAAW,GACX7P,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,qBACAN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KACIN,EAAAnG,EAAAoG,cAAA,WACID,EAAAnG,EAAAoG,cAAA,QAAM+E,QAAQ,uBACTtJ,KAAK6gB,oBAAsBvc,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,MAAqB,GACjDN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAQE,MAAO,CAAEqE,OAAQ,MAAOjE,MAAO,QACnCZ,EAAAnG,EAAAoG,cAAA,SAAOjG,KAAK,OACRwG,MAAO,CAAEI,MAAO,OAAQiF,QAAS,EAAGC,SAAU,YAC9CZ,SAAUxJ,KAAK4gB,cACnBtc,EAAAnG,EAAAoG,cAAA,YAAMD,EAAAnG,EAAAoG,cAAA,KAAG2F,UAAU,kBAAnB,kCAMpB5F,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CACIkN,KAAM9R,KAAKkE,MAAMwc,aACjB3O,QAAS/R,KAAKygB,iBACdtM,aAAW,GACX7P,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,oBACAN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KACIN,EAAAnG,EAAAoG,cAAA,WACID,EAAAnG,EAAAoG,cAAA,QAAM8E,SAAUrJ,KAAK+gB,WAAYzX,QAAQ,uBACpCtJ,KAAKkhB,oBAAsB5c,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,MAAqB,GACjDN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAWE,MAAO,CAAEqE,OAAQ,MAAOjE,MAAO,OACtCqE,MAAM,WACNJ,OAAO,SACP3G,MAAOxC,KAAKkE,MAAM+c,QAClBzX,SAAUxJ,KAAK0G,aAAa,WAC5B+C,WAAYzJ,KAAKkE,MAAMyc,SACvBjX,MAAO1J,KAAKkE,MAAMyc,SAAS1d,OAAS,IAExCqB,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAQtG,KAAK,SAAS2L,QAAQ,WAAWnF,MAAO,CAAEqE,OAAQ,MAAOjE,MAAO,QACpEZ,EAAAnG,EAAAoG,cAAA,YAAMD,EAAAnG,EAAAoG,cAAA,KAAG2F,UAAU,kBAAnB,6BAzIV5E,aAoJpBgc,GAAW,SAAA1N,GAAuC,IAApC8L,EAAoC9L,EAApC8L,MAAOC,EAA6B/L,EAA7B+L,MAAO1T,EAAsB2H,EAAtB3H,KAAMiU,EAAgBtM,EAAhBsM,UAChCqB,EAAO,CACP5V,MAAOM,EAAKN,MACZ6V,QAASvV,EAAKpE,QACd8X,MAAOA,EAAM8B,QACbC,cAAezV,EAAK6Q,aACpB6E,WAAYhC,EAAMiC,OAClBC,cAAe5V,EAAK6V,aACpBC,WAAYrC,EAAMsC,MAClBC,cAAevC,EAAMwC,SAErBhC,IACAqB,EAAO,CACH5B,MAAOA,EAAM8B,QACjBC,cAAezV,EAAK6Q,aACpB6E,WAAYhC,EAAMiC,OAClBC,cAAe5V,EAAK6V,aACpBC,WAAYrC,EAAMsC,MAClBC,cAAevC,EAAMwC,UAEzB,IAAIC,EAAW,CACXR,WAAYhC,EAAMyC,kBAClBC,eAAgB3C,EAAM4C,WAM1B,OAHAf,EAAOvjB,OAAOukB,QAAQhB,GAIlBjd,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAOE,MAAO,CAAE6J,gBAAiB,OAAQvF,QAAS,GAAI+F,MAAON,EAAYlB,aACrErJ,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMC,WAAS,GAEV0c,EAAKxb,IAAI,SAAAyc,GAAG,OACTle,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACqE,GAAI,IACrB5E,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,EAAGH,MAAOgK,EAAWU,SAA5C,GAAA/P,OAAyD+iB,EAAI,GAAGC,QAAQ,KAAM,KAA9E,OACAne,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,EAAGH,MAAOgK,EAAWtJ,MAAOgd,EAAI,OAG/Dle,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,MACAN,EAAAnG,EAAAoG,cAAA,WACAD,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACqE,GAAI,GAAIwZ,MAAO,GAAIzZ,QAAQ,SAASD,WAAW,UAChE1E,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GACX5E,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAkB+d,UAAW,GAAIzY,UAAU,wBACvCD,QAAQ,SACRzH,MAAO2f,EAASE,eAChBhB,KAAK,MACLvc,MAAO,CACHqK,MACIN,EAAYlB,eAG5BrJ,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GACX5E,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAkB+d,UAAW,GAAIzY,UAAU,wBACvCD,QAAQ,SACRzH,MAAO2f,EAASR,WAChBN,KAAK,MAAMvc,MAAO,CACdqK,MACIN,EAAYlB,eAG5BrJ,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GACX5E,EAAAnG,EAAAoG,cAAA,oBAAY4d,EAASE,eAArB,MAEJ/d,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GACX5E,EAAAnG,EAAAoG,cAAA,2BAAmB4d,EAASR,WAA5B,+BCzaXiB,GAAb,SAAArf,GACI,SAAAqf,EAAYpf,GAAO,IAAAC,EAAA,OAAAzF,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAA4iB,IACfnf,EAAAzF,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAA4kB,GAAA/e,KAAA7D,KAAMwD,KAMVwP,gBAAkB,SAAAxF,GACd/J,EAAKO,SAAS,CACV6e,gBAAgB,EAChB5X,cAAeuC,KAVJ/J,EAanBmC,KAAO,aAXHnC,EAAKS,MAAQ,CACT2e,gBAAgB,EAChB5X,cAAe,IAJJxH,EADvB,OAAAzF,OAAAmG,EAAA,EAAAnG,CAAA4kB,EAAArf,GAAAvF,OAAAoG,EAAA,EAAApG,CAAA4kB,EAAA,EAAArgB,IAAA,SAAAC,MAAA,WAkBQ,OACI8B,EAAAnG,EAAAoG,cAACqN,EAAA,iBAAD,CAAkBuI,MAAOtM,GACzBvJ,EAAAnG,EAAAoG,cAAA,OAAK2F,UAAU,mBACX5F,EAAAnG,EAAAoG,cAAC6V,GAAD,CAAYnW,OAAO,aAAa2B,KAAM5F,KAAK4F,OAC3CtB,EAAAnG,EAAAoG,cAAA,WAAS2F,UAAU,mBAEXlK,KAAKkE,MAAM2e,eAAiBve,EAAAnG,EAAAoG,cAACue,GAAD,CAAkB7X,cAAejL,KAAKkE,MAAM+G,gBACpE3G,EAAAnG,EAAAoG,cAACwe,GAAD,CAAmB/P,gBAAiBhT,KAAKgT,yBAzBrE4P,EAAA,CAAgCtd,aAkC1B0d,eACF,SAAAA,EAAYxf,GAAO,IAAAmC,EAAA,OAAA3H,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAAgjB,IACfrd,EAAA3H,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAAglB,GAAAnf,KAAA7D,KAAMwD,KASVoC,KAVmB5H,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAUZ,SAAAC,IAAA,IAAAwH,EAAA,OAAA3H,EAAAC,EAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACesC,EAAc,OAAQ,aAAc,IADnD,OACGwE,EADHhH,EAAAa,KAEHiG,EAAK3B,SAAS,CACVif,kBAAmBpd,EAAI4P,YAAYwN,kBACnCC,cAAerd,EAAI4P,YAAYyN,gBAJhC,wBAAArkB,EAAAkB,SAAA1B,EAAA2B,SARH2F,EAAKzB,MAAQ,CACT+e,kBAAmB,GACnBC,cAAe,IAJJvd,mFAQf3F,KAAK4F,wCAUA,IAAAmD,EAAA/I,KACL,OACIsE,EAAAnG,EAAAoG,cAACD,EAAAnG,EAAMwG,SAAP,KACIL,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAgBE,MAAOgK,EAAWkB,UAAWqK,iBAAe,GACxD/V,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAuB0V,WAAYhW,EAAAnG,EAAAoG,cAACgW,GAAApc,EAAD,CAAgB2G,MAAOgK,EAAWmB,UACjE3L,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAYE,MAAOgK,EAAWmB,QAAQ3L,EAAAnG,EAAAoG,cAAA,KAAG2F,UAAU,wBAAnD,+BAEJ5F,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KACIN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMC,WAAS,EAACgR,QAAS,IAEjB7V,KAAKkE,MAAMgf,cAAcnd,IAAI,SAAAqQ,GAAI,OAAI9R,EAAAnG,EAAAoG,cAAC8R,EAAD,CAAgB9T,IAAK6T,EAAKnQ,IAC3D8M,iBAAiB,EACjBjL,aAAcsO,EAAKtO,aACnBlC,KAAMmD,EAAKnD,KACXqC,gBAAiBmO,EAAKnO,gBACtBD,KAAMoO,EAAKpO,KACXyC,MAAO2L,EAAK3L,MACZ0I,kBAAmBiD,EAAKlL,QAAQjI,OAChC8E,UAAWqO,EAAKrO,UAChBf,cAAeoP,EAAKpP,cACpBoM,MAAOgD,EAAKvO,QACZmL,gBAAiBjK,EAAKvF,MAAMwP,gBAC5B/H,cAAemL,EAAKnQ,WAKxC3B,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAgBE,MAAOgK,EAAWkB,UAAWqK,iBAAe,GACxD/V,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAuB0V,WAAYhW,EAAAnG,EAAAoG,cAACgW,GAAApc,EAAD,CAAgB2G,MAAOgK,EAAWmB,UACjE3L,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAYE,MAAOgK,EAAWmB,QAAQ3L,EAAAnG,EAAAoG,cAAA,KAAG2F,UAAU,mBAAnD,qBAEJ5F,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KACIN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMC,WAAS,EAACgR,QAAS,IAEjB7V,KAAKkE,MAAM+e,kBAAkBld,IAAI,SAAAqQ,GAAI,OAAI9R,EAAAnG,EAAAoG,cAAC8R,EAAD,CAAgB9T,IAAK6T,EAAKnQ,IAC/D8M,iBAAiB,EACjBjL,aAAcsO,EAAKtO,aACnB2C,MAAO2L,EAAK3L,MACZ7E,KAAMmD,EAAKnD,KACXqC,gBAAiBmO,EAAKnO,gBACtBD,KAAMoO,EAAKpO,KACXmL,kBAAmBiD,EAAKlL,QAAQjI,OAChC8E,UAAWqO,EAAKrO,UAChBf,cAAeoP,EAAKpP,cACpBoM,MAAOgD,EAAKvO,QACZmL,gBAAiBjK,EAAKvF,MAAMwP,gBAC5B/H,cAAemL,EAAKnQ,mBAjExBX,aA2E1B6d,eACF,SAAAA,EAAY3f,GAAO,IAAAqH,EAAA,OAAA7M,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAAmjB,IACftY,EAAA7M,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAAmlB,GAAAtf,KAAA7D,KAAMwD,KAqBVoC,KAtBmB5H,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAsBZ,SAAAoC,IAAA,IAAAqF,EAAAoC,EAAAD,EAAAkD,EAAAkY,EAAAC,EAAA5R,EAAA6R,EAAA7Y,EAAA7D,EAAA2c,EAAA3b,EAAAZ,EAAA,OAAA9I,EAAAC,EAAAS,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cAAA0B,EAAA1B,KAAA,EACesC,EAAc,OAAD,cAAA5B,OAAuBoL,EAAK3G,MAAM+G,eAAiB,IAD/E,OAEH,KADMpF,EADHpF,EAAAf,MAEKC,OAAS,QACLsI,EAAkGpC,EAAlGoC,gBAAgBD,EAAkFnC,EAAlFmC,KAAMkD,EAA4ErF,EAA5EqF,QAASkY,EAAmEvd,EAAnEud,OAAQC,EAA2Dxd,EAA3Dwd,OAAQ5R,EAAmD5L,EAAnD4L,IAAK6R,EAA8Czd,EAA9Cyd,SAAS7Y,EAAqC5E,EAArC4E,MAAM7D,EAA+Bf,EAA/Be,kBAAkB2c,EAAa1d,EAAb0d,UACzF3b,EAAQ/B,EAAI+B,MAAM7E,MAAM,MAC5B8H,EAAK7G,SAAS,CACViE,kBAAgBD,OAAMkD,UAASkY,SAAQC,SAAQ5R,MAAK6R,WAAU1b,QAAM6C,QAAM7D,oBAAkB2c,cAE7F1d,EAAImB,eACH,IACQA,EAAgB1H,KAAKkkB,MAAM3d,EAAImB,eACnC6D,EAAK7G,SAAS,CAACgD,cAAcA,IAC/B,MAAMjD,IAZb,wBAAAtD,EAAAV,SAAAS,EAAAR,SAtBY6K,EAuCnBqI,eAAiB,SAAA1F,GAAE,sBAAA3M,EAAA7C,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAI,SAAA0C,EAAMiD,GAAN,OAAA7F,EAAAC,EAAAS,KAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,cACnBa,QAAQC,IAAI2N,GADOzM,EAAAhC,KAAA,EAEDsC,EAAc,OAAD,mBAA6B,CAAE4J,cAAeJ,EAAK3G,MAAM+G,gBAFrE,OAGA,OAHAlK,EAAArB,KAGXC,QACJ4I,MAAM,gDACNsC,EAAK7G,SAAS,CAACuf,WAAU,IACzB1Y,EAAKjF,SAEL2C,MAAM,4CACNsC,EAAK7G,SAAS,CAACuf,WAAU,KATV,wBAAAxiB,EAAAhB,SAAAe,EAAAd,SAAJ,gBAAAC,GAAA,OAAAY,EAAAT,MAAAJ,KAAAK,YAAA,IAvCAwK,EAmDnB4Y,UAAY,SAAChP,EAAOjS,GAChBqI,EAAK7G,SAAS,CAAE0f,MAAOlhB,KApDRqI,EAsDnB8Y,kBAAoB,SAACC,GAEjB/Y,EAAK7G,SAAS,CAAE0f,MAAOE,KAtDvB/Y,EAAK3G,MAAQ,CACT+G,cAAeJ,EAAKrH,MAAMyH,cAC1BjD,KAAM,GACNkD,QAAS,GACTkY,OAAQ,GACRnb,gBAAgB,GAChBob,OAAQ,GACR5R,IAAK,GACL7J,MAAO,GACP0b,SAAU,GACVI,MAAO,EACPjZ,MAAM,GACNzD,cAAc,GACdJ,mBAAkB,EAClB2c,WAAU,GAhBC1Y,mFAoBf7K,KAAK4F,wCAsCA,IAAAiG,EAAA7L,KACL,OACIsE,EAAAnG,EAAAoG,cAACD,EAAAnG,EAAMwG,SAAP,KACIL,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMC,WAAS,EAACoE,QAAQ,SAASD,WAAW,UACxC1E,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,EAAGJ,WAAS,EAACoE,QAAQ,SAASD,WAAW,UAC5D1E,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAME,MAAO,CAAEI,MAAO,OAAQiE,OAAQ,SAClC7E,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,KACIN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CACIE,MAAO,CAAEuF,OAAQ,KACjBI,MAAQzK,KAAKkE,MAAMuG,OAA2B,IAAlBzK,KAAKkE,MAAMuG,MAAhC,GAAAhL,OAAgD7B,EAAhD,kBAAA6B,OAA4EO,KAAKkE,MAAMuG,OAAvF,GAAAhL,OAAkG7B,EAAlG,YAAA6B,OAAwHO,KAAKkE,MAAM8D,KAAKyC,OAC/IkO,MAAO3Y,KAAKkE,MAAM8D,KAAKpF,OAE3B0B,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAaE,MAAK9G,OAAAye,GAAA,EAAAze,CAAA,GAAO8Q,EAAWF,MAAlB,CAAyBO,MAAON,EAAYlB,cAC1DrJ,EAAAnG,EAAAoG,cAAA,UAAKvE,KAAKkE,MAAM+D,iBAAmBjI,KAAKkE,MAAM8D,KAAKpF,SAI/D0B,EAAAnG,EAAAoG,cAACsf,GAAD,CAAmB3Y,QAASlL,KAAKkE,MAAMgH,WAE3C5G,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,EAAGH,MAAO,CAAEsE,QAAS,KACxC9E,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAOE,MAAK9G,OAAAye,GAAA,EAAAze,CAAA,GAAO8Q,EAAWF,QAC1BtK,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAQwF,SAAS,SAAStF,MAAO,CAAE6J,gBAAiB,SAChDrK,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMpC,MAAOxC,KAAKkE,MAAMwf,MAAOla,SAAUxJ,KAAKyjB,UAAWK,eAAe,UAAU3V,UAAU,WACxF7J,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAKpC,MAAO,EAAG+G,MAAM,OAAOzE,MAAO,CAAEqK,MAA4B,IAArBnP,KAAKkE,MAAMwf,MAAc7U,EAAYlB,WAAakB,EAAYjB,SAC1GtJ,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAKpC,MAAO,EAAG+G,MAAM,QAAQzE,MAAO,CAAEqK,MAA4B,IAArBnP,KAAKkE,MAAMwf,MAAc7U,EAAYlB,WAAakB,EAAYjB,SAE1G5N,KAAKkE,MAAM8C,cAAcjB,IAAI,SAACge,EAAOH,GAAR,OAC1Btf,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAKrC,IAAKwhB,EAAOhd,SAAUvE,MAAOohB,EAAQ,EAAGra,MAAOwa,EAAO/Z,WAAYlF,MAAO,CAAEqK,MAAOtD,EAAK3H,MAAMwf,QAAUK,EAAOhd,SAAW8H,EAAYlB,WAAakB,EAAYjB,aAI/KtJ,EAAAnG,EAAAoG,cAACyf,GAAA7lB,EAAD,CACIylB,MAAO5jB,KAAKkE,MAAMwf,MAClBO,cAAejkB,KAAK2jB,mBAExBrf,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAO,CAACsE,QAAS,IAC7B9E,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,EAAGH,MAAO,CAACqK,MAAON,EAAYlB,aAArD,iBACArJ,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,EAAGH,MAAO,CAACqK,MAAON,EAAYjB,QAAS5N,KAAKkE,MAAM+G,eACzE3G,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,EAAGH,MAAO,CAACqK,MAAON,EAAYlB,aAArD,QACArJ,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,EAAGH,MAAO,CAACqK,MAAON,EAAYjB,QAAS5N,KAAKkE,MAAM8D,KAAKpF,MAC9E0B,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,EAAGH,MAAO,CAACqK,MAAON,EAAYlB,aAArD,aACArJ,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,EAAGH,MAAO,CAACqK,MAAON,EAAYjB,QAAS5N,KAAKkE,MAAMuN,IAAzE,OACAnN,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,EAAGH,MAAO,CAACqK,MAAON,EAAYlB,aAArD,eACArJ,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,EAAGH,MAAO,CAACqK,MAAON,EAAYjB,QAAS5N,KAAKkE,MAAMkf,OAAzE,OACA9e,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,EAAGH,MAAO,CAACqK,MAAON,EAAYlB,aAArD,gBACArJ,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,EAAGH,MAAO,CAACqK,MAAON,EAAYjB,QAAS5N,KAAKkE,MAAMmf,OAAzE,OACA/e,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,EAAGH,MAAO,CAACqK,MAAON,EAAYlB,aAArD,uBACArJ,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,EAAGH,MAAO,CAACqK,MAAON,EAAYjB,QAAS5N,KAAKkE,MAAMof,UACzEhf,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,EAAGH,MAAO,CAACqK,MAAON,EAAYlB,aAArD,kBACArJ,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,EAAGH,MAAO,CAACqK,MAAON,EAAYjB,QAAS5N,KAAKkE,MAAMgH,QAAQjI,SAC/EjD,KAAKkE,MAAMqf,WACTjf,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACkE,GAAI,GAAIjE,GAAI,EAAGH,MAAO,CAACqK,MAAON,EAAYjB,QACjDtJ,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAQE,MAAO,CAAEqK,MAAON,EAAYqV,KAAMxU,WAAY,UAAYrK,QAASrF,KAAKkT,eAAelT,KAAKkE,MAAM+G,gBAA1G,qBAMZ3G,EAAAnG,EAAAoG,cAAA,OAAKO,MAAO,CAACqK,MAAON,EAAYjB,MAAOxE,QAAS,IAC/CpJ,KAAKkE,MAAM0D,MAAM7B,IAAK,SAACgU,EAAG/W,GAAJ,OAAWsB,EAAAnG,EAAAoG,cAAA,OAAKhC,IAAKS,GAAI+W,MAE/C/Z,KAAKkE,MAAM8C,cAAcjB,IAAI,SAACge,EAAOH,GAAR,OAC1Btf,EAAAnG,EAAAoG,cAAA,OAAKO,MAAO,CAACqK,MAAON,EAAYjB,MAAOxE,QAAS,IAC/C2a,EAAOI,iBAMgB,GAA/BnkB,KAAKkE,MAAM0C,mBACZtC,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAOE,MAAK9G,OAAAye,GAAA,EAAAze,CAAA,GACL8Q,EAAWF,MADN,CACaxF,QAAS,GAAIiB,OAAQ,OAC1CwO,UAAW,GAAIuD,UAAW,OAC1BxL,QAAS,OAAQC,eAAgB,SAAU7H,WAAY,YAGvD1E,EAAAnG,EAAAoG,cAAC6f,GAAD,CAAmBnZ,cAAejL,KAAKwD,MAAMyH,2BAvI1C3F,aAmJzB+e,eACF,SAAAA,EAAY7gB,GAAO,IAAA4I,EAAA,OAAApO,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAAqkB,IACfjY,EAAApO,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAAqmB,GAAAxgB,KAAA7D,KAAMwD,KASVoC,KAVmB5H,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAUZ,SAAAmD,IAAA,IAAAsE,EAAA,OAAA3H,EAAAC,EAAAS,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,cAAAyC,EAAAzC,KAAA,EACesC,EAAc,OAAD,sBAAA5B,OAA+B2M,EAAK5I,MAAMyH,eAAiB,IADvF,OACGpF,EADHrE,EAAA9B,KAEH0M,EAAKpI,SAAS,CACVsgB,QAASze,EAAIye,QAAQC,KACrBC,OAAQ3e,EAAIye,QAAQE,SAExB5U,OAAO6U,EAAE,sBAAsBC,SAAS,CACpCC,OAAQvY,EAAKlI,MAAMsgB,OACnBA,OAAQpY,EAAKlI,MAAMogB,QACnBM,YAAa,QACbC,aAAc,OACdC,aAAc,MACdC,UAAW,OACXC,mBAAoB,QACpBC,gBAAiBpW,EAAYjB,MAC7BsX,qBAAsB,MACtBC,oBAAqB,QAhBtB,wBAAA3jB,EAAAzB,SAAAwB,EAAAvB,SARHoM,EAAKlI,MAAQ,CACTogB,QAAS,GACTE,OAAQ,IAJGpY,mFAQfpM,KAAK4F,wCAsBL,OACItB,EAAAnG,EAAAoG,cAACD,EAAAnG,EAAMwG,SAAP,KACIL,EAAAnG,EAAAoG,cAAA,OAAKiJ,GAAG,8BAjCQlI,aAuC1B8f,oLAEE,OACI9gB,EAAAnG,EAAAoG,cAACD,EAAAnG,EAAMwG,SAAP,KACIL,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAME,MAAK9G,OAAAye,GAAA,EAAAze,CAAA,GAAO8Q,EAAWF,MAAlB,CAAyB1J,MAAO,OAAQiE,OAAQ,SACvDuT,UAAWpY,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAe2W,UAAU,MAAMzW,MAAO,CAAEqK,MAAON,EAAYlB,aAA3D,0BAEV3N,KAAKwD,MAAM0H,QAAQnF,IAAI,SAAAsf,GAAM,OAC1B/gB,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAU2F,QAAM,EAAChI,IAAK8iB,EAAOpf,KACzB3B,EAAAnG,EAAAoG,cAAA,OAAKO,MAAO,CAAE8L,QAAS,OAAQ5H,WAAY,WACvC1E,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CACIiN,IAAKwT,EAAO3Z,UACZlB,IAAG,GAAA/K,OAAK7B,EAAL,SAAA6B,OAAwB4lB,EAAOxO,OAA/B,KAAApX,OAAyC4lB,EAAO5a,SAEvDnG,EAAAnG,EAAAoG,cAAA,QAAMO,MAAO,CAAEgM,UAAW,SAAU3B,MAAON,EAAYjB,MAAOqB,WAAY,KAAOoW,EAAO3Z,wBAdxFpG,aC/SnBggB,GAAb,SAAA/hB,GAAA,SAAA+hB,IAAA,OAAAtnB,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAAslB,GAAAtnB,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAAsnB,GAAAllB,MAAAJ,KAAAK,YAAA,OAAArC,OAAAmG,EAAA,EAAAnG,CAAAsnB,EAAA/hB,GAAAvF,OAAAoG,EAAA,EAAApG,CAAAsnB,EAAA,EAAA/iB,IAAA,SAAAC,MAAA,WAEQ,OACI8B,EAAAnG,EAAAoG,cAACqN,EAAA,iBAAD,CAAkBuI,MAAOtM,GACzBvJ,EAAAnG,EAAAoG,cAAA,OAAK2F,UAAU,eACX5F,EAAAnG,EAAAoG,cAAC6V,GAAD,CAAYnW,OAAO,WACnBK,EAAAnG,EAAAoG,cAAA,WAAS2F,UAAU,mBACf5F,EAAAnG,EAAAoG,cAACK,EAAA,EAAD,CAAOsF,UAAU,SACb5F,EAAAnG,EAAAoG,cAAA,MAAIO,MAAO,CAACqK,MAAON,EAAYjB,QAAQtJ,EAAAnG,EAAAoG,cAAA,KAAG2F,UAAU,qBAApD,eACA5F,EAAAnG,EAAAoG,cAAA,OAAKO,MAAO,CAAEI,MAAO,OAAQkX,UAAW,WACxC9X,EAAAnG,EAAAoG,cAACghB,GAAD,eAVxBD,EAAA,CAA4BhgB,aCPfkgB,GAAb,SAAAjiB,GAAA,SAAAiiB,IAAA,OAAAxnB,OAAA0F,EAAA,EAAA1F,CAAAgC,KAAAwlB,GAAAxnB,OAAA2F,EAAA,EAAA3F,CAAAgC,KAAAhC,OAAA4F,EAAA,EAAA5F,CAAAwnB,GAAAplB,MAAAJ,KAAAK,YAAA,OAAArC,OAAAmG,EAAA,EAAAnG,CAAAwnB,EAAAjiB,GAAAvF,OAAAoG,EAAA,EAAApG,CAAAwnB,EAAA,EAAAjjB,IAAA,SAAAC,MAAA,WAEQ,OACI8B,EAAAnG,EAAAoG,cAAA,OAAK2F,UAAU,QAAf,oBAHZsb,EAAA,CAA8BlgB,kCCCxBmgB,GAAa,CACfC,iBAAmB,CACfxgB,MAAQ,MACRmF,OAAS,OACTsb,SAAW,SACX/U,QAAS,OACT5H,WAAa,UAEjBoS,OAAS,CACLlW,MAAO,QACPmF,OAAQ,OACRuG,QAAS,OACTgV,cAAe,SACf/U,eAAiB,gBACjB7H,WAAa,UAEjBsb,QAAU,CACNuB,KAAM,EACN3gB,MAAO,OACP4gB,OAAQ,kBACRlV,QAAS,OACTC,eAAgB,SAChB7H,WAAa,UAEjB0W,MAAQ,CACJ/Q,gBAAkB,OAClBQ,MAAO,OACPjK,MAAO,IACPmF,OAAQ,GACR0b,UAAW,0BAiDbC,IA7CiC1gB,6LA+C/B,OACIhB,EAAAnG,EAAAoG,cAAA,OAAK2F,UAAW+b,KAAa3B,iBAHnBhf,cC5CP4gB,oLAnBX,OACE5hB,EAAAnG,EAAAoG,cAAC4hB,EAAA,EAAD,KACE7hB,EAAAnG,EAAAoG,cAAC6hB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAI/K,UAAWrG,IACjC5Q,EAAAnG,EAAAoG,cAAC6hB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAAS/K,UAAWjY,IACtCgB,EAAAnG,EAAAoG,cAAC6hB,EAAA,EAAD,CAAOE,KAAK,aAAa/K,UAAWrC,KACpC5U,EAAAnG,EAAAoG,cAAC6hB,EAAA,EAAD,CAAOE,KAAK,WAAW/K,UAAWY,KAClC7X,EAAAnG,EAAAoG,cAAC6hB,EAAA,EAAD,CAAOE,KAAK,eAAe/K,UAAWe,KACtChY,EAAAnG,EAAAoG,cAAC6hB,EAAA,EAAD,CAAOE,KAAK,WAAW/K,UAAWgE,KAClCjb,EAAAnG,EAAAoG,cAAC6hB,EAAA,EAAD,CAAOE,KAAK,oBAAoB/K,UAAW6E,KAC3C9b,EAAAnG,EAAAoG,cAAC6hB,EAAA,EAAD,CAAOE,KAAK,cAAc/K,UAAWqH,KACrCte,EAAAnG,EAAAoG,cAAC6hB,EAAA,EAAD,CAAOE,KAAK,UAAU/K,UAAW+J,KACjChhB,EAAAnG,EAAAoG,cAAC6hB,EAAA,EAAD,CAAOG,KAAK,aAAahL,UAAW+B,KACpChZ,EAAAnG,EAAAoG,cAAC6hB,EAAA,EAAD,CAAO7K,UAAWiK,aAdRlgB,aCJEkhB,QACW,cAA7B5W,OAAOyO,SAASoI,UAEe,UAA7B7W,OAAOyO,SAASoI,UAEhB7W,OAAOyO,SAASoI,SAAS/G,MACvB,0ECXNgH,IAASC,OACLriB,EAAAnG,EAAAoG,cAACqiB,GAAA,EAAD,KACEtiB,EAAAnG,EAAAoG,cAACsiB,GAAD,OAEDpkB,SAASqkB,eAAe,SDsHvB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,mCEnInB5qB,EAAAC,QAAiBiB,EAAAC,EAAuB","file":"static/js/main.4509ab56.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Prev\":\"Bracket_Prev__1x7b0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavProfileCard\":\"Navigation_NavProfileCard__2aSZZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cCard\":\"Cards_cCard__19KLI\",\"bCard\":\"Cards_bCard__1dVfm\",\"gameCard\":\"Cards_gameCard__aT-j6\",\"priceConsole\":\"Cards_priceConsole__F8qzx\",\"firstpart\":\"Cards_firstpart__aWvyf\",\"secondpart\":\"Cards_secondpart__1unAw\",\"torurmant\":\"Cards_torurmant__18jr2\",\"gameitem\":\"Cards_gameitem__3s31x\",\"vs\":\"Cards_vs__11UKN\",\"clearfix\":\"Cards_clearfix__1O5xf\",\"torurmantBet\":\"Cards_torurmantBet__oSjp3\",\"torurmantDes\":\"Cards_torurmantDes__1rm-T\",\"gamename\":\"Cards_gamename__1vWDK\",\"gameCardOn\":\"Cards_gameCardOn__2jVHR\"};","module.exports = __webpack_public_path__ + \"static/media/8ball.c285721f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chess.708c03cc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/vbg1.75071ebe.png\";","module.exports = __webpack_public_path__ + \"static/media/sword.c7cab733.svg\";","// const config = require('./config.json')(process.env.REACT_APP_ENV || 'dev'); \nimport {config} from \"./config\";\nlet constant = config[process.env.REACT_APP_ENV || 'prod'];\nexport const HostAddress = constant.host; \n\n\nexport const JsonQuery = async (type, url, info) => {\n    const settings = {\n        method: type,\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n        credentials: 'same-origin'\n    };\n\n    if (type === 'post') settings.body = JSON.stringify(info)\n\n    const response = await fetch(`${HostAddress}api/${url}`, settings)\n    if (response.status !== 200) {\n        console.log(`unable to query:${url}`)\n        return { status: 100 }\n    }\n    const json = await response.json()\n    return json\n}\n\nexport const PostQuery = async (url, body) => {\n    const settings = {\n        method: 'POST',\n        headers: {\n        },\n        credentials: 'same-origin',\n        body: body\n    };\n    const response = await fetch(`${HostAddress}api/${url}`, settings)\n    if (response.status !== 200) {\n        console.log(`unable to query:${url}`)\n        return { status: 100 }\n    }\n    const json = await response.json()\n    return json\n}\n\n\nexport const JsonQueryAdmin = async (type, url, info) => {\n    const settings = {\n        method: type,\n        mode: \"cors\", // no-cors, cors, *same-origin\n        cache: \"no-cache\",\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n        credentials: 'same-origin',\n        body: JSON.stringify(info)\n    };\n\n    const response = await fetch(`${HostAddress}api/${url}`, settings)\n    if (response.status !== 200) {\n        console.log(`unable to query:${url}`)\n        return { status: 100 }\n    }\n    const json = await response.json()\n    return json\n}\n\n\nexport const JsonQueryAuth = async (type, url, info) => {\n    const settings = {\n        method: type,\n        mode: \"cors\", // no-cors, cors, *same-origin\n        cache: \"no-cache\",\n        headers: {\n            Accept: 'application/json',\n            'logautx' : `${getCookie('logautx')}`,\n            'logauty' : `${getCookie('logauty')}`,\n            'logauti' : `${getCookie('logauti')}`,\n            'Content-Type': 'application/json',\n        },\n        credentials: 'same-origin',\n        body: JSON.stringify(info)\n    };\n\n    const response = await fetch(`${HostAddress}api/${url}`, settings)\n    if (response.status !== 200) {\n        console.log(`unable to query:${url}`)\n        return { status: 100 }\n    }\n    const json = await response.json()\n    return json\n}\n\nexport const PostQueryAuth = async ( url, body) => {\n    const settings = {\n        method: 'POST',\n        mode: \"cors\", // no-cors, cors, *same-origin\n        cache: \"no-cache\",\n        headers: {\n            'logautx' : `${getCookie('logautx')}`,\n            'logauty' : `${getCookie('logauty')}`,\n            'logauti' : `${getCookie('logauti')}`\n        },\n        credentials: 'same-origin',\n        body: body\n    };\n\n    const response = await fetch(`${HostAddress}api/${url}`, settings)\n    if (response.status !== 200) {\n        console.log(`unable to query:${url}`)\n        return { status: 100 }\n    }\n    const json = await response.json()\n    return json\n}\n\nexport const AuthData = () => {\n    return {\n        logautx: getCookie('logautx'),\n        logauty: getCookie('logauty'),\n        logauti: getCookie('logauti')\n    }\n}\n\nexport const SetCookie = (key, value) => {\n    document.cookie = `${key}=${value};`;\n}\nexport const getCookie = (cname) => {\n    var name = cname + \"=\";\n    var decodedCookie = decodeURIComponent(document.cookie);\n    var ca = decodedCookie.split(';');\n    for (var i = 0; i < ca.length; i++) {\n        var c = ca[i];\n        while (c.charAt(0) == ' ') {\n            c = c.substring(1);\n        }\n        if (c.indexOf(name) == 0) {\n            return c.substring(name.length, c.length);\n        }\n    }\n    return \"\";\n}","export const config = {\n    \"dev\":{\n        \"host\" : \"http://localhost:3001/\"\n    },\n    \"prod\":{\n        \"host\" : \"http://159.89.163.24/\"\n    }\n}","import React, { Component } from 'react'\n\nimport { PostQuery, JsonQueryAdmin, HostAddress } from '../Services/Query'\n\nimport { Grid, Paper, } from '@material-ui/core'\nimport { Menu, MenuItem, MenuList, List, ListItem, ListItemText, Avatar,Select,Input,InputLabel } from '@material-ui/core'\nimport { TextField, Button, LinearProgress,Checkbox } from '@material-ui/core'\nimport ImageUploader from 'react-images-upload'\n\n\nexport class Admin extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            active : 'games'\n        }\n    }\n    setActive = name => e => {\n        this.setState({\n            active : name\n        })\n    }\n\n\n    render() {\n\n        let panel\n        switch(this.state.active) {\n            case 'games':\n            panel = <GameMenu />\n            break;\n            case 'tournaments':\n            panel = <TournamentMenu />\n            break;\n            case 'assign player':\n            panel = <AssignMenu />\n            break;\n        }\n\n        return (\n            <React.Fragment>\n                <Grid container style={{ minHeight: '100vh' }}>\n                    <Grid item container md={3}>\n                        <Paper style={{ width: '100%' }}>\n                            <MenuList >\n                                <MenuItem >\n                                    <ListItemText inset primary=\"games\" onClick={this.setActive('games')}/>\n                                </MenuItem>\n                                <MenuItem >\n                                    <ListItemText inset primary=\"tournaments\" onClick={this.setActive('tournaments')}/>\n                                </MenuItem>\n                                <MenuItem >\n                                    <ListItemText inset primary=\"assign player\" onClick={this.setActive('assign player')}/>\n                                </MenuItem>\n                                <MenuItem >\n                                    <ListItemText inset primary=\"descitions\" />\n                                </MenuItem>\n                                <MenuItem >\n                                    <ListItemText inset primary=\"Inbox\" />\n                                </MenuItem>\n                            </MenuList>\n                        </Paper>\n                    </Grid>\n                    <Grid item container md={9}>\n                        {panel}\n                    </Grid>\n                </Grid>\n            </React.Fragment>\n        )\n    }\n}\n\nconst PlayerCounts = [\n    { text: '4', value: 4 },\n    { text: '8', value: 8 },\n    { text: '16', value: 16 },\n    { text: '32', value: 32 },\n]\nconst Balances = [10, 20, 50, 100, 200, 500]\n\nclass TournamentMenu extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isCalling: false,\n            player_counts: PlayerCounts,\n            entry_fee:'',\n            balances: Balances,\n            games: [],\n            tournaments_ongoing: [],\n            tournaments_yet_to_start: [],\n            game: '',\n            player_count: 4,\n            balance: 10,\n            rules: '',\n            tournament_name:'',\n            msg_tournament_game_id: '',\n            msg_tournament_player_count: '',\n            msg_tournament_balance: '',\n            msg_tournament_rules: '',\n            msg_tournament_entry_fee: '',\n            msg_tournament_tournament_name:'',\n            tournament_image:'',\n            custom_fields:[],\n            is_bracket_needed:true\n        }\n    }\n    componentDidMount() {\n        this.load()\n    }\n    load = async () => {\n        const res = await JsonQueryAdmin('post', 'admin/tournament', {})\n        console.log(res)\n        if (res.status === 'ok') {\n\n            this.setState({\n                games: res.games.map(g => {\n                    return {\n                        text: g.name,\n                        value: g._id\n                    }\n                }),\n                tournaments_ongoing: res.tournaments_ongoing,\n                tournaments_yet_to_start: res.tournaments_yet_to_start\n            })\n        }\n    }\n    clearMsg = () => {\n        this.setState({\n            msg_tournament_game_id: '',\n            msg_tournament_player_count: '',\n            msg_tournament_balance: '',\n            msg_tournament_rules: '',\n            msg_tournament_entry_fee: ''\n        });\n    }\n    handleChange = name => e => {\n        if(name == \"is_bracket_needed\") {\n            this.setState({\n                [name]: !this.state.is_bracket_needed\n            })\n        } else {\n            this.setState({\n                [name]: e.target.value\n            })\n        }\n    }\n    handleChangeCustomFields = (e,name,field_id) => {\n        for(var i=0;i<this.state.custom_fields.length;i++) {\n            if(this.state.custom_fields[i].field_id == field_id) {\n                this.state.custom_fields[i][name] = e.target.value;\n            }\n        }\n        this.setState({\n            custom_fields: this.state.custom_fields\n        })\n    }\n    onDrop = picture => {\n        this.setState({\n            tournament_image: picture,\n        });\n        console.log(picture)\n    }\n    onFileUpload = e => {\n        this.setState({\n            tournament_image: e.target.files[0]\n        })\n    }\n    addTournament = async e => {\n        e.preventDefault();\n        this.setState({ isCalling: true })\n        // const {game, rules, balance, player_count,entry_fee,tournament_image } = this.state\n        let fd = new FormData()\n        fd.append('image', this.state.tournament_image)\n        fd.append('rules', this.state.rules)\n        fd.append('balance', this.state.balance)\n        fd.append('player_count', this.state.player_count)\n        fd.append('entry_fee', this.state.entry_fee)\n        fd.append('game_id', this.state.game)\n        fd.append('custom_fields',JSON.stringify(this.state.custom_fields))\n        fd.append('is_bracket_needed',this.state.is_bracket_needed)\n        fd.append('tournament_name',this.state.tournament_name)\n\n        \n        const res = await PostQuery('admin/tournament/create', fd)\n\n        // const res = await JsonQueryAdmin('post','admin/tournament/create',{\n        //     game_id : game, rules, balance, player_count,entry_fee\n        // })\n        console.log('form submitted')\n        this.setState({ isCalling: false })\n        console.log(res);\n        this.clearMsg();\n        if (res.errors) {\n            res.errors.map(err => {\n                const fieldName = 'msg_tournament_' + err.param\n                this.setState({ [fieldName]: err.msg })\n            });\n        } else {\n            alert(\"Tournament created successfully\");\n            this.setState ({\n                game: '',\n                player_count: 4,\n                balance: 0,\n                rules: '',\n                entry_fee:'',\n                tournament_name:''\n            });\n            this.load();\n        }\n    }\n    addFields = e => {\n        this.state.custom_fields.push({field_id: Date.now()});\n        this.setState ({\n            custom_fields:this.state.custom_fields\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Grid container alignItems='center' justify='center'>\n                    <Grid item xs={12}>\n                        <Paper style={{ margin: '20px', padding: '20px' }}>\n                            <h2>Add Tournament</h2>\n                            {this.state.isCalling ? <LinearProgress /> : ''}\n                            <form onSubmit={this.addTournament} encType=\"multipart/form-data\">\n                           \n                                <Grid container alignItems='center' justify='center'>\n                                <Grid item xs={12} md={6} >\n                                        <TextField style={{ margin: '1vw', width: '90%' }}\n                                            label=\"Tournament Name\"\n                                            value={this.state.tournament_name}\n                                            onChange={this.handleChange('tournament_name')}\n                                            helperText={this.state.msg_tournament_tournament_name}\n                                            error={this.state.msg_tournament_tournament_name.length > 0}\n                                        >\n                                            \n                                        </TextField>\n                                    </Grid>\n                                    <Grid item xs={12} md={6} >\n                                        <TextField style={{ margin: '1vw', width: '90%' }}\n                                            select\n                                            label=\"Select Game\"\n                                            value={this.state.game}\n                                            onChange={this.handleChange('game')}\n                                            helperText={this.state.msg_tournament_game_id}\n                                            error={this.state.msg_tournament_game_id.length > 0}\n                                        >\n                                            {this.state.games.map(option => (\n                                                <MenuItem key={option.value} value={option.value}>\n                                                    {option.text}\n                                                </MenuItem>\n                                            ))}\n                                        </TextField>\n                                    </Grid>\n                                    <Grid item xs={12} md={6} >\n                                        <TextField style={{ margin: '1vw', width: '90%' }}\n                                            select\n                                            label=\"Select Prize\"\n                                            value={this.state.balance}\n                                            onChange={this.handleChange('balance')}\n                                            helperText={this.state.msg_tournament_balance}\n                                            error={this.state.msg_tournament_balance.length > 0}\n                                        >\n                                            {this.state.balances.map(option => (\n                                                <MenuItem key={option} value={option}>\n                                                    {option} bp\n                                                </MenuItem>\n                                            ))}\n                                        </TextField>\n                                    </Grid>\n                                    <Grid item xs={12} md={6} >\n                                        <TextField style={{ margin: '1vw', width: '90%' }}\n                                            select\n                                            label=\"Player Count\"\n                                            value={this.state.player_count}\n                                            onChange={this.handleChange('player_count')}\n                                            helperText={this.state.msg_tournament_player_count}\n                                            error={this.state.msg_tournament_player_count.length > 0}\n                                        >\n                                            {this.state.player_counts.map(option => (\n                                                <MenuItem key={option.value} value={option.value}>\n                                                    {option.text}\n                                                </MenuItem>\n                                            ))}\n                                        </TextField>\n                                    </Grid>\n                                    <Grid item xs={12} md={6} >\n                                        <TextField style={{ margin: '1vw', width: '90%' }}\n                                            label=\"Entry Fee\"\n                                            value={this.state.entry_fee}\n                                            onChange={this.handleChange('entry_fee')}\n                                            helperText={this.state.msg_tournament_entry_fee}\n                                            error={this.state.msg_tournament_entry_fee.length > 0}\n                                        >\n                                            \n                                        </TextField>\n                                    </Grid>\n                                    <Grid item xs={12} md={6} >\n                                        <Checkbox \n                                            checked={this.state.is_bracket_needed}\n                                            onChange={this.handleChange('is_bracket_needed')}\n                                        > \n                                        </Checkbox>Is Bracket Needed                     \n                                    </Grid>\n                                    <Grid item xs={12} md={12} >\n                                        <TextField style={{ margin: '1vw', width: '90%' }}\n                                            multiline\n                                            label=\"Rules\"\n                                            margin=\"normal\"\n                                            value={this.state.rules}\n                                            onChange={this.handleChange('rules')}\n                                            helperText={this.state.msg_tournament_rules}\n                                            error={this.state.msg_tournament_rules.length > 0}\n                                        />\n                                    </Grid>\n                                    {this.state.custom_fields.map(field => (\n                                        <Grid item xs={12} md={12} key={field.field_id}>\n                                            <TextField style={{ margin: '1vw', width: '40%' }}\n                                                label=\"Field Label\"\n                                                value={field.label_name}\n                                                onChange={(e) => this.handleChangeCustomFields(e,'label_name',field.field_id)}\n                                            >\n                                            </TextField>\n                                            <TextField style={{ margin: '1vw', width: '40%' }}\n                                                label=\"Field Value\"\n                                                value={field.value}\n                                                onChange={(e) =>this.handleChangeCustomFields(e,'field_value',field.field_id)}\n                                            >\n                                            </TextField>\n                                        </Grid>\n                                    ))}\n                                    <Grid item xs={12}>\n                                        <Button onClick={(e) => this.addFields(e)} variant='outlined' style={{ margin: '1vw', width: '90%' }}>\n                                            <span> <i className=\"fas fa-plus\"></i>Add Custom Fields</span>\n                                        </Button>\n                                    </Grid>\n                                    <Grid item xs={12} md={6}>\n                                        <Button style={{ margin: '1vw', width: '90%' }}>\n                                            <input type='file'\n                                                style={{ width: '100%', opacity: 0, position: 'absolute' }}\n                                                onChange={this.onFileUpload} />\n                                            <span><i className=\"fas fa-upload\"></i> Upload Tournament Image</span>\n                                        </Button> \n                                    </Grid>\n                                    \n                                    <Grid item xs={12}>\n                                        <Button type='submit' variant='outlined' style={{ margin: '1vw', width: '90%' }}>\n                                            <span><i className=\"fas fa-upload\"></i> Add Tournament</span>\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </form>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Paper style={{ margin: '20px', padding: '20px' }}>\n                            <h2>Tournament List</h2>\n                            <List style={{ width: '100%', margin: '20px', height: '32vh', overflowY: 'scorll' }}>\n\n                                {\n                                    this.state.tournaments_yet_to_start.map(g => (\n                                        <ListItem button key={g._id}>\n                                            <Avatar style={{ height: '60px', width: '60px' }}>\n                                                <img src={`${HostAddress}gameimg/${g.game.image}`} style={{ height: '100%' }} />\n                                            </Avatar>\n                                            <ListItemText\n                                                primary={<span> {g.game.name} ({g.player_count} players) </span>}\n                                                secondary={<span> {g.game.platform ? 'mobile game' : 'pc game'} </span>} />\n                                        </ListItem>\n                                    ))\n                                }\n                            </List>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </React.Fragment>\n        )\n    }\n}\n\n\n\nclass AssignMenu extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isCalling: false,\n            selected_players:[],\n            userList:[],\n            tournaments_yet_to_start: [],\n            tournament_id:'',\n            msg_tournament_id: '',\n            name : [],\n            selected_tournament:{}\n        }\n    }\n    resetForm() {\n        this.setState({\n            isCalling: false,\n            selected_players:[],\n            tournaments_yet_to_start: [],\n            tournament_id:'',\n            msg_tournament_id: '',\n            name : [],\n            selected_tournament:{}\n        });\n        this.load();\n    }\n    componentDidMount() {\n       this.load();\n       this.loadUsers();\n    }\n    clearMsg() {\n        this.setState({ msg_tournament_id:''});\n    }\n    addPlayer = async e => {\n        e.preventDefault();\n        if(this.state.selected_players.length == 0 ){\n            alert(\"Please select players\");\n            return;\n        }\n        if(this.state.selected_tournament.player_count < this.state.selected_players.length) {\n            alert(\"Maximum player count for this tournament is \"+this.state.selected_tournament.player_count);\n            return false;\n        }\n        this.clearMsg();\n        this.setState({ isCalling: true });\n        const res = await JsonQueryAdmin('post', `admin/addPlayer`, { tournament_id: this.state.tournament_id,players:this.state.selected_players })\n        this.setState({\n            isCalling: false\n        });\n        if (res.errors) {\n            res.errors.map(err => {\n                const fieldName = 'msg_' + err.param\n                this.setState({ [fieldName]: err.msg })\n            });\n        } else {\n            if (res.status === 'ok') {\n                alert(res.msg);\n                this.resetForm();\n            } else {\n                \n                alert(\"Tournament is not valid/Capacity exceeds\");\n            }\n        }\n    }\n    handleChange = name => e => {\n        if(name == 'tournament_id') {\n            this.setState({selected_players:[],selected_tournament:{}});\n            for(var t=0;t<this.state.tournaments_yet_to_start.length;t++) {\n                 if(this.state.tournaments_yet_to_start[t]._id == e.target.value) {\n                     this.setState({selected_tournament:this.state.tournaments_yet_to_start[t]});\n                     if(this.state.tournaments_yet_to_start[t].players.length >0) {\n                         this.setState({selected_players:this.state.tournaments_yet_to_start[t].players});\n                     }\n                    break;\n                }\n        }\n        }\n        this.setState({\n            [name]: e.target.value\n        })\n    }\n    load = async () => {\n        const res = await JsonQueryAdmin('post', 'admin/tournament', {})\n        console.log(res)\n        if (res.status === 'ok') {\n\n            this.setState({\n               tournaments_yet_to_start: res.tournaments_yet_to_start\n            })\n        }\n    }\n    loadUsers = async () => {\n        const res = await JsonQueryAdmin('get', 'admin/listusers')\n        console.log(res)\n        this.setState({\n            userList: res\n        });\n        \n    }\n    getUser = selected => {\n        var users = '';\n        for(var i=0;i<this.state.userList.length;i++) {\n            if(selected.indexOf(this.state.userList[i]._id) > -1 ) {\n                users +=  this.state.userList[i].full_name+'('+this.state.userList[i].email+')'+ ' ';\n            }\n        }\n        return users;\n    }\n\n    render() {\n\n        return (\n            <React.Fragment>\n                <Grid container alignItems='center' justify='center'>\n                    <Grid item xs={12}>\n                        <Paper style={{ margin: '20px', padding: '20px' }}>\n                            <h2>Add Player</h2>\n                            {this.state.isCalling ? <LinearProgress /> : ''}\n                            <form onSubmit={this.addPlayer} >\n                           \n                                <Grid container alignItems='center' justify='center'>\n                                    <Grid item xs={12} md={12} >\n                                        <TextField style={{ margin: '1vw', width: '90%' }}\n                                            select\n                                            label=\"Select Tournament\"\n                                            value={this.state.tournament_id}\n                                            onChange={this.handleChange('tournament_id')}\n                                            helperText={this.state.msg_tournament_id}\n                                            error={this.state.msg_tournament_id.length > 0}\n                                        >\n                                            {this.state.tournaments_yet_to_start.map(option => (\n                                                <MenuItem key={option._id} value={option._id}>\n                                                    {option.tournament_name || option.game.name}\n                                                </MenuItem>\n                                            ))}\n                                        </TextField>\n                                        {this.state.selected_tournament && this.state.selected_tournament._id &&\n                                            <ListItem > \n                                                <ListItemText\n                                                    primary={<span> {'Current Slot '+this.state.selected_tournament.players.length +' / ' + this.state.selected_tournament.player_count } </span>}\n                                                    secondary={<span>{'Game ' + this.state.selected_tournament.game.name}</span>} />\n                                            </ListItem>\n                                        }\n                                    </Grid>\n                                    <Grid item xs={12} md={12} >\n                                        <ListItem > \n                                                <ListItemText\n                                                    primary={<span> {'Select Players' } </span>}\n                                                />\n                                            </ListItem>\n                                        <Select style={{ margin: '1vw', width: '90%' }}\n                                            multiple\n                                            value={this.state.selected_players}\n                                            onChange={this.handleChange('selected_players')}\n                                            renderValue={selected => this.getUser(selected)}\n                                        >\n                                        <MenuItem disabled value=\"\">\n                                            <em>Select Players</em>\n                                        </MenuItem>\n                                            {this.state.userList.map(user => (\n                                                <MenuItem key={user._id} value={user._id}>\n                                                    <Checkbox checked={this.state.selected_players.indexOf(user._id) > -1}/>\n                                                    <ListItemText primary={<span> {user.full_name + \"(\" +user.email+\")\"} </span>} />\n                                                </MenuItem>\n                                            ))}\n                                        </Select>\n                                        {this.state.selected_players && this.state.selected_players.length > 0 &&\n                                            <ListItem > \n                                                <ListItemText\n                                                    primary={<span> {'Total Selected '+this.state.selected_players.length } </span>}\n                                                />\n                                            </ListItem>\n                                        }\n                                    </Grid>                              \n                                    \n                                    <Grid item xs={12}>\n                                        <Button type='submit' variant='outlined' style={{ margin: '1vw', width: '90%' }}>\n                                            <span><i className=\"fas fa-upload\"></i>Assign Player</span>\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </form>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </React.Fragment>\n        )\n    }\n}\n\n\n\n\nconst PlatformSelection = [\n    { text: 'mobile', value: 0 },\n    { text: 'pc', value: 1 }\n]\n\nclass GameMenu extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isCalling: false,\n            platform_values: PlatformSelection,\n            games: [],\n            game_name: '',\n            game_platform: 0,\n            game_requirement: '',\n            game_image: '',\n            game_player_count: 1,\n            msg_game_name: '',\n            msg_game_platform: '',\n            msg_game_requirement: '',\n            msg_game_image: '',\n            \n        }\n    }\n    clearMsg = () => {\n        this.setState({\n            msg_game_name: '',\n            msg_game_platform: '',\n            msg_game_requirement: '',\n        });\n    }\n    handleChange = name => e => {\n        \n        this.setState({\n            [name]: e.target.value\n        })\n    }\n    onDrop = picture => {\n        this.setState({\n            game_image: picture,\n        });\n        console.log(picture)\n    }\n    onFileUpload = e => {\n        this.setState({\n            game_image: e.target.files[0]\n        })\n    }\n    load = async () => {\n        const res = await JsonQueryAdmin('post', 'admin/game', {})\n        this.setState({\n            games: res.games\n        })\n        console.log(res.games)\n    }\n    componentDidMount() {\n        this.load()\n    }\n    addGame = async e => {\n        e.preventDefault();\n        this.setState({ isCalling: true })\n        let fd = new FormData()\n        fd.append('image', this.state.game_image, 'chris.jpg')\n        fd.append('name', this.state.game_name)\n        fd.append('platform', this.state.game_platform)\n        fd.append('requirement', this.state.game_requirement)\n        // fd.append('player_count', this.state.game_player_count)\n        \n        const res = await PostQuery('admin/game/add', fd)\n        console.log('form submitted')\n        this.setState({ isCalling: false })\n        console.log(res);\n        this.clearMsg();\n        if (res.errors) {\n            res.errors.map(err => {\n                const fieldName = 'msg_game_' + err.param\n                this.setState({ [fieldName]: err.msg })\n            });\n        } else {\n            if(res.error == 1) {\n                alert(res.message);\n            } else {\n                alert(\"Game added successfully\");\n                this.load();\n            }\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Grid container alignItems='center' justify='center'>\n                    <Grid item xs={12}>\n                        <Paper style={{ margin: '20px', padding: '20px' }}>\n                            <h2>Add Game</h2>\n                            {this.state.isCalling ? <LinearProgress /> : ''}\n                            <form onSubmit={this.addGame} >\n                                <Grid container alignItems='center' justify='center'>\n                                    <Grid item xs={12} md={6} >\n                                        <TextField style={{ margin: '1vw', width: '90%' }}\n                                            label=\"Game Name\"\n                                            margin=\"normal\"\n                                            value={this.state.gameName}\n                                            onChange={this.handleChange('game_name')}\n                                            helperText={this.state.msg_game_name}\n                                            error={this.state.msg_game_name.length > 0}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} md={6} >\n                                        <TextField style={{ margin: '1vw', width: '90%' }}\n                                            label=\"Game Reqirement\"\n                                            margin=\"normal\"\n                                            value=\"ID\"\n                                            readonly={true}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} md={6} >\n                                  \n                                        <TextField style={{ margin: '1vw', width: '90%' }}\n                                            id=\"standard-select-bets\"\n                                            select\n                                            label=\"Select Platform\"\n                                            value={this.state.game_platform}\n                                            onChange={this.handleChange('game_platform')}\n                                        >\n                                            {this.state.platform_values.map(option => (\n                                                <MenuItem key={option.value} value={option.value}>\n                                                    {option.text}\n                                                </MenuItem>\n                                            ))}\n                                        </TextField>\n                                    </Grid>\n                                    <Grid item xs={12} md={6}>\n                                        <Button style={{ margin: '1vw', width: '90%' }}>\n                                            <input type='file'\n                                                style={{ width: '100%', opacity: 0, position: 'absolute' }}\n                                                onChange={this.onFileUpload} />\n                                            <span><i className=\"fas fa-upload\"></i> Upload Game Image</span>\n                                        </Button>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Button type='submit' variant='outlined' style={{ margin: '1vw', width: '90%' }}>\n                                            <span><i className=\"fas fa-upload\"></i> Add Game</span>\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </form>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Paper style={{ margin: '20px', padding: '20px' }}>\n                            <h2>Game List</h2>\n                            <List style={{ width: '100%', margin: '20px', height: '32vh', overflowY: 'scorll' }}>\n\n                                {\n                                    this.state.games.map(g => (\n                                        <ListItem button key={g._id}>\n                                            <Avatar style={{ height: '60px', width: '60px' }}>\n                                                <img src={`${HostAddress}gameimg/${g.image}`} style={{ height: '100%' }} />\n                                            </Avatar>\n                                            <ListItemText\n                                                primary={<span> {g.name} </span>}\n                                                secondary={<span> {g.platform ? 'mobile game' : 'pc game'} </span>} />\n                                        </ListItem>\n                                    ))\n                                }\n                            </List>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </React.Fragment>\n        )\n    }\n}","import {createMuiTheme} from '@material-ui/core'\n\nconst colors = {\n    blackLight: '#334',\n    greenLight: '#76ff03',\n    green: '#aaa',\n}\n\nexport const myTheme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: {\n            light: '#bbb',\n            main: colors.greenLight,\n            dark: '#76ff03'\n         },\n         secondary: {\n           main: colors.greenLight,\n         },\n         textColor: \"#bdbdbd\",\n      },\n    typography: { \n        useNextVariants: true\n     },\n     appBar: {\n        \"textColor\": \"#33691e\"\n    },\n    card: {\n        \"titleColor\": \"rgba(118, 255, 3, 0.87)\",\n        \"subtitleColor\": \"rgba(224, 224, 224, 0.54)\"\n    },\n    overlay: {\n        \"backgroundColor\": \"rgba(0, 0, 0, 0.87)\"\n    },\n    paper: {\n        backgroundColor: \"rgba(33, 33, 33, 0.66)\"\n    },\n})\n\nexport const ColorPalate = colors;\n\n\nexport const  MainStyles = {\n    nav: {\n        backgroundColor: colors.blackLight,\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n        color: colors.greenLight\n    },\n    logo: {\n        width: 140\n    },\n    sideNav: {\n        width: 240,\n        height: '100%',\n        color: colors.greenLight,\n        backgroundColor: colors.blackLight,\n    },\n    sideNavList: {\n        backgroundColor: colors.blackLight,\n        padding: 8,\n        color: colors.greenLight,\n    },\n    block: {\n        backgroundColor: 'rgba(0, 0, 10, 0.1)',\n        color: colors.greenLight,\n    },\n    heading: {\n        color: colors.greenLight,\n        padding: 8,\n        fontSize: '1.3rem',\n        fontWeight: 'bolder'\n    },\n    text: {\n        color: colors.green,\n        padding: 8,\n        fontSize: '1.2rem',\n    },\n    paper: {\n        backgroundColor: colors.blackLight\n    },\n    boxChallenger: {\n        height: window.innerWidth < 600 ? 70 : 100,\n        width: window.innerWidth < 600 ? 70: 100,\n    },\n    boxGame : {\n        height: '140px',\n        clipPath: 'polygon(0% 0%, 60% 0, 60% 100%, 31% 71%, 0 100%)',\n       \n    },\n    expansion: {\n        padding: 10,\n        backgroundColor: 'rgba(0, 0, 10, 0.2)',\n        color: colors.green,\n    },\n    header: {\n        fontSize: '1.3rem',\n        fontWeight: 'bolder',\n        color: colors.greenLight\n    },\n    gameBtn: {\n        position: 'absolute',\n        zIndex: 4,\n        top: window.innerWidth < 600 ?'84vh' : '90vh',\n        right: window.innerWidth < 600 ? 20 : 40,\n        transform: 'scale(1.2)'\n    },\n    gridList: {\n        minWidth: 500,\n        maxHeight: 450,\n    },\n    centerContainer: {\n        display: 'grid',\n        alignItems: 'center',\n        justifyContent: 'center',\n        textAlign: 'center',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n}\n\n","import React, { Component } from 'react';\nimport { ColorPalate } from './MainStyles';\n\nimport { JsonQueryAuth, HostAddress } from '../Services/Query';\nimport { Grid, Button,TextField,Slide } from '@material-ui/core';\nimport { Dialog, DialogTitle, DialogContent, DialogActions } from '@material-ui/core';\nimport styles from './Cards.module.css';\n\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\nexport class ChallengeCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false,\n            opponent: this.props.opponent,\n            game: this.props.game,\n            bet: this.props.bet,\n            isChallenger: this.props.isChallenger\n        }\n    }\n    toggleChallenge = () => {\n        this.setState({\n            isOpen: !this.state.isOpen,\n        })\n    }\n    acceptChallenge = async () => {\n        const res = await JsonQueryAuth('POST', 'dashboard/game/challange/accept', { match_id: this.props.id })\n        console.log(res);\n        if (res.status === 'ok') {\n            this.props.load();\n            this.toggleChallenge();\n        }\n        else {\n            alert(res.errors[0]);\n        }\n    }\n    cancelChallenge = async () => {\n        const res = await JsonQueryAuth('POST', 'dashboard/game/challange/decline', { match_id: this.props.id })\n        if (res.status === 'ok') {\n            this.props.load();\n            this.toggleChallenge();\n        }\n        else {\n            alert(res.errors[0]);\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Grid item container xs={12} md={4} justify='center' alignItems='center' style={{ marginBottom: 8 }}>\n                    <div className={`${styles.torurmantBet} animated bounceInRight`} onClick={this.toggleChallenge}>\n                        <div  className={`${styles.torurmant} ${styles.clearfix}`} >\n                            <div  className={`${styles.gameitem} `}>\n                                <img src={`${HostAddress}gameimg/${this.state.game.image}`} alt='game'/>\n                                <h4>Me</h4>                \n                            </div>\n                            <div  className={`${styles.gameitem} ${styles.vs}`}>\n                            <h4>Bet</h4>\n                        </div>\n                            <div  className={`${styles.gameitem} `}>\n                                <img src={`${HostAddress}${this.state.opponent.image}`} alt='opponent' />\n                                <h4>{this.state.opponent.full_name}</h4>\n                            </div>\n                        </div>\n                        <div className={`${styles.torurmantDes}`}>\n                             <h4>{this.state.game.name}</h4>\n                             <h5>Bet: {this.state.bet} BP</h5>                              \n                    </div>\n                    </div>\n                </Grid>\n                <Dialog open={this.state.isOpen} onClose={this.toggleChallenge}>\n                    <DialogTitle>I want to</DialogTitle>\n                    <DialogContent>\n                        Choose the type of action you want.\n                    </DialogContent>\n                    <DialogActions>\n                        {!this.state.isChallenger ? <Button onClick={this.acceptChallenge} style={{ color: 'green', fontWeight: 'bolder' }}>Accept Challenge</Button> : ''}\n                        <Button onClick={this.cancelChallenge} style={{ color: 'red', fontWeight: 'bolder' }}>Cancel Challenge</Button>\n                    </DialogActions>\n                </Dialog>\n            </React.Fragment>\n        )\n    }\n}\n\n\n\nexport class MatchCard extends Component {\n    redirect = id => async e => {\n        this.props.history.push(`/match/${id}`)\n    }\n    render() {\n        const { id, bet, game, opponent } = this.props\n        return (\n            <Grid item container xs={12} md={4} lg={4} justify='center' alignItems='center' style={{ marginBottom: 8 }} >\n                <div className={`${styles.torurmantBet} animated bounceInLeft`} onClick={this.redirect(id)}>\n                    <div  className={`${styles.torurmant} ${styles.clearfix}`} >\n                        <div  className={`${styles.gameitem} `}>\n                            <img src={`${HostAddress}gameimg/${game.image}`} />\n                            <h4>Me</h4>\n                        </div>\n                        <div  className={`${styles.gameitem} ${styles.vs}`}>\n                            <h4>Vs</h4>\n                        </div>\n                        <div className={`${styles.gameitem} `}>\n                            <img src={`${HostAddress}${opponent.image}`} />\n                            <h4>{opponent.full_name}</h4>\n                        </div>\n                    </div>\n                    <div className={`${styles.torurmantDes}`}>\n                        <h4>{game.name}</h4>\n                        <h5>BP :- {bet} BP</h5>\n                    </div>\n                </div>\n            </Grid>\n        )\n    }\n}\n\nexport class TournamentCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false,\n            game: this.props.game,\n            isParticipating: this.props.isParticipating,\n            player_count: this.props.player_count,\n            tournament_id: this.props.tournament_id,\n            image:this.props.image,\n            current_available:this.props.current_available,\n            entry_fee:this.props.entry_fee,\n            prize:this.props.prize,\n            tournament_name:this.props.tournament_name,\n            isguest:this.props.isguest || false\n        }\n       \n    }\n    toggleJoin = () => {\n        if(!this.state.isguest) {\n            if (!this.state.isParticipating)\n                this.setState({\n                    isOpen: !this.state.isOpen,\n                })\n            else {\n                this.props.enterTournament(this.state.tournament_id)\n            }\n        } else {\n            this.props.onClick();\n        }\n    }\n    viewTournament = (tournament_id) => {\n        this.props.enterTournament(tournament_id)\n    }\n    joinTournament = id => async e => {\n        console.log(id)\n        const res = await JsonQueryAuth('post', `tournament/join/`, { tournament_id: this.state.tournament_id })\n        if (res.status === 'ok') {\n            this.props.load()\n        } else {\n            this.toggleJoin();\n            alert(\"Tournament is not valid\");\n        }\n    }\n\n    render() {\n\n        // if(this.props.custom_fields) {\n        //     try {\n        //         var custom_fields = JSON.parse(this.props.custom_fields);\n        //     } catch(e) {\n        //         var custom_fields = [];\n        //     }\n        // } else {\n        //     var custom_fields = [];\n        // }\n        return (\n            <React.Fragment>\n                <Grid item container xs={12} md={4} lg={4} justify='center' alignItems='center' style={{ marginBottom: 8 }} >\n                    <div className={styles.gameCard} onClick={this.toggleJoin}>\n                        <div>\n                            <img src={(this.props.image && this.props.image!='') ? `${HostAddress}tournamentimg/${this.props.image}`:`${HostAddress}gameimg/${this.props.game.image}`} style={{width: '100%',maxHeight:135,minHeight:135}} />\n                       </div>\n                        <div  className={styles.gameCardOn}>\n                        <h1>{this.props.tournament_name || this.props.game.name}  </h1>\n                        \n                        <h3 className={`${styles.priceConsole} ${styles.clearfix}`}>\n                            <div className={styles.firstpart}>\n                             <strong>Console:- </strong>  {this.props.game.platform ? 'mobile game ' : 'pc game'}\n                           </div>\n                           <div className={styles.secondpart}>\n                                     <strong>Slot:- </strong> {this.props.current_available + '/' +this.props.player_count }\n                            </div>\n                        </h3>\n                        <h3 className={`${styles.priceConsole} ${styles.clearfix}`}>\n                            <div className={styles.firstpart}>\n                                <strong>Prize:- </strong> {this.props.prize || ' - '} \n                            </div>\n                            <div className={styles.secondpart}>\n                            <strong>Entry:- </strong>  {this.props.entry_fee || 'Free' }\n                            </div>\n                        </h3>\n                        {/* {custom_fields.map((custom,index) =>\n                            <h2 key={custom.field_id}>{custom.label_name} : {custom.field_value }</h2>                        \n                        )} */}\n                         </div>\n                    </div>\n                </Grid>\n                <Dialog open={this.state.isOpen} onClose={this.toggleJoin}>\n                    <DialogTitle>Join Tournament</DialogTitle>\n                    <DialogContent>\n                        Do you want to join this tournament?\n                    </DialogContent>\n                    <DialogActions>\n                        <Button style={{ color: ColorPalate.green, fontWeight: 'bolder' }} onClick={this.joinTournament(this.props.tournament_id)}>\n                            Join\n                        </Button>\n                        <Button style={{ color: ColorPalate.green, fontWeight: 'bolder' }} onClick={(e) => this.viewTournament(this.props.tournament_id)}>\n                            Show Details\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </React.Fragment>\n        )\n    }\n}\n\n\n\nexport class GameCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false,\n            game: this.props.game,\n            isAddGame:false,\n            contact_string:this.props.game.contact_string\n        };;\n    }\n    toggleGame = () => {\n        this.setState({\n            isOpen: !this.state.isOpen,\n        })\n    }\n    removeGame = id => async e => {\n        console.log(id)\n        const res = await JsonQueryAuth('get', `dashboard/game/remove/${id}`)\n        if (res.status === 'ok')\n            this.props.load()\n    }\n    toggleAddGame = () => {\n        this.toggleGame();\n        this.setState({\n            isAddGame: !this.state.isAddGame,\n        })\n    }\n    handleChange = name => e => {\n        this.setState({\n            [name]: e.target.value\n        })\n    }\n    addGameSubmit = async e =>{\n        e.preventDefault()\n        const {contact_string } = this.state;\n        var game_id = this.props.game._id;\n        const res = await JsonQueryAuth('post', 'dashboard/game/updateid', { game_id, contact_string})\n        if(res.errors) {\n            //console.log(res.errors)\n        }else if(res.status === 'ok') {\n            alert('gameid updated succenssfully')\n            this.setState({\n                isAddGame: !this.state.isAddGame,\n            });\n        }else if(res.status === 'fail') {\n            alert(res.msg);\n        }\n    }\n    render() {\n        let content;\n        console.log('-------------');\n        console.log(this.props.game);\n        content = (\n            <form onSubmit={this.addGameSubmit}>\n                <div>\n                    <TextField\n                        autoComplete=\"off\"\n                        id=\"outlined-search\"\n                        label={this.props.game.requirement}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        value={this.state.contact_string}\n                        onChange={this.handleChange('contact_string')}\n                        style={{ width: window.innerWidth < 600 ? 'auto' : 400 }}\n                    />\n                </div>\n                <Button style={{color: '#157'}} type='submit' onClick={this.addGameSubmit}>\n                    Update Id\n                </Button>\n            </form>\n        );\n        return (\n            <React.Fragment>\n                <Grid item container xs={12} md={4} lg={4} justify='center' alignItems='center' style={{ marginBottom: 8 }} >\n                    <div className={styles.gameCard} onClick={this.toggleGame}>\n                        <div className={styles.gameitem}>\n                            <img src={`${HostAddress}gameimg/${this.props.game.image}`} />\n                        </div>\n                        <div className={styles.gamename}>\n                        <h1>{this.props.game.name}</h1>\n                        <h2>{this.props.game.platform ? 'mobile game' : 'pc game'}</h2>\n                        {this.props.game.contact_string &&\n                            <h4> GameId : {this.props.game.contact_string}</h4>\n                        }\n                        </div>\n                    </div>\n                </Grid>\n                <Dialog open={this.state.isOpen} onClose={this.toggleGame}>\n                    <DialogTitle>{this.props.game.name}</DialogTitle>\n                    <DialogContent>\n                        <h4>Game Type :  {this.props.game.platform ? 'mobile game' : 'pc game'}</h4>\n                        <h4>Game id :  {this.props.game.requirement}</h4>\n                        <h4>Player Count :  {this.props.game.player_count}</h4>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button style={{ color: 'green', fontWeight: 'bolder' }} onClick={this.toggleAddGame}>\n                            Change Id\n                        </Button>\n                        <Button style={{ color: 'red', fontWeight: 'bolder' }} onClick={this.removeGame(this.props.game._id)}>\n                            Remove Game\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.isAddGame}\n                    onClose={this.toggleAddGame}\n                    TransitionComponent={Transition}\n                    keepMounted>\n                    <DialogTitle>Games</DialogTitle>\n                    <DialogContent> \n                        <div>\n                            {content}\n                        </div>\n                    </DialogContent>\n                </Dialog>\n            </React.Fragment>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { ColorPalate, myTheme } from '../Components/MainStyles';\nimport { MuiThemeProvider } from '@material-ui/core'\nimport { TournamentCard } from '../Components/Cards';\n\nimport { JsonQuery, SetCookie,JsonQueryAuth, HostAddress } from '../Services/Query'\nimport { Grid, Drawer, TextField, LinearProgress } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport './Landing.css';\n\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            full_name: '',\n            email: '',\n            password: '',\n            confirm: '',\n            isCalling: false,\n            msg_full_name: '',\n            msg_email: '',\n            msg_password: '',\n            msg_confirm: '',\n        }\n    }\n    clearMsg = () => {\n        this.setState({\n            msg_full_name: '',\n            msg_email: '',\n            msg_password: '',\n            msg_confirm: '',\n        });\n    }\n    handleChange = name => event => {\n        this.setState({ [name]: event.target.value })\n    }\n    register = async e => {\n        e.preventDefault();\n        this.setState({ isCalling: true })\n        const { full_name, email, password, confirm } = this.state;\n        if (full_name === '' || full_name === undefined) {\n\n        }\n        const res = await JsonQuery('post', 'sign/register', { full_name, email, password, confirm });\n        this.setState({ isCalling: false })\n        this.clearMsg();\n        if (res.errors) {\n            res.errors.map(err => {\n                const fieldName = 'msg_' + err.param;\n                this.setState({ [fieldName]: err.msg })\n                return err\n            });\n        } else {\n            alert(`registration successful`)\n        }\n    }\n\n    render() {\n        return (\n            <div style={{ width: '80vw', height: '100%', display: 'grid', alignItems: 'center', justifyContent: 'center' }}>\n                <div style={{ margin: '2vw' }}>\n                    <h1>Register</h1>\n                    {this.state.isCalling ? <LinearProgress /> : ''}\n                    <form onSubmit={this.register}>\n                        <Grid container >\n                            <Grid item xs={12} md={6} >\n                                <TextField style={{ margin: '1vw', width: '90%' }}\n                                    id=\"standard-name\"\n                                    label=\"Name\"\n                                    margin=\"normal\"\n                                    value={this.state.full_name}\n                                    onChange={this.handleChange('full_name')}\n                                    helperText={this.state.msg_full_name}\n                                    error={this.state.msg_full_name.length > 0}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6} >\n                                <TextField style={{ margin: '1vw', width: '90%' }}\n                                    id=\"standard-email\"\n                                    label=\"Email Id\"\n                                    margin=\"normal\"\n                                    value={this.state.email}\n                                    onChange={this.handleChange('email')}\n                                    helperText={this.state.msg_email}\n                                    error={this.state.msg_email.length > 0}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6}>\n                                <TextField style={{ margin: '1vw', width: '90%' }}\n                                    id=\"standard-password\"\n                                    label=\"Password\"\n                                    margin=\"normal\"\n                                    type='password'\n                                    value={this.state.password}\n                                    onChange={this.handleChange('password')}\n                                    helperText={this.state.msg_password}\n                                    error={this.state.msg_password.length > 0}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6} >\n                                <TextField style={{ margin: '1vw', width: '90%' }}\n                                    id=\"standard-confirm-password\"\n                                    label=\"Confirm Password\"\n                                    margin=\"normal\"\n                                    type='password'\n                                    value={this.state.confirm}\n                                    onChange={this.handleChange('confirm')}\n                                    helperText={this.state.msg_confirm}\n                                    error={this.state.msg_confirm.length > 0}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6} >\n                                <Button type='submit' style={{ padding: 14, color: '#2af', }}>\n                                    Register\n                        </Button>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\nclass SignIn extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            isCalling: false,\n            msg_email: '',\n            msg_password: '',\n        }\n    }\n    clearMsg = () => {\n        this.setState({\n            msg_email: '',\n            msg_password: ''\n        });\n    }\n    handleChange = name => event => {\n        this.setState({ [name]: event.target.value })\n    }\n    signIn = async e => {\n        e.preventDefault();\n        this.setState({ isCalling: true })\n        const { email, password } = this.state;\n        const res = await JsonQuery('post', 'sign/login', { email, password });\n        this.setState({ isCalling: false })\n        this.clearMsg();\n        if (res.errors) {\n            res.errors.map(err => {\n                const fieldName = 'msg_' + err.param;\n                this.setState({ [fieldName]: err.msg });\n                return err\n            });\n        } else {\n            SetCookie('logauti', res.id);\n            SetCookie('logautx', this.state.email);\n            SetCookie('logauty', res.connection_string);\n            this.props.history.push('/dashboard')\n        }\n    }\n    render() {\n        return (\n            <div style={{ height: '80vh', display: 'grid', alignItems: 'center', justifyContent: 'center' }}>\n                <div style={{ margin: '2vw' }}>\n                    <h1>Sign In</h1>\n                    {this.state.isCalling ? <LinearProgress /> : ''}\n                    <form onSubmit={this.signIn}>\n                        <Grid container >\n                            <Grid item xs={12} md={6} >\n                                <TextField style={{ margin: '1vw', width: '90%' }}\n                                    id=\"standard-email\"\n                                    label=\"Email Id\"\n                                    margin=\"normal\"\n                                    value={this.state.email}\n                                    onChange={this.handleChange('email')}\n                                    helperText={this.state.msg_email}\n                                    error={this.state.msg_email.length > 0}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6}>\n                                <TextField style={{ margin: '1vw', width: '90%' }}\n                                    id=\"standard-password\"\n                                    label=\"Password\"\n                                    margin=\"normal\"\n                                    type='password'\n                                    value={this.state.password}\n                                    onChange={this.handleChange('password')}\n                                    helperText={this.state.msg_password}\n                                    error={this.state.msg_password.length > 0}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6} >\n                                <Button type='submit' style={{ padding: 14, color: '#2af', }}>\n                                    Sign In\n                        </Button>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\nexport class Landing extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isRegister: false,\n            isSignIn: false,\n            tournaments:[]\n        }\n    }\n    toggleRegister = () => {\n        this.setState({\n            isRegister: !this.state.isRegister\n        })\n    }\n    toggleSignIn = () => {\n        this.setState({\n            isSignIn: !this.state.isSignIn\n        })\n    }\n    redrt = async () => {\n       // const res = await JsonQueryAuth('POST', 'info/getUser', { });\n    }\n    componentDidMount() {\n        document.body.className=\"body-a\";\n        this.load();\n    }\n    load = async () => {\n        const res = await JsonQueryAuth('post', 'tournament/public/latest', {limit:10})\n        this.setState({\n            tournaments: res\n        });         \n    }\n    render() {\n        var settings = {\n            dots: true,\n            infinite: true,\n            speed: 500,\n            slidesToShow: 1,\n            slidesToScroll: 1\n          };\n        return (\n            <React.Fragment>\n                <div className='body1'>\n                    <Drawer open={this.state.isRegister} onClose={this.toggleRegister}>\n                        <Register />\n                    </Drawer>\n                    <Drawer anchor=\"top\" open={this.state.isSignIn} onClose={this.toggleSignIn}>\n                        <SignIn history={this.props.history} />\n                    </Drawer>\n                    <div className='Page'>\n                        <div id=\"title\" className=\"slide header container\">\n                            <div>\n                                <Grid container alignItems='center' justify='center'>\n                                    <Grid item xs={12}>\n                                        <h1 style={{ color: ColorPalate.greenLight, fontSize: '2.4rem' }}>Virtual Battle Ground</h1>\n                                        <h1 style={{ color: '#fff', fontSize: '1.4rem' }}>Start making money through competetive gaming</h1>\n                                    </Grid>\n                                    <br /><br />\n                                    <Grid item xs={12} spacing={16} container alignItems='center' justify='center'>\n                                        <Grid item xs={12} md={6} container alignItems='center' justify='center'>\n                                            <Button style={{ color: ColorPalate.greenLight }}\n                                                onClick={this.toggleRegister}\n                                            ><div className=\"boton\">\n\n                                                    <svg viewBox=\"0 0 290 70\" width=\"100%\" heigth=\"100%\" >\n                                                        <line className=\"L-T\" x1=\"0\" y1=\"-15\" x2=\"0\" y2=\"20\" />\n                                                        <line className=\"L-B\" x1=\"0\" y1=\"50\" x2=\"0\" y2=\"85\" />\n\n                                                        <line className=\"R-T\" x1=\"290\" y1=\"-15\" x2=\"290\" y2=\"20\" />\n                                                        <line className=\"R-B\" x1=\"290\" y1=\"50\" x2=\"290\" y2=\"85\" />\n\n                                                        <line className=\"T-L\" x1=\"-125\" y1=\"0\" x2=\"20\" y2=\"0\" />\n                                                        <line className=\"T-R\" x1=\"270\" y1=\"0\" x2=\"415\" y2=\"0\" />\n\n                                                        <line className=\"B-R\" x1=\"270\" y1=\"70\" x2=\"415\" y2=\"70\" />\n                                                        <line className=\"B-L\" x1=\"-125\" y1=\"70\" x2=\"20\" y2=\"70\" />\n                                                    </svg>\n                                                    <span>Register</span>\n                                                </div>\n                                            </Button>\n                                        </Grid>\n                                        <Grid item xs={12} md={6} container alignItems='center' justify='center'>\n                                            <Button style={{ color: ColorPalate.greenLight }}\n                                                onClick={this.toggleSignIn}\n                                            ><div className=\"boton\"\n                                            >\n\n                                                    <svg viewBox=\"0 0 290 70\" width=\"100%\" heigth=\"100%\" >\n                                                        <line className=\"L-T\" x1=\"0\" y1=\"-15\" x2=\"0\" y2=\"20\" />\n                                                        <line className=\"L-B\" x1=\"0\" y1=\"50\" x2=\"0\" y2=\"85\" />\n\n                                                        <line className=\"R-T\" x1=\"290\" y1=\"-15\" x2=\"290\" y2=\"20\" />\n                                                        <line className=\"R-B\" x1=\"290\" y1=\"50\" x2=\"290\" y2=\"85\" />\n\n                                                        <line className=\"T-L\" x1=\"-125\" y1=\"0\" x2=\"20\" y2=\"0\" />\n                                                        <line className=\"T-R\" x1=\"270\" y1=\"0\" x2=\"415\" y2=\"0\" />\n\n                                                        <line className=\"B-R\" x1=\"270\" y1=\"70\" x2=\"415\" y2=\"70\" />\n                                                        <line className=\"B-L\" x1=\"-125\" y1=\"70\" x2=\"20\" y2=\"70\" />\n                                                    </svg>\n                                                    <span>Sign In</span>\n                                                </div>\n                                            </Button>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </div>\n                        </div>\n                        <div id=\"slide3\" className=\"slide\">\n                        <div className=\"title-y container\">\n                                <h1>Ongoing Tournamanets</h1>\n                                <Grid container spacing={16}>\n                                    {\n                                        this.state.tournaments.map(tour => <TournamentCard key={tour._id}\n                                            onClick={this.toggleSignIn}\n                                            isguest={true}\n                                            isParticipating={false}\n                                            player_count={tour.player_count}\n                                            image={tour.image}\n                                            load={this.load}\n                                            tournament_name={tour.tournament_name}\n                                            game={tour.game}\n                                            current_available={tour.players.length}\n                                            entry_fee={tour.entry_fee}\n                                            custom_fields={tour.custom_fields}\n                                            prize={tour.balance}\n                                            enterTournament={this.props.enterTournament}\n                                            tournament_id={tour._id} />)\n                                    }\n                                </Grid>\n                        </div>\n                        </div>\n                        <div id=\"slide1\" className=\"slide\">\n                            <div className=\"title-x container\">\n                                <h1>How It Works</h1>\n                                <p>Compete in gaming tournaments and head-to-head challenges with gamers of every skill level on Mobile, Playstation, Xbox and PC. Participate in free-to-play or cash tournaments and Win Big at Virtual Battle Ground.</p>\n                            </div>\n                        </div>\n\n                        <div id=\"slide2\" className=\"slide\">\n                            <div className=\"container\"> \n                                <div className=\"title\">\n                                    <h1>Participate in Live Tournaments To Earn More</h1>\n                                    <p>Lorem ipsum dolor sit amet, in velit iudico mandamus sit, persius dolorum in per, postulant mnesarchum cu nam. Malis movet ornatus id vim, feugait detracto est ea, eam eruditi conceptam in. Ne sit explicari interesset. Labores perpetua cum at. Id viris docendi denique vim.</p>\n                                </div>\n\n                                <img src={require('../img/8ball.jpg')} alt='game'/>\n                                <img src={require('../img/chess.jpg')} alt='chess'/>\n                            </div>\n                        </div>\n\n                        <div id=\"slide3\" className=\"slide\">\n                            <div className=\"container\"> \n                               <Grid container spacing={16}>\n                                <Grid item xs={12} md={6}>\n                                    <div className=\"title-y\">\n                                        <h1>CREATE ACCOUNT</h1>\n                                        <p>Login to Virtual Battle Ground and Add money to wallet</p>\n                                    </div>\n\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <div className=\"title-y\">\n                                        <h1>FIND YOUR GAME</h1>\n                                        <p>Search among the Listd game and add to your play list</p>\n                                    </div>\n\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <div className=\"title-y\">\n                                        <h1>CHALLENGE OTHERS</h1>\n                                        <p>Search for ohter players and challenge them for free or bet</p>\n                                    </div>\n\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <div className=\"title-y\">\n                                        <h1>WIN AND EARN</h1>\n                                        <p>beat other players in tournaments and matches to earn credits.</p>\n                                    </div>\n\n                                </Grid>\n                            </Grid>\n                            </div>\n                        </div>\n\n                        <div id=\"slide4\" className=\"slide header\">\n                        <ul>\n                           <li> <a href='/about'>About us</a></li>\n                            <li> <a href='/terms'>Terms & conditions</a> </li>\n                            <li> <a href='/faq'>FAQ</a> </li>\n                            <li> <a href='/faq'>Contact us</a> </li>\n                            <li><a href='/privacy'>privacy policy</a></li>\n                            <div className=\"clearr\"></div>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport { MainStyles, ColorPalate } from './MainStyles';\n\nimport { JsonQueryAuth, HostAddress, getCookie } from '../Services/Query'\n\nimport { AppBar, Toolbar } from '@material-ui/core';\nimport { Drawer, List, ListItem, ListItemIcon, ListItemText, Divider, Icon } from '@material-ui/core';\nimport { IconButton } from '@material-ui/core'\nimport { Sort, Dashboard, Person, AccountBalanceWallet, FeaturedPlayListTwoTone } from '@material-ui/icons';\nimport { Grid, Typography, Fab, Button } from '@material-ui/core';\nimport { GridList, GridListTile, GridListTileBar } from '@material-ui/core';\nimport { TextField, Avatar, MenuItem } from '@material-ui/core';\nimport { Dialog, DialogTitle, DialogContent } from '@material-ui/core';\nimport Slide from '@material-ui/core/Slide';\n\nimport styles from './Navigation.module.css';\n\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\n\nconst ChallengeBets = [\n    { text: 'Free', value: 0 },\n    { text: '10 BP', value: 10 },\n    { text: '20 BP', value: 20 },\n    { text: '50 BP', value: 50 },\n    { text: '100 BP', value: 100 },\n    { text: '500 BP', value: 500 },\n]\n\n\nconst Logo = () =>\n    (<img\n        src={require('../img/icons/vbg1.png')}\n        style={MainStyles.logo}\n        alt=\"VBG\"\n    >\n    </img>);\n\n\nexport class Navigation extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showGameBtn : false, \n            isOpen: false,\n            image: require('../img/default.jpg'),\n            name: 'palyer',\n            balance: 0,\n            data: {}\n        }\n        this.toggleDrawer = this.toggleDrawer.bind(this);\n    }\n    toggleDrawer() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        })\n    }\n    load = async () => {\n        const res = await JsonQueryAuth('POST', 'info/getUser', { x: 10 });\n        const image = `${HostAddress}user/${res.folder}/${res.image}`\n        const name = res.full_name\n        const balance = res.balance\n        this.setState({\n            name: name,\n            image: image,\n            balance: balance,\n            showGameBtn : this.props.active !== 'wallet' && this.props.active !== 'history'\n        })\n    }\n    componentDidMount() {\n        this.load();\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <AppBar position='sticky' style={MainStyles.nav}>\n                    <Toolbar>\n                        <IconButton\n                            style={MainStyles.menuButton}\n                            color=\"inherit\" aria-label=\"Menu\"\n                            onClick={this.toggleDrawer}>\n                            <Sort style={{ transform: 'scale(1.2)' }} />\n                        </IconButton>\n                        <Logo />\n                    </Toolbar>\n                    {\n                        this.state.showGameBtn? <GameBtn load={this.props.load} /> : ''\n                    }\n                </AppBar>\n                <Drawer open={this.state.isOpen} onClose={this.toggleDrawer}>\n                    <SideMenu\n                        active={this.props.active}\n                        image={this.state.image}\n                        name={this.state.name}\n                        balance={this.state.balance}\n                    />\n                </Drawer>\n            </React.Fragment>\n        );\n    }\n}\n\nclass GameBtn extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false,\n            stage: 'game',\n            bets: ChallengeBets,\n            nameHint: '',\n            bet: 0,\n            games: [],\n            game: '',\n            opponents: [],\n            opponent: {\n                _id: '',\n                name: '',\n                image: require('../img/default.jpg')\n            },\n            self: {\n                _id: '',\n                name: '',\n                image: require('../img/default.jpg')\n            }\n        }\n        this.toggleChallenge = this.toggleChallenge.bind(this);\n    }\n    toggleChallenge() {\n        this.setState({\n            isOpen: !this.state.isOpen,\n            stage: 'game'\n        })\n    }\n    handleChange = name => async event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n        if (name === 'nameHint') {\n            this.search(event.target.value)\n        }\n    } \n    async componentDidMount() {\n        const res = await JsonQueryAuth('POST', 'info/getGames', {})\n        this.setState({\n            games: res\n        });\n    }\n    search = async (name) => {\n        const res = await JsonQueryAuth('POST', 'info/getChallangerList', { name: name, game_id: this.state.game })\n        const opponents = res.list.filter(x => x._id !== getCookie('logauti'))\n        this.setState({\n            opponents: opponents,\n            stage: 'search',\n        })\n    }\n    selectOpponent = id => async  e => {\n        const res = await JsonQueryAuth('POST', 'info/getChallangerList', { name: this.state.nameHint, game_id: id })\n        const opponents = res.list.filter(x => x._id !== getCookie('logauti'))\n        this.setState({\n            opponents: opponents,\n            self: res.list.filter(x => x._id === getCookie('logauti'))[0],\n            stage: 'search',\n            game: id\n        })\n    }\n    openChallange = op => async e => {\n        this.setState({\n            opponent: op,\n            stage: 'challenge'\n        })\n    }\n    challenge = async e => {\n        const { opponent, bet, game, self } = this.state;\n        const res = await JsonQueryAuth('POST', 'dashboard/game/challange', {\n            challenger: self._id,\n            challenged: opponent._id,\n            balance: bet,\n            game_id: game\n        });\n        if (res.status === 'ok') {\n            this.toggleChallenge();\n            this.props.load()\n        } else {\n            alert(res.errors[0].msg);\n        }\n    }\n    render() {\n        let dialogContent, dialogTitle;\n        switch (this.state.stage) {\n            case 'game':\n                dialogTitle = 'Select Game';\n                dialogContent = (\n                    <React.Fragment>\n                        <GridList cellHeight={200} style={MainStyles.gridList}>\n                            {this.state.games.map(g => (\n                                <GridListTile key={g._id} onClick={this.selectOpponent(g._id)} cols={window.innerWidth < 600 ? 2 : 1}>\n                                    <img src={`${HostAddress}gameimg/${g.image}`} alt={'data.name'} />\n                                    <GridListTileBar\n                                        title={g.name}\n                                        subtitle={<span>Platform: {g.platform === 0 ? 'mobile' : 'PC'}</span>}\n                                    />\n                                </GridListTile>\n                            ))\n                            }\n                        </GridList>\n                    </React.Fragment>\n                )\n                break;\n            case 'search':\n                dialogTitle = 'Search Opponent';\n                dialogContent = (\n                    <React.Fragment>\n                        <div>\n                            <TextField\n                                autoComplete=\"off\"\n                                id=\"outlined-search\"\n                                label=\"Search Opponent\"\n                                type=\"search\"\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                                onChange={this.handleChange('nameHint')}\n                                style={{ width: window.innerWidth < 600 ? 'auto' : 400 }}\n                            />\n                        </div>\n                        <div>\n                            <List style={{ height: 300, overflowY: 'scroll' }}>\n                                {this.state.opponents.map(op => (\n                                    <ListItem key={op._id} onClick={this.openChallange(op)}>\n                                        <Avatar alt=\"Remy Sharp\" src={`${HostAddress}${op.image}`} />\n                                        <ListItemText primary={op.full_name} />\n                                    </ListItem>\n                                ))}\n                            </List>\n                        </div>\n                    </React.Fragment>\n                )\n                break;\n            case 'challenge':\n                dialogTitle = 'Challenge';\n                dialogContent = (\n                    <React.Fragment>\n                        <Grid container justify='center' alignItems='center' >\n                            <Grid item xs={12}>\n                                <Grid container spacing={16} justify=\"center\" alignItems=\"center\">\n                                    <Grid item xs={5} style={MainStyles.centerContainer}>\n                                        <Avatar \n                                            alt={this.state.self.full_name}\n                                            src={`${HostAddress}${this.state.self.image}`}\n                                            style={{ width: window.innerWidth < 600 ? 100 : 200, height: window.innerWidth < 600 ? 100 : 200 }} />\n                                        <span style={{ textAlign: 'center', color:'#aaa' }}>{this.state.self.full_name}</span>\n                                    </Grid>\n                                    <Grid item xs={2} style={{ textAlign: 'center', color: ColorPalate.greenLight, fontSize: '1.6rem' }} className='animated heartBeat infinite'>\n                                        <span > VS </span>\n                                    </Grid>\n                                    <Grid item xs={5} style={MainStyles.centerContainer}>\n                                        <Avatar\n                                            alt=\"Remy Sharp\"\n                                            src={`${HostAddress}${this.state.opponent.image}`}\n                                            style={{ width: window.innerWidth < 600 ? 100 : 200, height: window.innerWidth < 600 ? 100 : 200 }} />\n                                        <span style={{ textAlign: 'center', color:'#aaa' }}>{this.state.opponent.full_name}</span>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={12} md={6}>\n                                <TextField\n                                    id=\"standard-select-bets\"\n                                    select\n                                    label=\"Select Bet\"\n                                    value={this.state.bet}\n                                    style={{ width: '100%', marginTop: 20 }}\n                                    onChange={this.handleChange('bet')}\n                                >\n                                    {this.state.bets.map(option => (\n                                        <MenuItem key={option.value} value={option.value}>\n                                            {option.text}\n                                        </MenuItem>\n                                    ))}\n                                </TextField>\n                            </Grid>\n                            <Grid item xs={12} style={MainStyles.centerContainer}>\n                                <Button\n                                    style={{ marginTop: 30, width: '100%', padding: 20, fontSize: '1.3rem', color: ColorPalate.greenLight }}\n                                    onClick={this.challenge}\n                                >\n                                    <i className=\"fas fa-gamepad\"></i>{'\\u00A0'}Challenge\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </React.Fragment>\n                )\n                break;\n        }\n        return (\n            <div style={MainStyles.gameBtn}>\n                <Fab style={{ backgroundColor: '#00c853' }} onClick={this.toggleChallenge} className='animated rubberBand'>\n                    <img src={require('../img/icons/sword.svg')} alt=\"B\" style={{ width: 30 }} />\n                </Fab>\n                <Dialog\n                    open={this.state.isOpen}\n                    onClose={this.toggleChallenge}\n                    TransitionComponent={Transition}\n                    keepMounted>\n                    <DialogTitle>{dialogTitle}</DialogTitle>\n                    <DialogContent>\n                    <div>\n                    {dialogContent}\n                    </div>\n                    </DialogContent>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\n\nconst SideMenu = ({ active, image, name, balance }) => {\n    return (\n        <div style={MainStyles.sideNav}>\n            <div className={styles.NavProfileCard}>\n                <div>\n                    <img src={image} alt=\"Player\" />\n                </div>\n                <div>\n                    <h2>{name}</h2>\n                    <span>Balance : {balance} bp</span>\n                </div>\n            </div>\n            <List style={MainStyles.sideNavList}>\n                <Link to='/dashboard' style={{ textDecoration: 'none', color: ColorPalate.greenLight }}>\n                    <ListItem button >\n                        <ListItemIcon style={{ color: active === 'dashboard' ? ColorPalate.greenLight : ColorPalate.green }}>\n                            <Dashboard />\n                        </ListItemIcon>\n                        <ListItemText inset\n                            primary={<span style={{\n                                color:\n                                    active === 'dashboard' ? ColorPalate.greenLight : ColorPalate.green\n                            }}>\n                                Dashboard</span>} />\n                    </ListItem>\n                </Link>\n                <Link to='/tournament' style={{ textDecoration: 'none', color: ColorPalate.greenLight }}>\n                    <ListItem button>\n                        <ListItemIcon style={{ color: active === 'tournament' ? ColorPalate.greenLight : ColorPalate.green }}>\n                            <Icon className=\"fas fa-trophy\" style={{ marginLeft: -2, transform: 'scale(0.79)' }} />\n                        </ListItemIcon>\n                        <ListItemText inset\n                            primary={<span style={{\n                                color:\n                                    active === 'tournament' ? ColorPalate.greenLight : ColorPalate.green\n                            }}>\n                                Tournament</span>} />\n                    </ListItem>\n                </Link>\n                <Link to='/leaderboard' style={{ textDecoration: 'none', color: ColorPalate.greenLight }}>\n                    <ListItem button>\n                        <ListItemIcon style={{ color: active === 'leaderboard' ? ColorPalate.greenLight : ColorPalate.green }}>\n                            <Icon className=\"fab fa-fort-awesome\" style={{ marginLeft: 2, transform: 'scale(0.79)' }} />\n                        </ListItemIcon>\n                        <ListItemText inset\n                            primary={<span style={{\n                                color:\n                                    active === 'leaderboard' ? ColorPalate.greenLight : ColorPalate.green\n                            }}>\n                                Leaderboard</span>} />\n                    </ListItem>\n                </Link>\n                <Divider />\n                <Link to='/wallet' style={{ textDecoration: 'none', color: ColorPalate.greenLight }}>\n                    <ListItem button>\n                        <ListItemIcon style={{ color: active === 'wallet' ? ColorPalate.greenLight : ColorPalate.green }}>\n                            <AccountBalanceWallet />\n                        </ListItemIcon>\n                        <ListItemText inset\n                            primary={<span style={{\n                                color:\n                                    active === 'wallet' ? ColorPalate.greenLight : ColorPalate.green\n                            }}>\n                                Wallet</span>} />\n                    </ListItem>\n                </Link>\n                <Link to='/history' style={{ textDecoration: 'none', color: ColorPalate.greenLight }}>\n                    <ListItem button>\n                        <ListItemIcon style={{ color: active === 'history' ? ColorPalate.greenLight : ColorPalate.green }}>\n                            <Icon className=\"fas fa-scroll\" style={{ marginLeft: -2, transform: 'scale(0.79)' }} />\n                        </ListItemIcon>\n                        <ListItemText inset\n                            primary={<span style={{\n                                color:\n                                    active === 'history' ? ColorPalate.greenLight : ColorPalate.green\n                            }}>\n                                History</span>} />\n                    </ListItem>\n                </Link>\n                <Link to='/profile' style={{ textDecoration: 'none', color: ColorPalate.greenLight }}>\n                    <ListItem button>\n                        <ListItemIcon style={{ color: active === 'profile' ? ColorPalate.greenLight : ColorPalate.green }}>\n                            <Person />\n                        </ListItemIcon>\n                        <ListItemText inset\n                            primary={<span style={{\n                                color:\n                                    active === 'profile' ? ColorPalate.greenLight : ColorPalate.green\n                            }}>\n                                Profile</span>} />\n                    </ListItem>\n                </Link>\n                <Divider />\n                <Link to='/logout' style={{ textDecoration: 'none', color: ColorPalate.greenLight }}>\n                    <ListItem button>\n                        <ListItemIcon style={{ color: ColorPalate.green }}>\n                            <Icon className=\"fas fa-sign-out-alt\" style={{ marginLeft: 2, transform: 'scale(0.79)' }} />\n                        </ListItemIcon>\n                        <ListItemText inset\n                            primary={<span style={{ color: ColorPalate.green }}>\n                                Tournament</span>} />\n                    </ListItem>\n                </Link>\n            </List>\n        </div>\n    );\n}\n","import React, { Component } from 'react';\nimport { MainStyles, myTheme } from '../Components/MainStyles';\nimport { MuiThemeProvider } from '@material-ui/core'\n\nimport { JsonQueryAuth, HostAddress, getCookie } from '../Services/Query'\nimport { Navigation } from '../Components/Navigation';\nimport { MatchCard, ChallengeCard, GameCard } from '../Components/Cards';\n\nimport { Grid, Typography, Button } from '@material-ui/core';\nimport { GridList, GridListTile, GridListTileBar } from '@material-ui/core';\nimport { TextField } from '@material-ui/core';\nimport { ExpansionPanel, ExpansionPanelDetails, ExpansionPanelSummary } from '@material-ui/core';\nimport { Dialog, DialogTitle, DialogContent} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Slide from '@material-ui/core/Slide';\nimport './Dashboard.css'\n\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\n\nexport class Dashboard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isgameSelect: false,\n            isAddGame: false,\n            addGames: [],\n            challenges: [],\n            gameList: [],\n            games: [],\n            matches: [],\n            tournamentMatches: [],\n            game_id: '',\n            game_requirement: '',\n            contact_string: ''\n        }\n    }\n    componentDidMount() {\n        document.body.classList.remove('body-a')\n        this.load()\n    }\n\n    handleChange = name => e => {\n        this.setState({\n            [name]: e.target.value\n        })\n    }\n    load = async () => {\n        const res = await JsonQueryAuth('POST', 'dashboard/', {});\n        let { gamePocket, gameList, challenges, matches, feeds } = res;\n        challenges = challenges.map(ch => {\n            return {\n                _id: ch._id,\n                opponent: ch.challenger._id === getCookie('logauti') ? ch.challenged : ch.challenger,\n                game: ch.game,\n                bet: ch.balance,\n                isChallenger: ch.challenger._id === getCookie('logauti')\n            }\n        });\n        matches = matches.map(ch => {\n            return {\n                _id: ch._id,\n                opponent: ch.challenger._id === getCookie('logauti') ? ch.challenged : ch.challenger,\n                game: ch.game,\n                bet: ch.balance,\n                isTournament: ch.is_tournament\n            }\n        });\n        this.setState({\n            challenges: challenges,\n            matches: matches.filter(m => !m.isTournament),\n            tournamentMatches: matches.filter(m => m.isTournament),\n            games: gamePocket,\n            gameList: gameList\n        });\n        console.log(this.state.games);\n    }\n    toggleAddGame = () => {\n        this.setState({\n            isAddGame: !this.state.isAddGame,\n            isgameSelect: true,\n        })\n    }\n    gameSelect = (id, r) => e => {\n        this.setState({\n            isgameSelect: false,\n            game_id: id,\n            game_requirement: r\n        })\n    }\n    addGameSubmit = async e =>{\n        e.preventDefault()\n        const { game_id, contact_string } = this.state\n        const res = await JsonQueryAuth('post', 'dashboard/game/add', { game_id, contact_string})\n        if(res.errors) {\n            //console.log(res.errors)\n        }else if(res.status === 'ok') {\n            //alert('game added succenssfully')\n            this.toggleAddGame()\n            this.load()\n        }else if(res.status === 'fail') {\n            alert(res.msg);\n        }\n    }\n    \n\n    render() {\n        let content;\n        if (this.state.isgameSelect) {\n            content = (<GridList cellHeight={200} style={MainStyles.gridList}>\n                {this.state.gameList.map(g => (\n                    <GridListTile key={g._id}\n                        cols={window.innerWidth < 600 ? 2 : 1}\n                        onClick={this.gameSelect(g._id, g.requirement)}>\n                        <img src={`${HostAddress}gameimg/${g.image}`} alt={'data.name'} />\n                        <GridListTileBar\n                            title={g.name}\n                            subtitle={<span>Platform: {g.platform === 0 ? 'mobile' : 'PC'}</span>}\n                        />\n                    </GridListTile>\n                ))\n                }\n            </GridList>)\n        } else {\n            content = (\n                <form onSubmit={this.addGameSubmit}>\n                    <div>\n                        <TextField\n                            autoComplete=\"off\"\n                            id=\"outlined-search\"\n                            label={this.state.game_requirement}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            onChange={this.handleChange('contact_string')}\n                            style={{ width: window.innerWidth < 600 ? 'auto' : 400 }}\n                        />\n                    </div>\n                    <Button style={{color: '#157'}} type='submit'>\n                        add Game\n                    </Button>\n                </form>\n            )\n        }\n\n        return (\n            <MuiThemeProvider theme={myTheme}>\n            <div className='Dashboard Page'>\n                <Navigation active='dashboard' load={this.load} />\n                <section className='ContainerCenter'>\n                    <ExpansionPanel style={MainStyles.expansion} defaultExpanded>\n                        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon style={MainStyles.header} />}>\n                            <Typography style={MainStyles.header}><i className=\"fas fa-puzzle-piece\"></i> Challenges</Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails >\n                            <Grid container spacing={16}>\n                                {this.state.challenges.map(clng => <ChallengeCard key={clng._id}\n                                    bet={clng.bet}\n                                    game={clng.game}\n                                    opponent={clng.opponent}\n                                    isChallenger={clng.isChallenger}\n                                    id={clng._id}\n                                    load={this.load}\n                                />)}\n                            </Grid>\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                    <ExpansionPanel style={MainStyles.expansion} defaultExpanded>\n                        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon style={MainStyles.header} />}>\n                            <Typography style={MainStyles.header}><i className=\"fas fa-gamepad\"></i> Challenge Matches</Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails>\n                            <Grid container spacing={16}>\n                                {this.state.matches.map(m => <MatchCard key={m._id}\n                                    bet={m.bet}\n                                    game={m.game}\n                                    opponent={m.opponent}\n                                    id={m._id}\n                                    history={this.props.history}\n                                />)}\n                            </Grid>\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                    <ExpansionPanel style={MainStyles.expansion} defaultExpanded>\n                        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon style={MainStyles.header} />}>\n                            <Typography style={MainStyles.header}><i className=\"fas fa-gamepad\"></i> Tournament Matches</Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails>\n                            <Grid container spacing={16}>\n                                {this.state.tournamentMatches.map(m => <MatchCard key={m._id}\n                                    bet={m.bet}\n                                    game={m.game}\n                                    opponent={m.opponent}\n                                    image={m.image}\n                                    id={m._id}\n                                    image={m.image}\n                                    history={this.props.history}\n                                />)}\n                            </Grid>\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                    <ExpansionPanel style={MainStyles.expansion} defaultExpanded>\n                        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon style={MainStyles.header} />}>\n                            <Typography style={MainStyles.header}><i className=\"fas fa-dice\"></i> Game Librery</Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails>\n                            <Grid container spacing={16}>\n                                {this.state.games.map(game => <GameCard key={game._id} game={game} load={this.load} />)}\n                                <Grid item xs={12} className=\"CneterButton\">\n                                    <Button  className=\"AddMore\" onClick={this.toggleAddGame}>\n                                        Add game\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                    <ExpansionPanel style={MainStyles.expansion} defaultExpanded>\n                        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon style={MainStyles.header} />}>\n                            <Typography style={MainStyles.header}><i className=\"fab fa-pushed\"></i> Feeds</Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails>\n                            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\n                            sit amet blandit leo lobortis eget.\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                </section>\n                <Dialog\n                    open={this.state.isAddGame}\n                    onClose={this.toggleAddGame}\n                    TransitionComponent={Transition}\n                    keepMounted>\n                    <DialogTitle>Games</DialogTitle>\n                    <DialogContent>\n                        <div>\n                            {content}\n                        </div>\n                    </DialogContent>\n                </Dialog>\n            </div>\n            </MuiThemeProvider>\n        );\n    }\n};","import React, { Component } from 'react';\n\nimport { JsonQueryAuth } from '../Services/Query'\n\nimport { Table, TableHead, TableBody, TableCell, TableRow, TablePagination } from '@material-ui/core';\n\n\nexport class MatchTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            columns: ['OPPONENT', 'GAME', 'BET', 'STATUS'],\n            page: 0,\n            rowsPerPage: 10,\n        }\n    }\n    componentDidMount() {\n        this.load()\n    }\n\n    load = async () => {\n        const res = await JsonQueryAuth('post','log', {})\n        console.log(res)\n        if(res.status === 'ok') {\n            this.setState({\n                data : res.match_results\n            })\n        }\n\n    }\n    handleChangePage = (event, page) => {\n        this.setState({ page });\n    };\n\n    handleChangeRowsPerPage = event => {\n        this.setState({ rowsPerPage: event.target.value });\n    };\n    render() {\n        return (\n            <React.Fragment>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            {this.state.columns.map(column =>\n                                <TableCell key={column}>\n                                    {column}\n                                </TableCell>\n                            )}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {this.state.data ? this.state.data\n                        .slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage)\n                        .map(row =>\n                            <TableRow key={row.id}>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {row.opponent.full_name}\n                                </TableCell>\n                                <TableCell>{row.game_name}</TableCell>\n                                <TableCell>{row.bet}</TableCell>\n                                <TableCell>{row.status > 0 ? <span style={{ color: 'GREEN' }}>WON</span> : <span style={{ color: 'red' }}>LOST</span>}</TableCell>\n                            </TableRow>\n                        ) : {}}\n                    </TableBody>\n                </Table>\n                <TablePagination\n                    rowsPerPageOptions={[5,10,20]}\n                    component=\"div\"\n                    count={this.state.data.length}\n                    rowsPerPage={this.state.rowsPerPage}\n                    page={this.state.page}\n                    backIconButtonProps={{\n                        'aria-label': 'Previous Page',\n                    }}\n                    nextIconButtonProps={{\n                        'aria-label': 'Next Page',\n                    }}\n                    onChangePage={this.handleChangePage}\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                />\n            </React.Fragment>\n        )\n    }\n}\n\n\nexport class WalletTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            transaction_log : [],\n            columns: ['BP', 'Date', 'Status'],\n            page: 0,\n            rowsPerPage: 10,\n        }\n    }\n\n    componentDidMount() {\n        this.load()\n    }\n\n    load = async () => {\n        const res = await JsonQueryAuth('post','wallet', {})\n        console.log(res)\n        if(res.status === 'ok') {\n            this.setState({\n                transaction_log : res.transaction_log\n            })\n        }\n\n    }\n\n    handleChangePage = (event, page) => {\n        this.setState({ page });\n    };\n\n    handleChangeRowsPerPage = event => {\n        this.setState({ rowsPerPage: event.target.value });\n    };\n    render() {\n        return (\n            <React.Fragment>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            {this.state.columns.map(column =>\n                                <TableCell key={column}>\n                                    {column}\n                                </TableCell>\n                            )}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {this.state.transaction_log ? this.state.transaction_log\n                        .slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage)\n                        .map(row =>\n                            <TableRow key={row._id}>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {row.bp}\n                                </TableCell>\n                                <TableCell>{row.date}</TableCell>\n                                <TableCell>{row.mode > 0 ? <span style={{ color: 'GREEN' }}>{row.text}</span> : <span style={{ color: 'red' }}>{row.text}</span>}</TableCell>\n                            </TableRow>\n                        ) : {}}\n                    </TableBody>\n                </Table>\n                <TablePagination\n                    rowsPerPageOptions={[5,10,20]}\n                    component=\"div\"\n                    count={this.state.transaction_log ? this.state.transaction_log.length : 0}\n                    rowsPerPage={this.state.rowsPerPage}\n                    page={this.state.page}\n                    backIconButtonProps={{\n                        'aria-label': 'Previous Page',\n                    }}\n                    nextIconButtonProps={{\n                        'aria-label': 'Next Page',\n                    }}\n                    onChangePage={this.handleChangePage}\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                />\n            </React.Fragment>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { myTheme, ColorPalate } from '../Components/MainStyles';\nimport { MuiThemeProvider } from '@material-ui/core'\n\nimport { Navigation } from '../Components/Navigation';\nimport { MatchTable } from '../Components/DataTable';\n\nimport { Paper } from '@material-ui/core';\n\nexport class History extends Component {\n\n    render() {\n        return (\n            <MuiThemeProvider theme={myTheme}>\n            <div className='History Page'>\n                <Navigation active='history' />\n                <section className='ContainerCenter'>\n                    <Paper className='Block'>\n                        <h1 style={{color: ColorPalate.green}}><i className=\"fas fa-chart-bar\"></i> History Log</h1>\n                        <div style={{ width: '100%', overflowX: 'scroll' }}>\n                            <MatchTable />\n                        </div>\n\n                    </Paper>\n                </section>\n            </div>\n            </MuiThemeProvider>\n        )\n    }\n}","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport { MainStyles, ColorPalate, myTheme } from '../Components/MainStyles';\nimport { MuiThemeProvider } from '@material-ui/core';\n\nimport { JsonQueryAuth, HostAddress } from '../Services/Query';\n\nimport { Navigation } from '../Components/Navigation';\n\nimport { Grid } from '@material-ui/core';\nimport { List, ListItem, ListItemText, Avatar, ListSubheader } from '@material-ui/core';\nimport './Leaderboard.css'\n\nexport class Leaderboard extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            champions: [],\n            achieves: {}\n        }\n    }\n    componentDidMount() {\n        this.load()\n    }\n    load = async () => {\n        const res = await JsonQueryAuth('post', 'leaderboard', {})\n        const { champions, achieves } = res\n        this.setState({\n            champions, achieves\n        })\n    }\n    render() {\n        return (\n            <MuiThemeProvider theme={myTheme}>\n            <div className='Leaderboard Page'>\n                <Navigation active='leaderboard' load={this.load}/>\n                <section className='ContainerCenter'>\n                    <Grid container>\n                        <List  style={{ ...MainStyles.paper, width: '100%', margin: '20px' }}\n                    subheader={<ListSubheader component=\"div\" style={{ color: ColorPalate.greenLight }}>Top Rankings</ListSubheader>}\n                >              <div className=\"table\"> \n                                \n                            {\n                                this.state.champions.map(champ => (\n                                    \n                                    <Link to={`/profileOther/${champ._id}`} key={champ._id} style={{ textDecoration: 'none', color: ColorPalate.greenLight }} className=\"table-row\">\n                                    <ListItem button>\n                                    <div className=\"table-cell rank\">\n                                            {champ.rank} \n                                         </div>\n                                        <div className=\"table-cell icon\">\n                                            <Avatar alt=\"Remy Sharp\" src={`${HostAddress}${champ.img}`}\n                                            style={{ width: 50, height: 50 }} />\n                                        </div>\n                                        <div className=\"table-cell playername\">\n                                            {champ.full_name}\n                                         </div>\n                                       \n                                       \n                                        <div className=\"table-cell point\">\n                                            <span style={{ color: ColorPalate.greenLight, fontSize: '1.2rem' }}> ({champ.leader_point} bp)</span>\n                                         </div>                               \n                                        \n                                        <ListItemText\n                                           // primary={<span style={{ color: ColorPalate.green, fontSize: '1.4rem' }}>RANK {champ.rank} | {champ.full_name}</span>}\n                                           // secondary={}\n                                         />\n                                    </ListItem>\n                                    </Link>\n                                   \n                                ))\n                            }\n                            </div>\n                        </List>\n                    </Grid>\n                </section>\n            </div>\n            </MuiThemeProvider>\n        );\n    }\n};","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport { MainStyles, ColorPalate, myTheme } from '../Components/MainStyles';\n\nimport { JsonQueryAuth, PostQueryAuth, HostAddress, getCookie } from '../Services/Query'\nimport openSocket from 'socket.io-client';\n\nimport { Grid, Paper } from '@material-ui/core'\nimport { TextField, Button, Fab } from '@material-ui/core'\nimport { Card, CardActionArea, CardMedia, CardContent } from '@material-ui/core'\nimport { List, ListItem, ListItemText, Avatar } from '@material-ui/core'\nimport { Dialog, DialogTitle, DialogContent, DialogActions, DialogContentText } from '@material-ui/core';\nimport { MuiThemeProvider } from '@material-ui/core'\n\nconst socket = openSocket(HostAddress);\n\nfunction LoadChats(chat_id, cb) {\n    const responseUrl = \"msgcame\" + chat_id;\n    socket.on(responseUrl, data => {\n        cb(data)\n    })\n}\n\nexport class Match extends Component {\n    constructor(props) {\n        super(props)\n        const urlFragments = window.location.href.split('/');\n        const match_id = urlFragments[urlFragments.length - 1];\n        this.state = {\n            match_id: match_id,\n            bet: '',\n            challenger: {},\n            challenged: {},\n            game: {},\n            time: '',\n            sender: '',\n            state: '',\n            chat_id: '',\n            contact_string: '',\n            chatVisible: false,\n            is_c : 0,\n            isAdmitDefeat : false,\n            isClaimVectory : false,\n            image:''\n        }\n    }\n    componentDidMount() {\n        this.load()\n    }\n    load = async e => {\n        \n        const res = await JsonQueryAuth('post', `match/m/${this.state.match_id}`, {})\n        if (res.status === 'ok') {\n            const { game, challenger, challenged, chat_id, sender, contact_string, time, bet,image } = res;\n            const myId = getCookie('logauti')\n            let is_c = 0\n            if(myId === challenger._id) is_c = 1;\n            this.setState({\n                game, challenger, challenged, chat_id, sender, contact_string, time, bet, is_c, chatVisible: true,image\n            });\n        }\n    }\n    toggleAdmitDefeat = () => {\n        this.setState({\n            isAdmitDefeat : !this.state.isAdmitDefeat\n        })\n    }\n    toggleClaimVictory = () => {\n        this.setState({\n            isClaimVectory : !this.state.isClaimVectory\n        })\n    }\n    claimVictory = async e => {\n        e.preventDefault()\n        const imageFile = e.target.files[0]\n        let x = imageFile.name.split('.');\n        x = x[x.length - 1]\n        let fd = new FormData()\n        fd.append('image', imageFile, `${this.state.match_id}.${x}`)\n        fd.append('m_id', this.state.match_id)\n        fd.append('is_c', this.state.is_c)\n        const res = await PostQueryAuth('match/claimVectory', fd)\n        if (res.status === 'ok') {\n            this.toggleClaimVictory();\n            alert(\"victory claimed successfully\");\n        }\n    }\n    admitDefeat = async () => {\n        const data = {\n            m_id : this.state.match_id,\n            is_c : this.state.is_c\n        }\n        const res = await JsonQueryAuth('post', 'match/admitDefeat', data)\n        if(res.status === 'ok') {\n            this.props.history.push('/dashboard')\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <MuiThemeProvider theme={myTheme}>\n                    <div className='Match Page'>\n                        <Grid container justify='center' alignItems='center' >\n                            <Grid item xs={12} md={4} container justify='center' alignItems='center' >\n                                <Card style={{ width: '100%', margin: '20px' }}>\n                                    <CardActionArea>\n                                        <CardMedia\n                                            style={{ height: 200 }}\n                                            image={(this.state.image && this.state.image!='') ? `${HostAddress}tournamentimg/${this.state.image}`:`${HostAddress}gameimg/${this.state.game.image}`}\n                                            title={this.state.game.name}\n                                        />\n                                        <CardContent style={{ ...MainStyles.paper, color: ColorPalate.greenLight }}>\n                                            <h2>{this.state.game.name}</h2>\n                                        </CardContent>\n                                    </CardActionArea>\n                                </Card>\n                                <List style={{ ...MainStyles.paper, width: '100%', margin: '20px' }}>\n                                    <ListItem button >\n                                        <ListItemText\n                                            primary={<span style={{ color: ColorPalate.green, fontSize: '1.4rem' }}> Match Id </span>}\n                                            secondary={<span style={{ color: ColorPalate.greenLight, fontSize: '1.2rem' }}> {this.state.match_id}</span>} />\n                                    </ListItem>\n                                    <ListItem button >\n                                        <ListItemText\n                                            primary={<span style={{ color: ColorPalate.green, fontSize: '1.4rem' }}> Opponent's  Contact</span>}\n                                            secondary={<span style={{ color: ColorPalate.greenLight, fontSize: '1.2rem' }}> {this.state.contact_string} </span>} />\n                                    </ListItem>\n                                    <Link to={`/profileOther/${this.state.challenged._id}`} style={{ textDecoration: 'none', color: ColorPalate.greenLight }}>\n                                    <ListItem button>\n                                        <Avatar\n                                            alt=\"Remy Sharp\"\n                                            src={`${HostAddress}user/${this.state.challenger.folder}/${this.state.challenger.image}`}\n                                            style={{ width: 50, height: 50 }} />\n                                        <ListItemText\n                                            primary={<span style={{ color: ColorPalate.green, fontSize: '1.4rem' }}> Challenger </span>}\n                                            secondary={<span style={{ color: ColorPalate.greenLight, fontSize: '1.2rem' }}> {this.state.challenger.full_name} </span>} />\n                                    </ListItem>\n                                    </Link>\n                                    <Link to={`/profileOther/${this.state.challenged._id}`} style={{ textDecoration: 'none', color: ColorPalate.greenLight }}>\n                                    <ListItem button>\n                                        <Avatar\n                                            alt=\"Remy Sharp\"\n                                            src={`${HostAddress}user/${this.state.challenged.folder}/${this.state.challenged.image}`}\n                                            style={{ width: 50, height: 50 }} />\n                                        <ListItemText\n                                            primary={<span style={{ color: ColorPalate.green, fontSize: '1.4rem' }}> challenged </span>}\n                                            secondary={<span style={{ color: ColorPalate.greenLight, fontSize: '1.2rem' }}> {this.state.challenged.full_name} </span>} />\n                                    </ListItem>\n                                    </Link>\n                                    <ListItem button>\n                                        <ListItemText\n                                            primary={<span style={{ color: ColorPalate.green, fontSize: '1.4rem' }}> bet </span>}\n                                            secondary={<span style={{ color: ColorPalate.greenLight, fontSize: '1.2rem' }}>{this.state.bet}  BP</span>} />\n                                    </ListItem>\n                                </List>\n                            </Grid>\n                            <Grid item xs={12} md={8} style={{ padding: 20 }}>\n                                <Paper style={{ ...MainStyles.paper, padding: 16 }}>\n                                    <h2 style={{ color: ColorPalate.green }}>Evaluation</h2>\n                                    <Button variant='outlined'  onClick={this.toggleClaimVictory} style={{ width: '40%', margin: '2.5%', padding: 16, color: ColorPalate.greenLight }}>Clain Victory</Button>\n                                    <Button variant='outlined' onClick={this.toggleAdmitDefeat} style={{ width: '40%', margin: '2.5%', padding: 16, color: ColorPalate.greenLight }}>Admit Defeat</Button>\n                                </Paper>\n                                <Paper style={{ ...MainStyles.paper, padding: 16, height: '60vh', marginTop: 20 }}>\n                                    <h2 style={{ color: ColorPalate.green }}>Chat</h2>{\n                                        this.state.chatVisible ?\n                                            <ChatBox chat_id={this.state.chat_id} chat_id={this.state.chat_id} sender={this.state.sender} />\n                                            : ''}\n                                </Paper>\n                            </Grid>\n                        </Grid>\n                    </div>\n                    <Dialog\n                        open={this.state.isClaimVectory}\n                        onClose={this.toggleClaimVictory}\n                        keepMounted>\n                        <DialogTitle>UPLOAD SCREENSHOT</DialogTitle>\n                        <DialogContent>\n                            <div>\n                                <form encType=\"multipart/form-data\">\n                                    <Button style={{ margin: '1vw', width: '90%' }}>\n                                        <input type='file'\n                                            style={{ width: '100%', opacity: 0, position: 'absolute' }}\n                                            onChange={this.claimVictory} />\n                                        <span><i className=\"fas fa-upload\"></i> upload screenShot</span>\n                                    </Button>\n                                </form>\n                            </div>\n                        </DialogContent>\n                    </Dialog>\n                    <Dialog open={this.state.isAdmitDefeat} onClose={this.toggleAdmitDefeat} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\">ADMIT DEFEAT</DialogTitle>\n                        <DialogContent>\n                        <DialogContentText>\n                            Do you really want to admit defeat?\n                        </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                        <Button onClick={this.admitDefeat} color='primary'>\n                            Ok\n                        </Button>\n                        <Button onClick={this.toggleAdmitDefeat} color='secondary'>\n                            Cancel\n                        </Button>\n                        </DialogActions>\n                    </Dialog>\n                </MuiThemeProvider>\n            </React.Fragment>\n        )\n    }\n}\n\nclass ChatBox extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            chat_id: this.props.chat_id,\n            messages: [],\n            message: ''\n        }\n        this.chatbox = React.createRef()\n    }\n\n    componentDidMount() {\n        this.load();\n    }\n    handleChange = name => e => {\n        this.setState({\n            [name]: e.target.value\n        })\n    }\n    load = async () => {\n        LoadChats(this.state.chat_id, (data) => {\n            this.setState({\n                messages: data.chat.log\n            })\n            const chatbox = this.chatbox.current\n            if(chatbox !== null && chatbox !== undefined)\n            chatbox.scrollTop = chatbox.scrollHeight\n        })\n        socket.emit('chatResponse', {\n            chatId: this.state.chat_id\n        })\n    }\n    sendMsg = async e => {\n        e.preventDefault();\n        if (this.state.message.length > 0) {\n            socket.emit('chatRequest', {\n                chatId: this.props.chat_id,\n                col: 1,\n                sender: this.props.sender,\n                text: this.state.message\n            })\n            this.setState({\n                message: ''\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Grid container>\n                    <Grid item xs={12}>\n                        <div ref={this.chatbox} style={{width: '100%', height: '40vh',overflowY: 'scroll', overflowX:'hidden'}}>\n                        <div>\n                        {this.state.messages.map(msg => {\n\n                                return (\n                                    <div key={msg._id} style={{margin: 10, display:'flex', width:'100%'\n                                     }}>\n                                     <div style={this.props.sender === msg.name._id? {width: '10%'} : {}}></div>\n                                        <Avatar\n                                            alt=\"Remy Sharp\"\n                                            src={`${HostAddress}user/${msg.name.folder}/${msg.name.image}`}\n                                            style={{ width: 50, height: 50 }} />\n                                        <div className='msgBubble' style={{width:'80%'}}>\n                                            <h4 style={{}}>{msg.name.full_name}</h4>\n                                            <h5 style={{}}>{msg.text}</h5>\n                                        </div>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                        </div>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <form onSubmit={this.sendMsg} className='kami'>\n                            <TextField className='kal' style={{ width: window.innerWidth < 600 ? '76%' : '84%' }}\n                                label='message'\n                                margin='dense'\n                                value={this.state.message}\n                                onChange={this.handleChange('message')}\n                                helperText={'write message'}\n\n                            />\n                            <Fab type='submit' style={{ fontSize: 24, color: ColorPalate.greenLight, backgroundColor: '#444' }}>\n                                <i className=\"fas fa-paper-plane\"></i>\n                            </Fab>\n                        </form>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n\n}","import React, { Component } from 'react';\nimport { MainStyles, ColorPalate, myTheme } from '../Components/MainStyles';\nimport { MuiThemeProvider } from '@material-ui/core'\nimport {  GameCard } from '../Components/Cards';\n\nimport { JsonQueryAuth, HostAddress, PostQueryAuth } from '../Services/Query'\n\nimport { Navigation } from '../Components/Navigation';\n\nimport { Paper, Grid, LinearProgress, TextField } from '@material-ui/core';\nimport { Card, CardMedia, CardActionArea, CardContent, CardActions, Typography, Button, Divider, CircularProgress } from '@material-ui/core';\nimport { Dialog, DialogTitle, DialogContent} from '@material-ui/core';\n\nexport class Profile extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isDataAvailable: false,\n            user: '',\n            image: require('../img/default.jpg'),\n            name: '',\n            match: {},\n            level: {},\n            isChangePassword : false,\n            password : '',\n            new_password: '',\n            msg_password : '',\n            msg_new_password: '',\n            games:[]\n        }\n    }\n    handleChange = name => e => {\n        this.setState({\n            [name]: e.target.value\n        })\n    } \n\n    componentDidMount() {\n        this.load()\n    }\n    load = async e => {\n        const res = await JsonQueryAuth('post', 'profile', {});\n        if (res.status === 'ok') {\n            this.setState({\n                isDataAvailable: true,\n                user: res.user,\n                name: res.user.full_name,\n                image: `${HostAddress}user/${res.user.folder}/${res.user.image}`,\n                match: res.match,\n                level: res.level\n            });\n            const res1 = await JsonQueryAuth('POST', 'info/getGames', {})\n            this.setState({\n                games: res1\n            });\n        }\n    }\n    toggleChangePassword = () => {\n        this.setState({\n            isChangePassword : !this.state.isChangePassword\n        })\n    }\n    clearMsg = () => {\n        this.setState({\n            msg_password: '',\n            msg_new_password: ''\n        });\n    }\n    changePassword = async e => {\n        e.preventDefault()\n        this.clearMsg()\n        const { password, new_password } = this.state\n        const res = await JsonQueryAuth('post', 'profile/update/password', { password, new_password })\n        if (res.errors) {\n            res.errors.map(err => {\n                const fieldName = 'msg_' + err.param;\n                this.setState({ [fieldName]: err.msg });\n                return err\n            });\n        }\n        if(res.status === 'ok' ) {\n            this.load()\n            this.setState({\n              password : '',\n              new_password: ''  \n            })\n            this.toggleChangePassword()\n        }\n    }\n\n    render() {\n        return (\n            <MuiThemeProvider theme={myTheme}>\n            <div className='Profile Page'>\n                <Navigation active='profile' load={this.load} />\n                <section className='ContainerCenter'>\n                    <Paper className='Block' style={MainStyles.block}>\n                        <h1><i className=\"fas fa-users\"></i> Profile</h1><br />\n                        <Grid container spacing={16}>\n                            <Grid item xs={12} md={3}>\n                                <ProfileCard\n                                    load={this.load}\n                                    image={this.state.image}\n                                    name={this.state.name}\n                                    isJenuine={true} />\n                            </Grid>\n                            <Grid item xs={12} md={9}>\n                                {\n                                    this.state.isDataAvailable ? <InfoCard match={this.state.match} level={this.state.level} user={this.state.user} isJenuine={true}/> : ''\n                                }\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                    <Paper className='Block' style={MainStyles.block}>\n                        <h1><i className=\"fas fa-dice\"></i>Game Library</h1>\n                        <br />\n                        <Grid container spacing={16}>\n                                {this.state.games.map(game => <GameCard key={game._id} game={game} load={this.load} />)} \n                        </Grid>\n                    </Paper>\n                    <Paper className='Block' style={MainStyles.block}>\n                        <h1><i className=\"fas fa-cogs\"></i> Profile Settings</h1>\n                        <br />\n                        <Button style={{color: ColorPalate.green}} onClick={this.toggleChangePassword}>\n                        <i className=\"fas fa-unlock\"></i> change password\n                        </Button>\n                    </Paper>\n                </section>\n                <Dialog\n                    open={this.state.isChangePassword}\n                    onClose={this.toggleChangePassword}\n                    keepMounted>\n                    <DialogTitle>Change password</DialogTitle>\n                    <DialogContent>\n                        <div>\n                            <form onSubmit={this.changePassword}>\n                                {//this.changeImageProgress ? <LinearProgress /> : ''\n                                }\n                                <TextField style={{ margin: '1vw', width: '90%' }}\n                                    label=\"Old Password\"\n                                    margin=\"normal\"\n                                    type='password'\n                                    value={this.state.password}\n                                    onChange={this.handleChange('password')}\n                                    helperText={this.state.msg_password}\n                                    error={this.state.msg_password.length > 0}\n                                />\n                                <TextField style={{ margin: '1vw', width: '90%' }}\n                                    label=\"New Password\"\n                                    margin=\"normal\"\n                                    value={this.state.new_password}\n                                    onChange={this.handleChange('new_password')}\n                                    helperText={this.state.msg_new_password}\n                                    error={this.state.msg_new_password.length > 0}\n                                />\n                                <Button type='submit' variant='outlined' style={{ margin: '1vw', width: '90%' }}>\n                                    <span><i className=\"fas fa-upload\"></i> Change Password</span>\n                                </Button>\n                            </form>\n                        </div>\n                    </DialogContent>\n                </Dialog>\n            </div>\n            </MuiThemeProvider>\n        );\n    }\n};\n\nexport class OtherProfile extends Component {\n    constructor(props) {\n        super(props)\n        const urlFragments = window.location.href.split('/');\n        const user_id = urlFragments[urlFragments.length - 1];\n        this.state = {\n            isDataAvailable: false,\n            user_id : user_id,\n            user: '',\n            image: require('../img/default.jpg'),\n            name: '',\n            match: {},\n            level: {},\n        }\n    }\n\n    componentDidMount() {\n        this.load()\n    }\n    load = async e => {\n        const res = await JsonQueryAuth('post', `profile/${this.state.user_id}`, {});\n        if (res.status === 'ok') {\n            this.setState({\n                isDataAvailable: true,\n                user: res.user,\n                name: res.user.full_name,\n                image: `${HostAddress}user/${res.user.folder}/${res.user.image}`,\n                match: res.match,\n                level: res.level\n            })\n            \n        }\n    }\n\n    render() {\n        return (\n            <div className='Profile Page'>\n                <Navigation active='profile' load={this.load} />\n                <section className='ContainerCenter'>\n                    <Paper className='Block' style={MainStyles.block}>\n                        <h1><i className=\"fas fa-users\"></i> Profile</h1><br />\n                        <Grid container spacing={16}>\n                            <Grid item xs={12} md={3}>\n                                <ProfileCard\n                                    load={this.load}\n                                    image={this.state.image}\n                                    name={this.state.name}\n                                    isJenuine={false} />\n                            </Grid>\n                            <Grid item xs={12} md={9}>\n                                {\n                                    this.state.isDataAvailable ? <InfoCard match={this.state.match} level={this.state.level} user={this.state.user} isJenuine={false}/> : ''\n                                }\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </section>\n            </div>\n        );\n    }\n}\n\nclass ProfileCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isChangeImage: false,\n            isChangeName: false,\n            changeImageProgress: false,\n            cahangeNameProgress: false,\n            newName: '',\n            msg_name: ''\n        }\n    }\n    handleChange = name => e => {\n        this.setState({\n            [name]: e.target.value\n        })\n    }\n    toggleChangeImage = () => {\n        this.setState({\n            isChangeImage: !this.state.isChangeImage\n        })\n    }\n    toggleChangeName = () => {\n        this.setState({\n            isChangeName: !this.state.isChangeName,\n            msg_name: ''\n        })\n    }\n    changeImage = async e => {\n        this.setState({\n            changeImageProgress: true\n        })\n        const imageFile = e.target.files[0]\n        let fd = new FormData()\n        fd.append('image', imageFile, 'image.jpg')\n        const res = await PostQueryAuth('profile/update/image', fd)\n        if (res.status === 'ok') {\n            this.setState({\n                changeImageProgress: false\n            })\n            window.location.reload()\n        }\n    }\n    changeName = async e => {\n        e.preventDefault()\n        this.setState({\n            changeNameProgress: true\n        })\n        const res = await JsonQueryAuth('post','profile/update/name', {name : this.state.newName})\n        if(res.errors) {\n            this.setState({\n                msg_name : res.errors[0].msg\n            })\n        }\n        if (res.status === 'ok') {\n            this.setState({\n                changeNameProgress: false,\n                newName : '',\n                msg_name : ''\n            })\n            this.props.load()\n            this.toggleChangeName()\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Card style={{ background: '#333' }}>\n                    <CardActionArea>\n                        <CardMedia\n                            style={{ height: 200 }}\n                            image={this.props.image}\n                            title={this.props.name}\n                        />\n                        <CardContent style={{ height: 20 }}>\n                            <Typography gutterBottom variant=\"h5\" component=\"h1\" style={{ color: ColorPalate.greenLight, fontSize: '1.2rem' }}>\n                                {this.props.name}\n                            </Typography>\n                        </CardContent>\n                    </CardActionArea>\n                    {this.props.isJenuine ?\n                        <CardActions >\n\n                            <Button size=\"small\"\n                                color=\"primary\"\n                                onClick={this.toggleChangeImage}\n                                style={{ color: ColorPalate.green, fontSize: '0.6rem' }}>\n                                Edit Image\n                    </Button>\n                            <Button size=\"small\"\n                                color=\"primary\"\n                                onClick={this.toggleChangeName}\n                                style={{ color: ColorPalate.green, fontSize: '0.6rem' }}>\n                                Edit Name\n                    </Button>\n                        </CardActions>\n                        : ''\n                    }\n                </Card>\n                <Dialog\n                    open={this.state.isChangeImage}\n                    onClose={this.toggleChangeImage}\n                    keepMounted>\n                    <DialogTitle>Change Image</DialogTitle>\n                    <DialogContent>\n                        <div>\n                            <form encType=\"multipart/form-data\">\n                                {this.changeImageProgress ? <LinearProgress /> : ''}\n                                <Button style={{ margin: '1vw', width: '90%' }}>\n                                    <input type='file'\n                                        style={{ width: '100%', opacity: 0, position: 'absolute' }}\n                                        onChange={this.changeImage} />\n                                    <span><i className=\"fas fa-upload\"></i> Upload new profile Image</span>\n                                </Button>\n                            </form>\n                        </div>\n                    </DialogContent>\n                </Dialog>\n                <Dialog\n                    open={this.state.isChangeName}\n                    onClose={this.toggleChangeName}\n                    keepMounted>\n                    <DialogTitle>Change Name</DialogTitle>\n                    <DialogContent>\n                        <div>\n                            <form onSubmit={this.changeName} encType=\"multipart/form-data\">\n                                {this.cahangeNameProgress ? <LinearProgress /> : ''}\n                                <TextField style={{ margin: '1vw', width: '90%' }}\n                                    label=\"New Name\"\n                                    margin=\"normal\"\n                                    value={this.state.newName}\n                                    onChange={this.handleChange('newName')}\n                                    helperText={this.state.msg_name}\n                                    error={this.state.msg_name.length > 0}\n                                />\n                                <Button type='submit' variant='outlined' style={{ margin: '1vw', width: '90%' }}>\n                                    <span><i className=\"fas fa-upload\"></i> change Name</span>\n                                </Button>\n                            </form>\n                        </div>\n                    </DialogContent>\n                </Dialog>\n            </React.Fragment>\n        );\n    }\n}\n\nconst InfoCard = ({ match, level, user, isJenuine }) => {\n    let Info = {\n        email: user.email,\n        Balance: user.balance,\n        level: level.m_level,\n        leader_points: user.leader_point,\n        next_level: level.m_next,\n        total_winning: user.total_bp_win,\n        total_wins: match.m_win,\n        total_matches: match.m_match\n    }\n    if(!isJenuine)\n        Info = {\n            level: level.m_level,\n        leader_points: user.leader_point,\n        next_level: level.m_next,\n        total_winning: user.total_bp_win,\n        total_wins: match.m_win,\n        total_matches: match.m_match\n        }\n    let Percents = {\n        next_level: level.m_levelExpPercent,\n        win_persentage: match.m_average\n    }\n\n    Info = Object.entries(Info);\n    //Percents = Object.entries(Percents);\n\n    return (\n        <Paper style={{ backgroundColor: '#444', padding: 16, color: ColorPalate.greenLight }}>\n            <Grid container>\n            \n                {Info.map(inf => (\n                    <Grid item container xs={12}>\n                        <Grid item xs={12} md={5} style={MainStyles.heading}>{`${inf[0].replace(/_/g, \" \")} :`}</Grid>\n                        <Grid item xs={12} md={7} style={MainStyles.text}>{inf[1]}</Grid>\n                    </Grid>\n                ))}\n                <Divider />\n                <br />\n                <Grid item container xs={12} space={12} justify='center' alignItems='center'>\n                    <Grid item xs={6}>\n                        <CircularProgress thickness={12} className='animated jackInTheBox'\n                            variant=\"static\"\n                            value={Percents.win_persentage}\n                            size='80%'\n                            style={{\n                                color:\n                                    ColorPalate.greenLight\n                            }} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <CircularProgress thickness={16} className='animated jackInTheBox'\n                            variant=\"static\"\n                            value={Percents.next_level}\n                            size='80%' style={{\n                                color:\n                                    ColorPalate.greenLight\n                            }} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <span>win: {Percents.win_persentage}%</span>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <span>next level: {Percents.next_level}%</span>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n}\n","import React, { Component } from 'react';\nimport { MainStyles, ColorPalate, myTheme } from '../Components/MainStyles';\nimport { MuiThemeProvider } from '@material-ui/core'\n\nimport { JsonQueryAuth, HostAddress } from '../Services/Query'\nimport { Navigation } from '../Components/Navigation';\nimport { TournamentCard } from '../Components/Cards';\n\nimport SwipeableViews from 'react-swipeable-views';\nimport { Grid, Typography } from '@material-ui/core';\nimport { Paper, Card, CardMedia, CardContent, CardActionArea } from '@material-ui/core';\nimport { Tab, Tabs, AppBar } from '@material-ui/core';\nimport { Avatar } from '@material-ui/core';\nimport { List, ListItem, ListSubheader, } from '@material-ui/core';\nimport { ExpansionPanel, ExpansionPanelDetails, ExpansionPanelSummary,Button } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nexport class Tournament extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isInTournament: false,\n            tournament_id: ''\n        }\n    }\n    enterTournament = id => {\n        this.setState({\n            isInTournament: true,\n            tournament_id: id\n        })\n    }\n    load = () => {\n        //do nothing\n    }\n    render() {\n        return (\n            <MuiThemeProvider theme={myTheme}>\n            <div className='Tournament Page'>\n                <Navigation active='tournament' load={this.load} />\n                <section className='ContainerCenter'>\n                    {\n                        this.state.isInTournament ? <TournamentInSide tournament_id={this.state.tournament_id} /> :\n                            <TournamentOutSide enterTournament={this.enterTournament} />\n                    }\n                </section>\n            </div>\n            </MuiThemeProvider>\n        )\n    }\n}\n\nclass TournamentOutSide extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            not_participating: [],\n            participating: []\n        }\n    }\n    componentDidMount() {\n        this.load()\n    }\n    load = async () => {\n        const res = await JsonQueryAuth('post', 'tournament', {})\n        this.setState({\n            not_participating: res.tournaments.not_participating,\n            participating: res.tournaments.participating\n        })\n        \n    }\n    render() {\n        return (\n            <React.Fragment>\n                <ExpansionPanel style={MainStyles.expansion} defaultExpanded>\n                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon style={MainStyles.header} />}>\n                        <Typography style={MainStyles.header}><i className=\"fas fa-puzzle-piece\"></i> Participating tournaments</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails >\n                        <Grid container spacing={16}>\n                            {\n                                this.state.participating.map(tour => <TournamentCard key={tour._id}\n                                    isParticipating={true}\n                                    player_count={tour.player_count}\n                                    load={this.load}\n                                    tournament_name={tour.tournament_name}\n                                    game={tour.game}\n                                    image={tour.image}\n                                    current_available={tour.players.length}\n                                    entry_fee={tour.entry_fee}\n                                    custom_fields={tour.custom_fields}\n                                    prize={tour.balance}\n                                    enterTournament={this.props.enterTournament}\n                                    tournament_id={tour._id} />)\n                            }\n                        </Grid>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n                <ExpansionPanel style={MainStyles.expansion} defaultExpanded>\n                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon style={MainStyles.header} />}>\n                        <Typography style={MainStyles.header}><i className=\"fas fa-gamepad\"></i> New Tournaments</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <Grid container spacing={16}>\n                            {\n                                this.state.not_participating.map(tour => <TournamentCard key={tour._id}\n                                    isParticipating={false}\n                                    player_count={tour.player_count}\n                                    image={tour.image}\n                                    load={this.load}\n                                    tournament_name={tour.tournament_name}\n                                    game={tour.game}\n                                    current_available={tour.players.length}\n                                    entry_fee={tour.entry_fee}\n                                    custom_fields={tour.custom_fields}\n                                    prize={tour.balance}\n                                    enterTournament={this.props.enterTournament}\n                                    tournament_id={tour._id} />)\n                            }\n                        </Grid>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n            </React.Fragment>\n        )\n    }\n}\n\nclass TournamentInSide extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            tournament_id: this.props.tournament_id,\n            game: {},\n            players: [],\n            prize1: '',\n            tournament_name:'',\n            prize2: '',\n            bet: '',\n            rules: [],\n            capacity: '',\n            tabId: 0,\n            image:'',\n            custom_fields:[],\n            is_bracket_needed:false,\n            isPlaying:true\n        }\n    }\n    componentDidMount() {\n        this.load()\n    }\n    load = async () => {\n        const res = await JsonQueryAuth('post', `tournament/${this.state.tournament_id}`, {})\n        if (res.status = 'ok') {\n            const { tournament_name,game, players, prize1, prize2, bet, capacity,image,is_bracket_needed,isPlaying} = res\n            let rules = res.rules.split('\\n')\n            this.setState({\n                tournament_name,game, players, prize1, prize2, bet, capacity, rules,image,is_bracket_needed,isPlaying\n            });\n            if(res.custom_fields) {\n                try {\n                    let custom_fields = JSON.parse(res.custom_fields);\n                    this.setState({custom_fields:custom_fields});\n                } catch(e) {\n                }  \n            }\n        }\n    }\n    joinTournament = id => async e => {\n        console.log(id)\n        const res = await JsonQueryAuth('post', `tournament/join/`, { tournament_id: this.state.tournament_id })\n        if (res.status === 'ok') {\n            alert(\"You are successfull joned to this tournament\");\n            this.setState({isPlaying:true});\n            this.load();\n        } else {\n            alert(\"Tournament is not valid/capcity exceeded\");\n            this.setState({isPlaying:true});\n        }\n    }\n    changeTab = (event, value) => {\n        this.setState({ tabId: value })\n    }\n    handleChangeIndex = (index) => {\n        // if(index >= 0 && index <= 1)\n        this.setState({ tabId: index })\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <Grid container justify='center' alignItems='center' >\n                    <Grid item xs={12} md={4} container justify='center' alignItems='center' >\n                        <Card style={{ width: '100%', margin: '20px' }}>\n                            <CardActionArea>\n                                <CardMedia\n                                    style={{ height: 200 }}\n                                    image={(this.state.image && this.state.image!='') ? `${HostAddress}tournamentimg/${this.state.image}`:`${HostAddress}gameimg/${this.state.game.image}`}\n                                    title={this.state.game.name}\n                                />\n                                <CardContent style={{ ...MainStyles.paper, color: ColorPalate.greenLight }}>\n                                    <h2>{this.state.tournament_name || this.state.game.name}</h2>\n                                </CardContent>\n                            </CardActionArea>\n                        </Card>\n                        <TournamentPlayers players={this.state.players} />\n                    </Grid>\n                    <Grid item xs={12} md={8} style={{ padding: 20 }}>\n                        <Paper style={{ ...MainStyles.paper }}>\n                            <AppBar position=\"static\" style={{ backgroundColor: '#444' }}>\n                                <Tabs value={this.state.tabId} onChange={this.changeTab} indicatorColor='primary' textColor='primary'>\n                                    <Tab value={0} label=\"INFO\" style={{ color: this.state.tabId === 0 ? ColorPalate.greenLight : ColorPalate.green }} />\n                                    <Tab value={1} label=\"RULES\" style={{ color: this.state.tabId === 1 ? ColorPalate.greenLight : ColorPalate.green }} />\n                                    \n                                    {this.state.custom_fields.map((custom,index) => \n                                        <Tab key={custom.field_id} value={index + 2} label={custom.label_name} style={{ color: this.state.tabId === custom.field_id ? ColorPalate.greenLight : ColorPalate.green }} />\n                                    )}\n                                </Tabs>\n                            </AppBar>\n                            <SwipeableViews\n                                index={this.state.tabId}\n                                onChangeIndex={this.handleChangeIndex}\n                            >\n                            <Grid container style={{padding: 8}}>\n                                <Grid item xs={12} md={5} style={{color: ColorPalate.greenLight}}>Tournament Id</Grid>\n                                <Grid item xs={12} md={7} style={{color: ColorPalate.green}}>{this.state.tournament_id}</Grid>\n                                <Grid item xs={12} md={5} style={{color: ColorPalate.greenLight}}>Game</Grid>\n                                <Grid item xs={12} md={7} style={{color: ColorPalate.green}}>{this.state.game.name}</Grid>\n                                <Grid item xs={12} md={5} style={{color: ColorPalate.greenLight}}>Entry Fee</Grid>\n                                <Grid item xs={12} md={7} style={{color: ColorPalate.green}}>{this.state.bet} bp</Grid>\n                                <Grid item xs={12} md={5} style={{color: ColorPalate.greenLight}}>First Prize</Grid>\n                                <Grid item xs={12} md={7} style={{color: ColorPalate.green}}>{this.state.prize1} bp</Grid>\n                                <Grid item xs={12} md={5} style={{color: ColorPalate.greenLight}}>Second Prize</Grid>\n                                <Grid item xs={12} md={7} style={{color: ColorPalate.green}}>{this.state.prize2} bp</Grid>\n                                <Grid item xs={12} md={5} style={{color: ColorPalate.greenLight}}>Tournament Capacity</Grid>\n                                <Grid item xs={12} md={7} style={{color: ColorPalate.green}}>{this.state.capacity}</Grid>\n                                <Grid item xs={12} md={5} style={{color: ColorPalate.greenLight}}>Joined players</Grid>\n                                <Grid item xs={12} md={7} style={{color: ColorPalate.green}}>{this.state.players.length}</Grid>\n                                {!this.state.isPlaying &&\n                                    <Grid item xs={12} md={7} style={{color: ColorPalate.green}}>\n                                        <Button style={{ color: ColorPalate.blue, fontWeight: 'bolder' }} onClick={this.joinTournament(this.state.tournament_id)}>\n                                            Join Tournament\n                                        </Button> \n                                    </Grid>\n                                }\n                            </Grid>\n                            <div style={{color: ColorPalate.green, padding: 8}}>\n                            {this.state.rules.map( (r, i) => (<div key={i}>{r}</div>))}\n                            </div>\n                            {this.state.custom_fields.map((custom,index) => \n                                <div style={{color: ColorPalate.green, padding: 8}}>\n                                {custom.field_value}\n                                </div>\n                             )}\n                               \n                            </SwipeableViews>\n                        </Paper>\n                        {this.state.is_bracket_needed !=false &&\n                        <Paper style={{\n                            ...MainStyles.paper, padding: 16, height: '60vh',\n                            marginTop: 20, overflowX: 'auto',\n                            display: 'flex', justifyContent: 'center', alignItems: 'center'\n                        }}>\n                        \n                            <TournamentBracket tournament_id={this.props.tournament_id} />\n                        \n                        </Paper>\n                        }\n                    </Grid>\n                </Grid>\n            </React.Fragment>\n        )\n    }\n}\n\n\nclass TournamentBracket extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            bracket: [],\n            rounds: []\n        }\n    }\n    componentDidMount() {\n        this.load()\n    }\n    load = async () => {\n        const res = await JsonQueryAuth('post', `tournament/bracket/${this.props.tournament_id}`, {})\n        this.setState({\n            bracket: res.bracket.tree,\n            rounds: res.bracket.rounds\n        })\n        window.$(\"#tournamentBracket\").brackets({\n            titles: this.state.rounds,\n            rounds: this.state.bracket,\n            color_title: 'white',\n            border_color: '#666',\n            color_player: 'red',\n            bg_player: '#666',\n            color_player_hover: 'white',\n            bg_player_hover: ColorPalate.green,\n            border_radius_player: '2px',\n            border_radius_lines: '4px',\n        });\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <div id='tournamentBracket'></div>\n            </React.Fragment>\n        );\n    }\n}\n\nclass TournamentPlayers extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <List style={{ ...MainStyles.paper, width: '100%', margin: '20px' }}\n                    subheader={<ListSubheader component=\"div\" style={{ color: ColorPalate.greenLight }}>Perticipating players</ListSubheader>}\n                >\n                    {this.props.players.map(player => (\n                        <ListItem button key={player._id}>\n                            <div style={{ display: 'flex', alignItems: 'center' }}>\n                                <Avatar\n                                    alt={player.full_name}\n                                    src={`${HostAddress}user/${player.folder}/${player.image}`}\n                                />\n                                <span style={{ textAlign: 'center', color: ColorPalate.green, marginLeft: 10 }}>{player.full_name}</span>\n                            </div>\n                        </ListItem>\n                    ))}\n                </List>\n            </React.Fragment>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { myTheme, ColorPalate } from '../Components/MainStyles';\nimport { MuiThemeProvider } from '@material-ui/core'\n\nimport { Paper } from '@material-ui/core';\n\nimport { WalletTable } from '../Components/DataTable'\nimport { Navigation } from '../Components/Navigation';\n\nexport class Wallet extends Component {\n    render() {\n        return(\n            <MuiThemeProvider theme={myTheme}>\n            <div className='Wallet Page'>\n                <Navigation active='wallet'/>\n                <section className='ContainerCenter'>\n                    <Paper className='Block' >\n                        <h1 style={{color: ColorPalate.green}}><i className=\"fas fa-chart-bar\"></i> Wallet Log</h1>\n                        <div style={{ width: '100%', overflowX: 'scroll'}}>\n                        <WalletTable />\n                        </div>\n                    </Paper>\n                </section>\n            </div>\n            </MuiThemeProvider>\n        )\n    }\n}","import React, { Component } from 'react'\n\nexport class NotFound extends Component {\n    render() {\n        return(\n            <div className='page'>\n                404 NotFound\n            </div>\n        )\n    }\n} ","import React,{ Component } from 'react'\nimport BracketStyle from './Bracket.module.css'\n\nconst StyleSheet = {\n    bracketContainer : {\n        width : '90%',\n        height : '40vh',\n        overflow : 'scroll',\n        display: 'flex',\n        alignItems : 'center'\n    },\n    column : {\n        width: '300px',\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent : 'space-between',\n        alignItems : 'center'\n    },\n    bracket : {\n        flex: 1,\n        width: '100%',\n        border: '1px solid black',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems : 'center',\n    },\n    match : {\n        backgroundColor : '#555',\n        color: '#bbb',\n        width: 100,\n        height: 50,\n        boxShadow: '0px 0px 10px 1px #222',\n    }\n}\n\nexport class TournamentBracket extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            data : [\n                [{x: 1, y :2}, {x:3 , y :2}, {x:3 , y :2}, {x:3 , y :2}],\n                [{x:2 , y :3}, {x:3 , y :2}],\n                [{x:2 , y :2}]\n            ]\n        }\n    }\n    render() {\n        return(\n        <div style={StyleSheet.bracketContainer}>\n           {/*  <div style={{position: \"relative\", zIndex: 1}}>\n            <div > \n            </div>\n            \n\n            </div>*/}\n            {\n                this.state.data.map( (round, j) => {\n                    return(\n                        <div style={StyleSheet.column} key={Math.random() * 10000 }>\n                            {\n                                round.map( (match, i) => {\n                                    return(\n                                        <div style={StyleSheet.bracket}>\n                                            <div style={StyleSheet.match} className={BracketStyle.Prev}>\n                                            {match.x} : {match.y}\n                                            </div>\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n                    )\n                })\n            }\n            <Bracket />\n        </div>\n        )\n    }\n}\n\nclass Bracket extends Component {\n    render() {\n        return(\n            <div className={BracketStyle.bracket}>\n\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport './App.css';\n\nimport { Admin } from './Pages/Admin';\nimport { Landing } from './Pages/Landing';\nimport { Dashboard } from './Pages/Dashboard';\nimport { History } from './Pages/History';\nimport { Leaderboard } from './Pages/Leaderboard';\nimport { Match } from './Pages/Match';\nimport { Profile, OtherProfile } from './Pages/Profile';\nimport { Tournament } from './Pages/Tournament';\nimport { Wallet } from './Pages/Wallet';\nimport { NotFound } from './Pages/NotFound'\nimport { TournamentBracket } from './Components/TournamentBracket'\n\nclass App extends Component {\n  render() {\n    return (\n      <Switch>\n        <Route exact path='/' component={Landing} />\n        <Route exact path='/admin' component={Admin} />\n        <Route path='/dashboard' component={Dashboard} />\n        <Route path='/history' component={History} />\n        <Route path='/leaderboard' component={Leaderboard} />\n        <Route path='/profile' component={Profile} />\n        <Route path='/profileOther/:id' component={OtherProfile} />\n        <Route path='/tournament' component={Tournament} />\n        <Route path='/wallet' component={Wallet} />\n        <Route Path='/match/:id' component={Match} />\n        <Route component={NotFound} />\n      </Switch>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render((\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  ), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/default.fd55f441.jpg\";"],"sourceRoot":""}